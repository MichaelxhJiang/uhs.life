[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/twbs_bootstrap/dist/js/bootstrap.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*!                                                                                                                    // 1\n * Bootstrap v3.3.6 (http://getbootstrap.com)                                                                          // 2\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 3\n * Licensed under the MIT license                                                                                      // 4\n */                                                                                                                    // 5\n                                                                                                                       // 6\nif (typeof jQuery === 'undefined') {                                                                                   // 7\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')                                                           // 8\n}                                                                                                                      // 9\n                                                                                                                       // 10\n+function ($) {                                                                                                        // 11\n  'use strict';                                                                                                        // 12\n  var version = $.fn.jquery.split(' ')[0].split('.')                                                                   // 13\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 2)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3')       // 15\n  }                                                                                                                    // 16\n}(jQuery);                                                                                                             // 17\n                                                                                                                       // 18\n/* ========================================================================                                            // 19\n * Bootstrap: transition.js v3.3.6                                                                                     // 20\n * http://getbootstrap.com/javascript/#transitions                                                                     // 21\n * ========================================================================                                            // 22\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 23\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 24\n * ======================================================================== */                                         // 25\n                                                                                                                       // 26\n                                                                                                                       // 27\n+function ($) {                                                                                                        // 28\n  'use strict';                                                                                                        // 29\n                                                                                                                       // 30\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)                                                      // 31\n  // ============================================================                                                      // 32\n                                                                                                                       // 33\n  function transitionEnd() {                                                                                           // 34\n    var el = document.createElement('bootstrap')                                                                       // 35\n                                                                                                                       // 36\n    var transEndEventNames = {                                                                                         // 37\n      WebkitTransition : 'webkitTransitionEnd',                                                                        // 38\n      MozTransition    : 'transitionend',                                                                              // 39\n      OTransition      : 'oTransitionEnd otransitionend',                                                              // 40\n      transition       : 'transitionend'                                                                               // 41\n    }                                                                                                                  // 42\n                                                                                                                       // 43\n    for (var name in transEndEventNames) {                                                                             // 44\n      if (el.style[name] !== undefined) {                                                                              // 45\n        return { end: transEndEventNames[name] }                                                                       // 46\n      }                                                                                                                // 47\n    }                                                                                                                  // 48\n                                                                                                                       // 49\n    return false // explicit for ie8 (  ._.)                                                                           // 50\n  }                                                                                                                    // 51\n                                                                                                                       // 52\n  // http://blog.alexmaccaw.com/css-transitions                                                                        // 53\n  $.fn.emulateTransitionEnd = function (duration) {                                                                    // 54\n    var called = false                                                                                                 // 55\n    var $el = this                                                                                                     // 56\n    $(this).one('bsTransitionEnd', function () { called = true })                                                      // 57\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }                               // 58\n    setTimeout(callback, duration)                                                                                     // 59\n    return this                                                                                                        // 60\n  }                                                                                                                    // 61\n                                                                                                                       // 62\n  $(function () {                                                                                                      // 63\n    $.support.transition = transitionEnd()                                                                             // 64\n                                                                                                                       // 65\n    if (!$.support.transition) return                                                                                  // 66\n                                                                                                                       // 67\n    $.event.special.bsTransitionEnd = {                                                                                // 68\n      bindType: $.support.transition.end,                                                                              // 69\n      delegateType: $.support.transition.end,                                                                          // 70\n      handle: function (e) {                                                                                           // 71\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)                                    // 72\n      }                                                                                                                // 73\n    }                                                                                                                  // 74\n  })                                                                                                                   // 75\n                                                                                                                       // 76\n}(jQuery);                                                                                                             // 77\n                                                                                                                       // 78\n/* ========================================================================                                            // 79\n * Bootstrap: alert.js v3.3.6                                                                                          // 80\n * http://getbootstrap.com/javascript/#alerts                                                                          // 81\n * ========================================================================                                            // 82\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 83\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 84\n * ======================================================================== */                                         // 85\n                                                                                                                       // 86\n                                                                                                                       // 87\n+function ($) {                                                                                                        // 88\n  'use strict';                                                                                                        // 89\n                                                                                                                       // 90\n  // ALERT CLASS DEFINITION                                                                                            // 91\n  // ======================                                                                                            // 92\n                                                                                                                       // 93\n  var dismiss = '[data-dismiss=\"alert\"]'                                                                               // 94\n  var Alert   = function (el) {                                                                                        // 95\n    $(el).on('click', dismiss, this.close)                                                                             // 96\n  }                                                                                                                    // 97\n                                                                                                                       // 98\n  Alert.VERSION = '3.3.6'                                                                                              // 99\n                                                                                                                       // 100\n  Alert.TRANSITION_DURATION = 150                                                                                      // 101\n                                                                                                                       // 102\n  Alert.prototype.close = function (e) {                                                                               // 103\n    var $this    = $(this)                                                                                             // 104\n    var selector = $this.attr('data-target')                                                                           // 105\n                                                                                                                       // 106\n    if (!selector) {                                                                                                   // 107\n      selector = $this.attr('href')                                                                                    // 108\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7                                   // 109\n    }                                                                                                                  // 110\n                                                                                                                       // 111\n    var $parent = $(selector)                                                                                          // 112\n                                                                                                                       // 113\n    if (e) e.preventDefault()                                                                                          // 114\n                                                                                                                       // 115\n    if (!$parent.length) {                                                                                             // 116\n      $parent = $this.closest('.alert')                                                                                // 117\n    }                                                                                                                  // 118\n                                                                                                                       // 119\n    $parent.trigger(e = $.Event('close.bs.alert'))                                                                     // 120\n                                                                                                                       // 121\n    if (e.isDefaultPrevented()) return                                                                                 // 122\n                                                                                                                       // 123\n    $parent.removeClass('in')                                                                                          // 124\n                                                                                                                       // 125\n    function removeElement() {                                                                                         // 126\n      // detach from parent, fire event then clean up data                                                             // 127\n      $parent.detach().trigger('closed.bs.alert').remove()                                                             // 128\n    }                                                                                                                  // 129\n                                                                                                                       // 130\n    $.support.transition && $parent.hasClass('fade') ?                                                                 // 131\n      $parent                                                                                                          // 132\n        .one('bsTransitionEnd', removeElement)                                                                         // 133\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :                                                             // 134\n      removeElement()                                                                                                  // 135\n  }                                                                                                                    // 136\n                                                                                                                       // 137\n                                                                                                                       // 138\n  // ALERT PLUGIN DEFINITION                                                                                           // 139\n  // =======================                                                                                           // 140\n                                                                                                                       // 141\n  function Plugin(option) {                                                                                            // 142\n    return this.each(function () {                                                                                     // 143\n      var $this = $(this)                                                                                              // 144\n      var data  = $this.data('bs.alert')                                                                               // 145\n                                                                                                                       // 146\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))                                                      // 147\n      if (typeof option == 'string') data[option].call($this)                                                          // 148\n    })                                                                                                                 // 149\n  }                                                                                                                    // 150\n                                                                                                                       // 151\n  var old = $.fn.alert                                                                                                 // 152\n                                                                                                                       // 153\n  $.fn.alert             = Plugin                                                                                      // 154\n  $.fn.alert.Constructor = Alert                                                                                       // 155\n                                                                                                                       // 156\n                                                                                                                       // 157\n  // ALERT NO CONFLICT                                                                                                 // 158\n  // =================                                                                                                 // 159\n                                                                                                                       // 160\n  $.fn.alert.noConflict = function () {                                                                                // 161\n    $.fn.alert = old                                                                                                   // 162\n    return this                                                                                                        // 163\n  }                                                                                                                    // 164\n                                                                                                                       // 165\n                                                                                                                       // 166\n  // ALERT DATA-API                                                                                                    // 167\n  // ==============                                                                                                    // 168\n                                                                                                                       // 169\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)                                            // 170\n                                                                                                                       // 171\n}(jQuery);                                                                                                             // 172\n                                                                                                                       // 173\n/* ========================================================================                                            // 174\n * Bootstrap: button.js v3.3.6                                                                                         // 175\n * http://getbootstrap.com/javascript/#buttons                                                                         // 176\n * ========================================================================                                            // 177\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 178\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 179\n * ======================================================================== */                                         // 180\n                                                                                                                       // 181\n                                                                                                                       // 182\n+function ($) {                                                                                                        // 183\n  'use strict';                                                                                                        // 184\n                                                                                                                       // 185\n  // BUTTON PUBLIC CLASS DEFINITION                                                                                    // 186\n  // ==============================                                                                                    // 187\n                                                                                                                       // 188\n  var Button = function (element, options) {                                                                           // 189\n    this.$element  = $(element)                                                                                        // 190\n    this.options   = $.extend({}, Button.DEFAULTS, options)                                                            // 191\n    this.isLoading = false                                                                                             // 192\n  }                                                                                                                    // 193\n                                                                                                                       // 194\n  Button.VERSION  = '3.3.6'                                                                                            // 195\n                                                                                                                       // 196\n  Button.DEFAULTS = {                                                                                                  // 197\n    loadingText: 'loading...'                                                                                          // 198\n  }                                                                                                                    // 199\n                                                                                                                       // 200\n  Button.prototype.setState = function (state) {                                                                       // 201\n    var d    = 'disabled'                                                                                              // 202\n    var $el  = this.$element                                                                                           // 203\n    var val  = $el.is('input') ? 'val' : 'html'                                                                        // 204\n    var data = $el.data()                                                                                              // 205\n                                                                                                                       // 206\n    state += 'Text'                                                                                                    // 207\n                                                                                                                       // 208\n    if (data.resetText == null) $el.data('resetText', $el[val]())                                                      // 209\n                                                                                                                       // 210\n    // push to event loop to allow forms to submit                                                                     // 211\n    setTimeout($.proxy(function () {                                                                                   // 212\n      $el[val](data[state] == null ? this.options[state] : data[state])                                                // 213\n                                                                                                                       // 214\n      if (state == 'loadingText') {                                                                                    // 215\n        this.isLoading = true                                                                                          // 216\n        $el.addClass(d).attr(d, d)                                                                                     // 217\n      } else if (this.isLoading) {                                                                                     // 218\n        this.isLoading = false                                                                                         // 219\n        $el.removeClass(d).removeAttr(d)                                                                               // 220\n      }                                                                                                                // 221\n    }, this), 0)                                                                                                       // 222\n  }                                                                                                                    // 223\n                                                                                                                       // 224\n  Button.prototype.toggle = function () {                                                                              // 225\n    var changed = true                                                                                                 // 226\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')                                                     // 227\n                                                                                                                       // 228\n    if ($parent.length) {                                                                                              // 229\n      var $input = this.$element.find('input')                                                                         // 230\n      if ($input.prop('type') == 'radio') {                                                                            // 231\n        if ($input.prop('checked')) changed = false                                                                    // 232\n        $parent.find('.active').removeClass('active')                                                                  // 233\n        this.$element.addClass('active')                                                                               // 234\n      } else if ($input.prop('type') == 'checkbox') {                                                                  // 235\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false                             // 236\n        this.$element.toggleClass('active')                                                                            // 237\n      }                                                                                                                // 238\n      $input.prop('checked', this.$element.hasClass('active'))                                                         // 239\n      if (changed) $input.trigger('change')                                                                            // 240\n    } else {                                                                                                           // 241\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))                                            // 242\n      this.$element.toggleClass('active')                                                                              // 243\n    }                                                                                                                  // 244\n  }                                                                                                                    // 245\n                                                                                                                       // 246\n                                                                                                                       // 247\n  // BUTTON PLUGIN DEFINITION                                                                                          // 248\n  // ========================                                                                                          // 249\n                                                                                                                       // 250\n  function Plugin(option) {                                                                                            // 251\n    return this.each(function () {                                                                                     // 252\n      var $this   = $(this)                                                                                            // 253\n      var data    = $this.data('bs.button')                                                                            // 254\n      var options = typeof option == 'object' && option                                                                // 255\n                                                                                                                       // 256\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))                                           // 257\n                                                                                                                       // 258\n      if (option == 'toggle') data.toggle()                                                                            // 259\n      else if (option) data.setState(option)                                                                           // 260\n    })                                                                                                                 // 261\n  }                                                                                                                    // 262\n                                                                                                                       // 263\n  var old = $.fn.button                                                                                                // 264\n                                                                                                                       // 265\n  $.fn.button             = Plugin                                                                                     // 266\n  $.fn.button.Constructor = Button                                                                                     // 267\n                                                                                                                       // 268\n                                                                                                                       // 269\n  // BUTTON NO CONFLICT                                                                                                // 270\n  // ==================                                                                                                // 271\n                                                                                                                       // 272\n  $.fn.button.noConflict = function () {                                                                               // 273\n    $.fn.button = old                                                                                                  // 274\n    return this                                                                                                        // 275\n  }                                                                                                                    // 276\n                                                                                                                       // 277\n                                                                                                                       // 278\n  // BUTTON DATA-API                                                                                                   // 279\n  // ===============                                                                                                   // 280\n                                                                                                                       // 281\n  $(document)                                                                                                          // 282\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {                                          // 283\n      var $btn = $(e.target)                                                                                           // 284\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')                                                           // 285\n      Plugin.call($btn, 'toggle')                                                                                      // 286\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()     // 287\n    })                                                                                                                 // 288\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {                  // 289\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))                                    // 290\n    })                                                                                                                 // 291\n                                                                                                                       // 292\n}(jQuery);                                                                                                             // 293\n                                                                                                                       // 294\n/* ========================================================================                                            // 295\n * Bootstrap: carousel.js v3.3.6                                                                                       // 296\n * http://getbootstrap.com/javascript/#carousel                                                                        // 297\n * ========================================================================                                            // 298\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 299\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 300\n * ======================================================================== */                                         // 301\n                                                                                                                       // 302\n                                                                                                                       // 303\n+function ($) {                                                                                                        // 304\n  'use strict';                                                                                                        // 305\n                                                                                                                       // 306\n  // CAROUSEL CLASS DEFINITION                                                                                         // 307\n  // =========================                                                                                         // 308\n                                                                                                                       // 309\n  var Carousel = function (element, options) {                                                                         // 310\n    this.$element    = $(element)                                                                                      // 311\n    this.$indicators = this.$element.find('.carousel-indicators')                                                      // 312\n    this.options     = options                                                                                         // 313\n    this.paused      = null                                                                                            // 314\n    this.sliding     = null                                                                                            // 315\n    this.interval    = null                                                                                            // 316\n    this.$active     = null                                                                                            // 317\n    this.$items      = null                                                                                            // 318\n                                                                                                                       // 319\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))                      // 320\n                                                                                                                       // 321\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element                    // 322\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))                                                         // 323\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))                                                         // 324\n  }                                                                                                                    // 325\n                                                                                                                       // 326\n  Carousel.VERSION  = '3.3.6'                                                                                          // 327\n                                                                                                                       // 328\n  Carousel.TRANSITION_DURATION = 600                                                                                   // 329\n                                                                                                                       // 330\n  Carousel.DEFAULTS = {                                                                                                // 331\n    interval: 5000,                                                                                                    // 332\n    pause: 'hover',                                                                                                    // 333\n    wrap: true,                                                                                                        // 334\n    keyboard: true                                                                                                     // 335\n  }                                                                                                                    // 336\n                                                                                                                       // 337\n  Carousel.prototype.keydown = function (e) {                                                                          // 338\n    if (/input|textarea/i.test(e.target.tagName)) return                                                               // 339\n    switch (e.which) {                                                                                                 // 340\n      case 37: this.prev(); break                                                                                      // 341\n      case 39: this.next(); break                                                                                      // 342\n      default: return                                                                                                  // 343\n    }                                                                                                                  // 344\n                                                                                                                       // 345\n    e.preventDefault()                                                                                                 // 346\n  }                                                                                                                    // 347\n                                                                                                                       // 348\n  Carousel.prototype.cycle = function (e) {                                                                            // 349\n    e || (this.paused = false)                                                                                         // 350\n                                                                                                                       // 351\n    this.interval && clearInterval(this.interval)                                                                      // 352\n                                                                                                                       // 353\n    this.options.interval                                                                                              // 354\n      && !this.paused                                                                                                  // 355\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))                                // 356\n                                                                                                                       // 357\n    return this                                                                                                        // 358\n  }                                                                                                                    // 359\n                                                                                                                       // 360\n  Carousel.prototype.getItemIndex = function (item) {                                                                  // 361\n    this.$items = item.parent().children('.item')                                                                      // 362\n    return this.$items.index(item || this.$active)                                                                     // 363\n  }                                                                                                                    // 364\n                                                                                                                       // 365\n  Carousel.prototype.getItemForDirection = function (direction, active) {                                              // 366\n    var activeIndex = this.getItemIndex(active)                                                                        // 367\n    var willWrap = (direction == 'prev' && activeIndex === 0)                                                          // 368\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))                                    // 369\n    if (willWrap && !this.options.wrap) return active                                                                  // 370\n    var delta = direction == 'prev' ? -1 : 1                                                                           // 371\n    var itemIndex = (activeIndex + delta) % this.$items.length                                                         // 372\n    return this.$items.eq(itemIndex)                                                                                   // 373\n  }                                                                                                                    // 374\n                                                                                                                       // 375\n  Carousel.prototype.to = function (pos) {                                                                             // 376\n    var that        = this                                                                                             // 377\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))                             // 378\n                                                                                                                       // 379\n    if (pos > (this.$items.length - 1) || pos < 0) return                                                              // 380\n                                                                                                                       // 381\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"  // 382\n    if (activeIndex == pos) return this.pause().cycle()                                                                // 383\n                                                                                                                       // 384\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))                                        // 385\n  }                                                                                                                    // 386\n                                                                                                                       // 387\n  Carousel.prototype.pause = function (e) {                                                                            // 388\n    e || (this.paused = true)                                                                                          // 389\n                                                                                                                       // 390\n    if (this.$element.find('.next, .prev').length && $.support.transition) {                                           // 391\n      this.$element.trigger($.support.transition.end)                                                                  // 392\n      this.cycle(true)                                                                                                 // 393\n    }                                                                                                                  // 394\n                                                                                                                       // 395\n    this.interval = clearInterval(this.interval)                                                                       // 396\n                                                                                                                       // 397\n    return this                                                                                                        // 398\n  }                                                                                                                    // 399\n                                                                                                                       // 400\n  Carousel.prototype.next = function () {                                                                              // 401\n    if (this.sliding) return                                                                                           // 402\n    return this.slide('next')                                                                                          // 403\n  }                                                                                                                    // 404\n                                                                                                                       // 405\n  Carousel.prototype.prev = function () {                                                                              // 406\n    if (this.sliding) return                                                                                           // 407\n    return this.slide('prev')                                                                                          // 408\n  }                                                                                                                    // 409\n                                                                                                                       // 410\n  Carousel.prototype.slide = function (type, next) {                                                                   // 411\n    var $active   = this.$element.find('.item.active')                                                                 // 412\n    var $next     = next || this.getItemForDirection(type, $active)                                                    // 413\n    var isCycling = this.interval                                                                                      // 414\n    var direction = type == 'next' ? 'left' : 'right'                                                                  // 415\n    var that      = this                                                                                               // 416\n                                                                                                                       // 417\n    if ($next.hasClass('active')) return (this.sliding = false)                                                        // 418\n                                                                                                                       // 419\n    var relatedTarget = $next[0]                                                                                       // 420\n    var slideEvent = $.Event('slide.bs.carousel', {                                                                    // 421\n      relatedTarget: relatedTarget,                                                                                    // 422\n      direction: direction                                                                                             // 423\n    })                                                                                                                 // 424\n    this.$element.trigger(slideEvent)                                                                                  // 425\n    if (slideEvent.isDefaultPrevented()) return                                                                        // 426\n                                                                                                                       // 427\n    this.sliding = true                                                                                                // 428\n                                                                                                                       // 429\n    isCycling && this.pause()                                                                                          // 430\n                                                                                                                       // 431\n    if (this.$indicators.length) {                                                                                     // 432\n      this.$indicators.find('.active').removeClass('active')                                                           // 433\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])                                    // 434\n      $nextIndicator && $nextIndicator.addClass('active')                                                              // 435\n    }                                                                                                                  // 436\n                                                                                                                       // 437\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {                                                     // 439\n      $next.addClass(type)                                                                                             // 440\n      $next[0].offsetWidth // force reflow                                                                             // 441\n      $active.addClass(direction)                                                                                      // 442\n      $next.addClass(direction)                                                                                        // 443\n      $active                                                                                                          // 444\n        .one('bsTransitionEnd', function () {                                                                          // 445\n          $next.removeClass([type, direction].join(' ')).addClass('active')                                            // 446\n          $active.removeClass(['active', direction].join(' '))                                                         // 447\n          that.sliding = false                                                                                         // 448\n          setTimeout(function () {                                                                                     // 449\n            that.$element.trigger(slidEvent)                                                                           // 450\n          }, 0)                                                                                                        // 451\n        })                                                                                                             // 452\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)                                                            // 453\n    } else {                                                                                                           // 454\n      $active.removeClass('active')                                                                                    // 455\n      $next.addClass('active')                                                                                         // 456\n      this.sliding = false                                                                                             // 457\n      this.$element.trigger(slidEvent)                                                                                 // 458\n    }                                                                                                                  // 459\n                                                                                                                       // 460\n    isCycling && this.cycle()                                                                                          // 461\n                                                                                                                       // 462\n    return this                                                                                                        // 463\n  }                                                                                                                    // 464\n                                                                                                                       // 465\n                                                                                                                       // 466\n  // CAROUSEL PLUGIN DEFINITION                                                                                        // 467\n  // ==========================                                                                                        // 468\n                                                                                                                       // 469\n  function Plugin(option) {                                                                                            // 470\n    return this.each(function () {                                                                                     // 471\n      var $this   = $(this)                                                                                            // 472\n      var data    = $this.data('bs.carousel')                                                                          // 473\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)                 // 474\n      var action  = typeof option == 'string' ? option : options.slide                                                 // 475\n                                                                                                                       // 476\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))                                       // 477\n      if (typeof option == 'number') data.to(option)                                                                   // 478\n      else if (action) data[action]()                                                                                  // 479\n      else if (options.interval) data.pause().cycle()                                                                  // 480\n    })                                                                                                                 // 481\n  }                                                                                                                    // 482\n                                                                                                                       // 483\n  var old = $.fn.carousel                                                                                              // 484\n                                                                                                                       // 485\n  $.fn.carousel             = Plugin                                                                                   // 486\n  $.fn.carousel.Constructor = Carousel                                                                                 // 487\n                                                                                                                       // 488\n                                                                                                                       // 489\n  // CAROUSEL NO CONFLICT                                                                                              // 490\n  // ====================                                                                                              // 491\n                                                                                                                       // 492\n  $.fn.carousel.noConflict = function () {                                                                             // 493\n    $.fn.carousel = old                                                                                                // 494\n    return this                                                                                                        // 495\n  }                                                                                                                    // 496\n                                                                                                                       // 497\n                                                                                                                       // 498\n  // CAROUSEL DATA-API                                                                                                 // 499\n  // =================                                                                                                 // 500\n                                                                                                                       // 501\n  var clickHandler = function (e) {                                                                                    // 502\n    var href                                                                                                           // 503\n    var $this   = $(this)                                                                                              // 504\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return                                                                          // 506\n    var options = $.extend({}, $target.data(), $this.data())                                                           // 507\n    var slideIndex = $this.attr('data-slide-to')                                                                       // 508\n    if (slideIndex) options.interval = false                                                                           // 509\n                                                                                                                       // 510\n    Plugin.call($target, options)                                                                                      // 511\n                                                                                                                       // 512\n    if (slideIndex) {                                                                                                  // 513\n      $target.data('bs.carousel').to(slideIndex)                                                                       // 514\n    }                                                                                                                  // 515\n                                                                                                                       // 516\n    e.preventDefault()                                                                                                 // 517\n  }                                                                                                                    // 518\n                                                                                                                       // 519\n  $(document)                                                                                                          // 520\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)                                                    // 521\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)                                                 // 522\n                                                                                                                       // 523\n  $(window).on('load', function () {                                                                                   // 524\n    $('[data-ride=\"carousel\"]').each(function () {                                                                     // 525\n      var $carousel = $(this)                                                                                          // 526\n      Plugin.call($carousel, $carousel.data())                                                                         // 527\n    })                                                                                                                 // 528\n  })                                                                                                                   // 529\n                                                                                                                       // 530\n}(jQuery);                                                                                                             // 531\n                                                                                                                       // 532\n/* ========================================================================                                            // 533\n * Bootstrap: collapse.js v3.3.6                                                                                       // 534\n * http://getbootstrap.com/javascript/#collapse                                                                        // 535\n * ========================================================================                                            // 536\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 537\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 538\n * ======================================================================== */                                         // 539\n                                                                                                                       // 540\n                                                                                                                       // 541\n+function ($) {                                                                                                        // 542\n  'use strict';                                                                                                        // 543\n                                                                                                                       // 544\n  // COLLAPSE PUBLIC CLASS DEFINITION                                                                                  // 545\n  // ================================                                                                                  // 546\n                                                                                                                       // 547\n  var Collapse = function (element, options) {                                                                         // 548\n    this.$element      = $(element)                                                                                    // 549\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)                                                      // 550\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +                                   // 551\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')                              // 552\n    this.transitioning = null                                                                                          // 553\n                                                                                                                       // 554\n    if (this.options.parent) {                                                                                         // 555\n      this.$parent = this.getParent()                                                                                  // 556\n    } else {                                                                                                           // 557\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)                                                      // 558\n    }                                                                                                                  // 559\n                                                                                                                       // 560\n    if (this.options.toggle) this.toggle()                                                                             // 561\n  }                                                                                                                    // 562\n                                                                                                                       // 563\n  Collapse.VERSION  = '3.3.6'                                                                                          // 564\n                                                                                                                       // 565\n  Collapse.TRANSITION_DURATION = 350                                                                                   // 566\n                                                                                                                       // 567\n  Collapse.DEFAULTS = {                                                                                                // 568\n    toggle: true                                                                                                       // 569\n  }                                                                                                                    // 570\n                                                                                                                       // 571\n  Collapse.prototype.dimension = function () {                                                                         // 572\n    var hasWidth = this.$element.hasClass('width')                                                                     // 573\n    return hasWidth ? 'width' : 'height'                                                                               // 574\n  }                                                                                                                    // 575\n                                                                                                                       // 576\n  Collapse.prototype.show = function () {                                                                              // 577\n    if (this.transitioning || this.$element.hasClass('in')) return                                                     // 578\n                                                                                                                       // 579\n    var activesData                                                                                                    // 580\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')                         // 581\n                                                                                                                       // 582\n    if (actives && actives.length) {                                                                                   // 583\n      activesData = actives.data('bs.collapse')                                                                        // 584\n      if (activesData && activesData.transitioning) return                                                             // 585\n    }                                                                                                                  // 586\n                                                                                                                       // 587\n    var startEvent = $.Event('show.bs.collapse')                                                                       // 588\n    this.$element.trigger(startEvent)                                                                                  // 589\n    if (startEvent.isDefaultPrevented()) return                                                                        // 590\n                                                                                                                       // 591\n    if (actives && actives.length) {                                                                                   // 592\n      Plugin.call(actives, 'hide')                                                                                     // 593\n      activesData || actives.data('bs.collapse', null)                                                                 // 594\n    }                                                                                                                  // 595\n                                                                                                                       // 596\n    var dimension = this.dimension()                                                                                   // 597\n                                                                                                                       // 598\n    this.$element                                                                                                      // 599\n      .removeClass('collapse')                                                                                         // 600\n      .addClass('collapsing')[dimension](0)                                                                            // 601\n      .attr('aria-expanded', true)                                                                                     // 602\n                                                                                                                       // 603\n    this.$trigger                                                                                                      // 604\n      .removeClass('collapsed')                                                                                        // 605\n      .attr('aria-expanded', true)                                                                                     // 606\n                                                                                                                       // 607\n    this.transitioning = 1                                                                                             // 608\n                                                                                                                       // 609\n    var complete = function () {                                                                                       // 610\n      this.$element                                                                                                    // 611\n        .removeClass('collapsing')                                                                                     // 612\n        .addClass('collapse in')[dimension]('')                                                                        // 613\n      this.transitioning = 0                                                                                           // 614\n      this.$element                                                                                                    // 615\n        .trigger('shown.bs.collapse')                                                                                  // 616\n    }                                                                                                                  // 617\n                                                                                                                       // 618\n    if (!$.support.transition) return complete.call(this)                                                              // 619\n                                                                                                                       // 620\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))                                                      // 621\n                                                                                                                       // 622\n    this.$element                                                                                                      // 623\n      .one('bsTransitionEnd', $.proxy(complete, this))                                                                 // 624\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])                     // 625\n  }                                                                                                                    // 626\n                                                                                                                       // 627\n  Collapse.prototype.hide = function () {                                                                              // 628\n    if (this.transitioning || !this.$element.hasClass('in')) return                                                    // 629\n                                                                                                                       // 630\n    var startEvent = $.Event('hide.bs.collapse')                                                                       // 631\n    this.$element.trigger(startEvent)                                                                                  // 632\n    if (startEvent.isDefaultPrevented()) return                                                                        // 633\n                                                                                                                       // 634\n    var dimension = this.dimension()                                                                                   // 635\n                                                                                                                       // 636\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight                                               // 637\n                                                                                                                       // 638\n    this.$element                                                                                                      // 639\n      .addClass('collapsing')                                                                                          // 640\n      .removeClass('collapse in')                                                                                      // 641\n      .attr('aria-expanded', false)                                                                                    // 642\n                                                                                                                       // 643\n    this.$trigger                                                                                                      // 644\n      .addClass('collapsed')                                                                                           // 645\n      .attr('aria-expanded', false)                                                                                    // 646\n                                                                                                                       // 647\n    this.transitioning = 1                                                                                             // 648\n                                                                                                                       // 649\n    var complete = function () {                                                                                       // 650\n      this.transitioning = 0                                                                                           // 651\n      this.$element                                                                                                    // 652\n        .removeClass('collapsing')                                                                                     // 653\n        .addClass('collapse')                                                                                          // 654\n        .trigger('hidden.bs.collapse')                                                                                 // 655\n    }                                                                                                                  // 656\n                                                                                                                       // 657\n    if (!$.support.transition) return complete.call(this)                                                              // 658\n                                                                                                                       // 659\n    this.$element                                                                                                      // 660\n      [dimension](0)                                                                                                   // 661\n      .one('bsTransitionEnd', $.proxy(complete, this))                                                                 // 662\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)                                                              // 663\n  }                                                                                                                    // 664\n                                                                                                                       // 665\n  Collapse.prototype.toggle = function () {                                                                            // 666\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()                                                             // 667\n  }                                                                                                                    // 668\n                                                                                                                       // 669\n  Collapse.prototype.getParent = function () {                                                                         // 670\n    return $(this.options.parent)                                                                                      // 671\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')                                     // 672\n      .each($.proxy(function (i, element) {                                                                            // 673\n        var $element = $(element)                                                                                      // 674\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)                                        // 675\n      }, this))                                                                                                        // 676\n      .end()                                                                                                           // 677\n  }                                                                                                                    // 678\n                                                                                                                       // 679\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {                                        // 680\n    var isOpen = $element.hasClass('in')                                                                               // 681\n                                                                                                                       // 682\n    $element.attr('aria-expanded', isOpen)                                                                             // 683\n    $trigger                                                                                                           // 684\n      .toggleClass('collapsed', !isOpen)                                                                               // 685\n      .attr('aria-expanded', isOpen)                                                                                   // 686\n  }                                                                                                                    // 687\n                                                                                                                       // 688\n  function getTargetFromTrigger($trigger) {                                                                            // 689\n    var href                                                                                                           // 690\n    var target = $trigger.attr('data-target')                                                                          // 691\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7                         // 692\n                                                                                                                       // 693\n    return $(target)                                                                                                   // 694\n  }                                                                                                                    // 695\n                                                                                                                       // 696\n                                                                                                                       // 697\n  // COLLAPSE PLUGIN DEFINITION                                                                                        // 698\n  // ==========================                                                                                        // 699\n                                                                                                                       // 700\n  function Plugin(option) {                                                                                            // 701\n    return this.each(function () {                                                                                     // 702\n      var $this   = $(this)                                                                                            // 703\n      var data    = $this.data('bs.collapse')                                                                          // 704\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)                 // 705\n                                                                                                                       // 706\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false                                  // 707\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))                                       // 708\n      if (typeof option == 'string') data[option]()                                                                    // 709\n    })                                                                                                                 // 710\n  }                                                                                                                    // 711\n                                                                                                                       // 712\n  var old = $.fn.collapse                                                                                              // 713\n                                                                                                                       // 714\n  $.fn.collapse             = Plugin                                                                                   // 715\n  $.fn.collapse.Constructor = Collapse                                                                                 // 716\n                                                                                                                       // 717\n                                                                                                                       // 718\n  // COLLAPSE NO CONFLICT                                                                                              // 719\n  // ====================                                                                                              // 720\n                                                                                                                       // 721\n  $.fn.collapse.noConflict = function () {                                                                             // 722\n    $.fn.collapse = old                                                                                                // 723\n    return this                                                                                                        // 724\n  }                                                                                                                    // 725\n                                                                                                                       // 726\n                                                                                                                       // 727\n  // COLLAPSE DATA-API                                                                                                 // 728\n  // =================                                                                                                 // 729\n                                                                                                                       // 730\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {                              // 731\n    var $this   = $(this)                                                                                              // 732\n                                                                                                                       // 733\n    if (!$this.attr('data-target')) e.preventDefault()                                                                 // 734\n                                                                                                                       // 735\n    var $target = getTargetFromTrigger($this)                                                                          // 736\n    var data    = $target.data('bs.collapse')                                                                          // 737\n    var option  = data ? 'toggle' : $this.data()                                                                       // 738\n                                                                                                                       // 739\n    Plugin.call($target, option)                                                                                       // 740\n  })                                                                                                                   // 741\n                                                                                                                       // 742\n}(jQuery);                                                                                                             // 743\n                                                                                                                       // 744\n/* ========================================================================                                            // 745\n * Bootstrap: dropdown.js v3.3.6                                                                                       // 746\n * http://getbootstrap.com/javascript/#dropdowns                                                                       // 747\n * ========================================================================                                            // 748\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 749\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 750\n * ======================================================================== */                                         // 751\n                                                                                                                       // 752\n                                                                                                                       // 753\n+function ($) {                                                                                                        // 754\n  'use strict';                                                                                                        // 755\n                                                                                                                       // 756\n  // DROPDOWN CLASS DEFINITION                                                                                         // 757\n  // =========================                                                                                         // 758\n                                                                                                                       // 759\n  var backdrop = '.dropdown-backdrop'                                                                                  // 760\n  var toggle   = '[data-toggle=\"dropdown\"]'                                                                            // 761\n  var Dropdown = function (element) {                                                                                  // 762\n    $(element).on('click.bs.dropdown', this.toggle)                                                                    // 763\n  }                                                                                                                    // 764\n                                                                                                                       // 765\n  Dropdown.VERSION = '3.3.6'                                                                                           // 766\n                                                                                                                       // 767\n  function getParent($this) {                                                                                          // 768\n    var selector = $this.attr('data-target')                                                                           // 769\n                                                                                                                       // 770\n    if (!selector) {                                                                                                   // 771\n      selector = $this.attr('href')                                                                                    // 772\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7     // 773\n    }                                                                                                                  // 774\n                                                                                                                       // 775\n    var $parent = selector && $(selector)                                                                              // 776\n                                                                                                                       // 777\n    return $parent && $parent.length ? $parent : $this.parent()                                                        // 778\n  }                                                                                                                    // 779\n                                                                                                                       // 780\n  function clearMenus(e) {                                                                                             // 781\n    if (e && e.which === 3) return                                                                                     // 782\n    $(backdrop).remove()                                                                                               // 783\n    $(toggle).each(function () {                                                                                       // 784\n      var $this         = $(this)                                                                                      // 785\n      var $parent       = getParent($this)                                                                             // 786\n      var relatedTarget = { relatedTarget: this }                                                                      // 787\n                                                                                                                       // 788\n      if (!$parent.hasClass('open')) return                                                                            // 789\n                                                                                                                       // 790\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n                                                                                                                       // 792\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))                                                  // 793\n                                                                                                                       // 794\n      if (e.isDefaultPrevented()) return                                                                               // 795\n                                                                                                                       // 796\n      $this.attr('aria-expanded', 'false')                                                                             // 797\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))                                // 798\n    })                                                                                                                 // 799\n  }                                                                                                                    // 800\n                                                                                                                       // 801\n  Dropdown.prototype.toggle = function (e) {                                                                           // 802\n    var $this = $(this)                                                                                                // 803\n                                                                                                                       // 804\n    if ($this.is('.disabled, :disabled')) return                                                                       // 805\n                                                                                                                       // 806\n    var $parent  = getParent($this)                                                                                    // 807\n    var isActive = $parent.hasClass('open')                                                                            // 808\n                                                                                                                       // 809\n    clearMenus()                                                                                                       // 810\n                                                                                                                       // 811\n    if (!isActive) {                                                                                                   // 812\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {                      // 813\n        // if mobile we use a backdrop because click events don't delegate                                             // 814\n        $(document.createElement('div'))                                                                               // 815\n          .addClass('dropdown-backdrop')                                                                               // 816\n          .insertAfter($(this))                                                                                        // 817\n          .on('click', clearMenus)                                                                                     // 818\n      }                                                                                                                // 819\n                                                                                                                       // 820\n      var relatedTarget = { relatedTarget: this }                                                                      // 821\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))                                                  // 822\n                                                                                                                       // 823\n      if (e.isDefaultPrevented()) return                                                                               // 824\n                                                                                                                       // 825\n      $this                                                                                                            // 826\n        .trigger('focus')                                                                                              // 827\n        .attr('aria-expanded', 'true')                                                                                 // 828\n                                                                                                                       // 829\n      $parent                                                                                                          // 830\n        .toggleClass('open')                                                                                           // 831\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))                                                          // 832\n    }                                                                                                                  // 833\n                                                                                                                       // 834\n    return false                                                                                                       // 835\n  }                                                                                                                    // 836\n                                                                                                                       // 837\n  Dropdown.prototype.keydown = function (e) {                                                                          // 838\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return                             // 839\n                                                                                                                       // 840\n    var $this = $(this)                                                                                                // 841\n                                                                                                                       // 842\n    e.preventDefault()                                                                                                 // 843\n    e.stopPropagation()                                                                                                // 844\n                                                                                                                       // 845\n    if ($this.is('.disabled, :disabled')) return                                                                       // 846\n                                                                                                                       // 847\n    var $parent  = getParent($this)                                                                                    // 848\n    var isActive = $parent.hasClass('open')                                                                            // 849\n                                                                                                                       // 850\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {                                                     // 851\n      if (e.which == 27) $parent.find(toggle).trigger('focus')                                                         // 852\n      return $this.trigger('click')                                                                                    // 853\n    }                                                                                                                  // 854\n                                                                                                                       // 855\n    var desc = ' li:not(.disabled):visible a'                                                                          // 856\n    var $items = $parent.find('.dropdown-menu' + desc)                                                                 // 857\n                                                                                                                       // 858\n    if (!$items.length) return                                                                                         // 859\n                                                                                                                       // 860\n    var index = $items.index(e.target)                                                                                 // 861\n                                                                                                                       // 862\n    if (e.which == 38 && index > 0)                 index--         // up                                              // 863\n    if (e.which == 40 && index < $items.length - 1) index++         // down                                            // 864\n    if (!~index)                                    index = 0                                                          // 865\n                                                                                                                       // 866\n    $items.eq(index).trigger('focus')                                                                                  // 867\n  }                                                                                                                    // 868\n                                                                                                                       // 869\n                                                                                                                       // 870\n  // DROPDOWN PLUGIN DEFINITION                                                                                        // 871\n  // ==========================                                                                                        // 872\n                                                                                                                       // 873\n  function Plugin(option) {                                                                                            // 874\n    return this.each(function () {                                                                                     // 875\n      var $this = $(this)                                                                                              // 876\n      var data  = $this.data('bs.dropdown')                                                                            // 877\n                                                                                                                       // 878\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))                                                // 879\n      if (typeof option == 'string') data[option].call($this)                                                          // 880\n    })                                                                                                                 // 881\n  }                                                                                                                    // 882\n                                                                                                                       // 883\n  var old = $.fn.dropdown                                                                                              // 884\n                                                                                                                       // 885\n  $.fn.dropdown             = Plugin                                                                                   // 886\n  $.fn.dropdown.Constructor = Dropdown                                                                                 // 887\n                                                                                                                       // 888\n                                                                                                                       // 889\n  // DROPDOWN NO CONFLICT                                                                                              // 890\n  // ====================                                                                                              // 891\n                                                                                                                       // 892\n  $.fn.dropdown.noConflict = function () {                                                                             // 893\n    $.fn.dropdown = old                                                                                                // 894\n    return this                                                                                                        // 895\n  }                                                                                                                    // 896\n                                                                                                                       // 897\n                                                                                                                       // 898\n  // APPLY TO STANDARD DROPDOWN ELEMENTS                                                                               // 899\n  // ===================================                                                                               // 900\n                                                                                                                       // 901\n  $(document)                                                                                                          // 902\n    .on('click.bs.dropdown.data-api', clearMenus)                                                                      // 903\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })                          // 904\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)                                               // 905\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)                                            // 906\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)                                  // 907\n                                                                                                                       // 908\n}(jQuery);                                                                                                             // 909\n                                                                                                                       // 910\n/* ========================================================================                                            // 911\n * Bootstrap: modal.js v3.3.6                                                                                          // 912\n * http://getbootstrap.com/javascript/#modals                                                                          // 913\n * ========================================================================                                            // 914\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 915\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 916\n * ======================================================================== */                                         // 917\n                                                                                                                       // 918\n                                                                                                                       // 919\n+function ($) {                                                                                                        // 920\n  'use strict';                                                                                                        // 921\n                                                                                                                       // 922\n  // MODAL CLASS DEFINITION                                                                                            // 923\n  // ======================                                                                                            // 924\n                                                                                                                       // 925\n  var Modal = function (element, options) {                                                                            // 926\n    this.options             = options                                                                                 // 927\n    this.$body               = $(document.body)                                                                        // 928\n    this.$element            = $(element)                                                                              // 929\n    this.$dialog             = this.$element.find('.modal-dialog')                                                     // 930\n    this.$backdrop           = null                                                                                    // 931\n    this.isShown             = null                                                                                    // 932\n    this.originalBodyPad     = null                                                                                    // 933\n    this.scrollbarWidth      = 0                                                                                       // 934\n    this.ignoreBackdropClick = false                                                                                   // 935\n                                                                                                                       // 936\n    if (this.options.remote) {                                                                                         // 937\n      this.$element                                                                                                    // 938\n        .find('.modal-content')                                                                                        // 939\n        .load(this.options.remote, $.proxy(function () {                                                               // 940\n          this.$element.trigger('loaded.bs.modal')                                                                     // 941\n        }, this))                                                                                                      // 942\n    }                                                                                                                  // 943\n  }                                                                                                                    // 944\n                                                                                                                       // 945\n  Modal.VERSION  = '3.3.6'                                                                                             // 946\n                                                                                                                       // 947\n  Modal.TRANSITION_DURATION = 300                                                                                      // 948\n  Modal.BACKDROP_TRANSITION_DURATION = 150                                                                             // 949\n                                                                                                                       // 950\n  Modal.DEFAULTS = {                                                                                                   // 951\n    backdrop: true,                                                                                                    // 952\n    keyboard: true,                                                                                                    // 953\n    show: true                                                                                                         // 954\n  }                                                                                                                    // 955\n                                                                                                                       // 956\n  Modal.prototype.toggle = function (_relatedTarget) {                                                                 // 957\n    return this.isShown ? this.hide() : this.show(_relatedTarget)                                                      // 958\n  }                                                                                                                    // 959\n                                                                                                                       // 960\n  Modal.prototype.show = function (_relatedTarget) {                                                                   // 961\n    var that = this                                                                                                    // 962\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })                                             // 963\n                                                                                                                       // 964\n    this.$element.trigger(e)                                                                                           // 965\n                                                                                                                       // 966\n    if (this.isShown || e.isDefaultPrevented()) return                                                                 // 967\n                                                                                                                       // 968\n    this.isShown = true                                                                                                // 969\n                                                                                                                       // 970\n    this.checkScrollbar()                                                                                              // 971\n    this.setScrollbar()                                                                                                // 972\n    this.$body.addClass('modal-open')                                                                                  // 973\n                                                                                                                       // 974\n    this.escape()                                                                                                      // 975\n    this.resize()                                                                                                      // 976\n                                                                                                                       // 977\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))                     // 978\n                                                                                                                       // 979\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {                                                        // 980\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {                                                     // 981\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true                                             // 982\n      })                                                                                                               // 983\n    })                                                                                                                 // 984\n                                                                                                                       // 985\n    this.backdrop(function () {                                                                                        // 986\n      var transition = $.support.transition && that.$element.hasClass('fade')                                          // 987\n                                                                                                                       // 988\n      if (!that.$element.parent().length) {                                                                            // 989\n        that.$element.appendTo(that.$body) // don't move modals dom position                                           // 990\n      }                                                                                                                // 991\n                                                                                                                       // 992\n      that.$element                                                                                                    // 993\n        .show()                                                                                                        // 994\n        .scrollTop(0)                                                                                                  // 995\n                                                                                                                       // 996\n      that.adjustDialog()                                                                                              // 997\n                                                                                                                       // 998\n      if (transition) {                                                                                                // 999\n        that.$element[0].offsetWidth // force reflow                                                                   // 1000\n      }                                                                                                                // 1001\n                                                                                                                       // 1002\n      that.$element.addClass('in')                                                                                     // 1003\n                                                                                                                       // 1004\n      that.enforceFocus()                                                                                              // 1005\n                                                                                                                       // 1006\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })                                             // 1007\n                                                                                                                       // 1008\n      transition ?                                                                                                     // 1009\n        that.$dialog // wait for modal to slide in                                                                     // 1010\n          .one('bsTransitionEnd', function () {                                                                        // 1011\n            that.$element.trigger('focus').trigger(e)                                                                  // 1012\n          })                                                                                                           // 1013\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :                                                           // 1014\n        that.$element.trigger('focus').trigger(e)                                                                      // 1015\n    })                                                                                                                 // 1016\n  }                                                                                                                    // 1017\n                                                                                                                       // 1018\n  Modal.prototype.hide = function (e) {                                                                                // 1019\n    if (e) e.preventDefault()                                                                                          // 1020\n                                                                                                                       // 1021\n    e = $.Event('hide.bs.modal')                                                                                       // 1022\n                                                                                                                       // 1023\n    this.$element.trigger(e)                                                                                           // 1024\n                                                                                                                       // 1025\n    if (!this.isShown || e.isDefaultPrevented()) return                                                                // 1026\n                                                                                                                       // 1027\n    this.isShown = false                                                                                               // 1028\n                                                                                                                       // 1029\n    this.escape()                                                                                                      // 1030\n    this.resize()                                                                                                      // 1031\n                                                                                                                       // 1032\n    $(document).off('focusin.bs.modal')                                                                                // 1033\n                                                                                                                       // 1034\n    this.$element                                                                                                      // 1035\n      .removeClass('in')                                                                                               // 1036\n      .off('click.dismiss.bs.modal')                                                                                   // 1037\n      .off('mouseup.dismiss.bs.modal')                                                                                 // 1038\n                                                                                                                       // 1039\n    this.$dialog.off('mousedown.dismiss.bs.modal')                                                                     // 1040\n                                                                                                                       // 1041\n    $.support.transition && this.$element.hasClass('fade') ?                                                           // 1042\n      this.$element                                                                                                    // 1043\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))                                                         // 1044\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :                                                             // 1045\n      this.hideModal()                                                                                                 // 1046\n  }                                                                                                                    // 1047\n                                                                                                                       // 1048\n  Modal.prototype.enforceFocus = function () {                                                                         // 1049\n    $(document)                                                                                                        // 1050\n      .off('focusin.bs.modal') // guard against infinite focus loop                                                    // 1051\n      .on('focusin.bs.modal', $.proxy(function (e) {                                                                   // 1052\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {                                    // 1053\n          this.$element.trigger('focus')                                                                               // 1054\n        }                                                                                                              // 1055\n      }, this))                                                                                                        // 1056\n  }                                                                                                                    // 1057\n                                                                                                                       // 1058\n  Modal.prototype.escape = function () {                                                                               // 1059\n    if (this.isShown && this.options.keyboard) {                                                                       // 1060\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {                                              // 1061\n        e.which == 27 && this.hide()                                                                                   // 1062\n      }, this))                                                                                                        // 1063\n    } else if (!this.isShown) {                                                                                        // 1064\n      this.$element.off('keydown.dismiss.bs.modal')                                                                    // 1065\n    }                                                                                                                  // 1066\n  }                                                                                                                    // 1067\n                                                                                                                       // 1068\n  Modal.prototype.resize = function () {                                                                               // 1069\n    if (this.isShown) {                                                                                                // 1070\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))                                                // 1071\n    } else {                                                                                                           // 1072\n      $(window).off('resize.bs.modal')                                                                                 // 1073\n    }                                                                                                                  // 1074\n  }                                                                                                                    // 1075\n                                                                                                                       // 1076\n  Modal.prototype.hideModal = function () {                                                                            // 1077\n    var that = this                                                                                                    // 1078\n    this.$element.hide()                                                                                               // 1079\n    this.backdrop(function () {                                                                                        // 1080\n      that.$body.removeClass('modal-open')                                                                             // 1081\n      that.resetAdjustments()                                                                                          // 1082\n      that.resetScrollbar()                                                                                            // 1083\n      that.$element.trigger('hidden.bs.modal')                                                                         // 1084\n    })                                                                                                                 // 1085\n  }                                                                                                                    // 1086\n                                                                                                                       // 1087\n  Modal.prototype.removeBackdrop = function () {                                                                       // 1088\n    this.$backdrop && this.$backdrop.remove()                                                                          // 1089\n    this.$backdrop = null                                                                                              // 1090\n  }                                                                                                                    // 1091\n                                                                                                                       // 1092\n  Modal.prototype.backdrop = function (callback) {                                                                     // 1093\n    var that = this                                                                                                    // 1094\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''                                                         // 1095\n                                                                                                                       // 1096\n    if (this.isShown && this.options.backdrop) {                                                                       // 1097\n      var doAnimate = $.support.transition && animate                                                                  // 1098\n                                                                                                                       // 1099\n      this.$backdrop = $(document.createElement('div'))                                                                // 1100\n        .addClass('modal-backdrop ' + animate)                                                                         // 1101\n        .appendTo(this.$body)                                                                                          // 1102\n                                                                                                                       // 1103\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {                                                // 1104\n        if (this.ignoreBackdropClick) {                                                                                // 1105\n          this.ignoreBackdropClick = false                                                                             // 1106\n          return                                                                                                       // 1107\n        }                                                                                                              // 1108\n        if (e.target !== e.currentTarget) return                                                                       // 1109\n        this.options.backdrop == 'static'                                                                              // 1110\n          ? this.$element[0].focus()                                                                                   // 1111\n          : this.hide()                                                                                                // 1112\n      }, this))                                                                                                        // 1113\n                                                                                                                       // 1114\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow                                                     // 1115\n                                                                                                                       // 1116\n      this.$backdrop.addClass('in')                                                                                    // 1117\n                                                                                                                       // 1118\n      if (!callback) return                                                                                            // 1119\n                                                                                                                       // 1120\n      doAnimate ?                                                                                                      // 1121\n        this.$backdrop                                                                                                 // 1122\n          .one('bsTransitionEnd', callback)                                                                            // 1123\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :                                                  // 1124\n        callback()                                                                                                     // 1125\n                                                                                                                       // 1126\n    } else if (!this.isShown && this.$backdrop) {                                                                      // 1127\n      this.$backdrop.removeClass('in')                                                                                 // 1128\n                                                                                                                       // 1129\n      var callbackRemove = function () {                                                                               // 1130\n        that.removeBackdrop()                                                                                          // 1131\n        callback && callback()                                                                                         // 1132\n      }                                                                                                                // 1133\n      $.support.transition && this.$element.hasClass('fade') ?                                                         // 1134\n        this.$backdrop                                                                                                 // 1135\n          .one('bsTransitionEnd', callbackRemove)                                                                      // 1136\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :                                                  // 1137\n        callbackRemove()                                                                                               // 1138\n                                                                                                                       // 1139\n    } else if (callback) {                                                                                             // 1140\n      callback()                                                                                                       // 1141\n    }                                                                                                                  // 1142\n  }                                                                                                                    // 1143\n                                                                                                                       // 1144\n  // these following methods are used to handle overflowing modals                                                     // 1145\n                                                                                                                       // 1146\n  Modal.prototype.handleUpdate = function () {                                                                         // 1147\n    this.adjustDialog()                                                                                                // 1148\n  }                                                                                                                    // 1149\n                                                                                                                       // 1150\n  Modal.prototype.adjustDialog = function () {                                                                         // 1151\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight                     // 1152\n                                                                                                                       // 1153\n    this.$element.css({                                                                                                // 1154\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',                          // 1155\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''                           // 1156\n    })                                                                                                                 // 1157\n  }                                                                                                                    // 1158\n                                                                                                                       // 1159\n  Modal.prototype.resetAdjustments = function () {                                                                     // 1160\n    this.$element.css({                                                                                                // 1161\n      paddingLeft: '',                                                                                                 // 1162\n      paddingRight: ''                                                                                                 // 1163\n    })                                                                                                                 // 1164\n  }                                                                                                                    // 1165\n                                                                                                                       // 1166\n  Modal.prototype.checkScrollbar = function () {                                                                       // 1167\n    var fullWindowWidth = window.innerWidth                                                                            // 1168\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8                                         // 1169\n      var documentElementRect = document.documentElement.getBoundingClientRect()                                       // 1170\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)                                 // 1171\n    }                                                                                                                  // 1172\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth                                               // 1173\n    this.scrollbarWidth = this.measureScrollbar()                                                                      // 1174\n  }                                                                                                                    // 1175\n                                                                                                                       // 1176\n  Modal.prototype.setScrollbar = function () {                                                                         // 1177\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)                                                 // 1178\n    this.originalBodyPad = document.body.style.paddingRight || ''                                                      // 1179\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)                         // 1180\n  }                                                                                                                    // 1181\n                                                                                                                       // 1182\n  Modal.prototype.resetScrollbar = function () {                                                                       // 1183\n    this.$body.css('padding-right', this.originalBodyPad)                                                              // 1184\n  }                                                                                                                    // 1185\n                                                                                                                       // 1186\n  Modal.prototype.measureScrollbar = function () { // thx walsh                                                        // 1187\n    var scrollDiv = document.createElement('div')                                                                      // 1188\n    scrollDiv.className = 'modal-scrollbar-measure'                                                                    // 1189\n    this.$body.append(scrollDiv)                                                                                       // 1190\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth                                                 // 1191\n    this.$body[0].removeChild(scrollDiv)                                                                               // 1192\n    return scrollbarWidth                                                                                              // 1193\n  }                                                                                                                    // 1194\n                                                                                                                       // 1195\n                                                                                                                       // 1196\n  // MODAL PLUGIN DEFINITION                                                                                           // 1197\n  // =======================                                                                                           // 1198\n                                                                                                                       // 1199\n  function Plugin(option, _relatedTarget) {                                                                            // 1200\n    return this.each(function () {                                                                                     // 1201\n      var $this   = $(this)                                                                                            // 1202\n      var data    = $this.data('bs.modal')                                                                             // 1203\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)                    // 1204\n                                                                                                                       // 1205\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))                                             // 1206\n      if (typeof option == 'string') data[option](_relatedTarget)                                                      // 1207\n      else if (options.show) data.show(_relatedTarget)                                                                 // 1208\n    })                                                                                                                 // 1209\n  }                                                                                                                    // 1210\n                                                                                                                       // 1211\n  var old = $.fn.modal                                                                                                 // 1212\n                                                                                                                       // 1213\n  $.fn.modal             = Plugin                                                                                      // 1214\n  $.fn.modal.Constructor = Modal                                                                                       // 1215\n                                                                                                                       // 1216\n                                                                                                                       // 1217\n  // MODAL NO CONFLICT                                                                                                 // 1218\n  // =================                                                                                                 // 1219\n                                                                                                                       // 1220\n  $.fn.modal.noConflict = function () {                                                                                // 1221\n    $.fn.modal = old                                                                                                   // 1222\n    return this                                                                                                        // 1223\n  }                                                                                                                    // 1224\n                                                                                                                       // 1225\n                                                                                                                       // 1226\n  // MODAL DATA-API                                                                                                    // 1227\n  // ==============                                                                                                    // 1228\n                                                                                                                       // 1229\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {                                    // 1230\n    var $this   = $(this)                                                                                              // 1231\n    var href    = $this.attr('href')                                                                                   // 1232\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7        // 1233\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n                                                                                                                       // 1235\n    if ($this.is('a')) e.preventDefault()                                                                              // 1236\n                                                                                                                       // 1237\n    $target.one('show.bs.modal', function (showEvent) {                                                                // 1238\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown      // 1239\n      $target.one('hidden.bs.modal', function () {                                                                     // 1240\n        $this.is(':visible') && $this.trigger('focus')                                                                 // 1241\n      })                                                                                                               // 1242\n    })                                                                                                                 // 1243\n    Plugin.call($target, option, this)                                                                                 // 1244\n  })                                                                                                                   // 1245\n                                                                                                                       // 1246\n}(jQuery);                                                                                                             // 1247\n                                                                                                                       // 1248\n/* ========================================================================                                            // 1249\n * Bootstrap: tooltip.js v3.3.6                                                                                        // 1250\n * http://getbootstrap.com/javascript/#tooltip                                                                         // 1251\n * Inspired by the original jQuery.tipsy by Jason Frame                                                                // 1252\n * ========================================================================                                            // 1253\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 1254\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1255\n * ======================================================================== */                                         // 1256\n                                                                                                                       // 1257\n                                                                                                                       // 1258\n+function ($) {                                                                                                        // 1259\n  'use strict';                                                                                                        // 1260\n                                                                                                                       // 1261\n  // TOOLTIP PUBLIC CLASS DEFINITION                                                                                   // 1262\n  // ===============================                                                                                   // 1263\n                                                                                                                       // 1264\n  var Tooltip = function (element, options) {                                                                          // 1265\n    this.type       = null                                                                                             // 1266\n    this.options    = null                                                                                             // 1267\n    this.enabled    = null                                                                                             // 1268\n    this.timeout    = null                                                                                             // 1269\n    this.hoverState = null                                                                                             // 1270\n    this.$element   = null                                                                                             // 1271\n    this.inState    = null                                                                                             // 1272\n                                                                                                                       // 1273\n    this.init('tooltip', element, options)                                                                             // 1274\n  }                                                                                                                    // 1275\n                                                                                                                       // 1276\n  Tooltip.VERSION  = '3.3.6'                                                                                           // 1277\n                                                                                                                       // 1278\n  Tooltip.TRANSITION_DURATION = 150                                                                                    // 1279\n                                                                                                                       // 1280\n  Tooltip.DEFAULTS = {                                                                                                 // 1281\n    animation: true,                                                                                                   // 1282\n    placement: 'top',                                                                                                  // 1283\n    selector: false,                                                                                                   // 1284\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',                                                                                            // 1286\n    title: '',                                                                                                         // 1287\n    delay: 0,                                                                                                          // 1288\n    html: false,                                                                                                       // 1289\n    container: false,                                                                                                  // 1290\n    viewport: {                                                                                                        // 1291\n      selector: 'body',                                                                                                // 1292\n      padding: 0                                                                                                       // 1293\n    }                                                                                                                  // 1294\n  }                                                                                                                    // 1295\n                                                                                                                       // 1296\n  Tooltip.prototype.init = function (type, element, options) {                                                         // 1297\n    this.enabled   = true                                                                                              // 1298\n    this.type      = type                                                                                              // 1299\n    this.$element  = $(element)                                                                                        // 1300\n    this.options   = this.getOptions(options)                                                                          // 1301\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }                                                      // 1303\n                                                                                                                       // 1304\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {                                  // 1305\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }                                                                                                                  // 1307\n                                                                                                                       // 1308\n    var triggers = this.options.trigger.split(' ')                                                                     // 1309\n                                                                                                                       // 1310\n    for (var i = triggers.length; i--;) {                                                                              // 1311\n      var trigger = triggers[i]                                                                                        // 1312\n                                                                                                                       // 1313\n      if (trigger == 'click') {                                                                                        // 1314\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))                      // 1315\n      } else if (trigger != 'manual') {                                                                                // 1316\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'                                                   // 1317\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'                                                  // 1318\n                                                                                                                       // 1319\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))                 // 1320\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))                 // 1321\n      }                                                                                                                // 1322\n    }                                                                                                                  // 1323\n                                                                                                                       // 1324\n    this.options.selector ?                                                                                            // 1325\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :                              // 1326\n      this.fixTitle()                                                                                                  // 1327\n  }                                                                                                                    // 1328\n                                                                                                                       // 1329\n  Tooltip.prototype.getDefaults = function () {                                                                        // 1330\n    return Tooltip.DEFAULTS                                                                                            // 1331\n  }                                                                                                                    // 1332\n                                                                                                                       // 1333\n  Tooltip.prototype.getOptions = function (options) {                                                                  // 1334\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)                                          // 1335\n                                                                                                                       // 1336\n    if (options.delay && typeof options.delay == 'number') {                                                           // 1337\n      options.delay = {                                                                                                // 1338\n        show: options.delay,                                                                                           // 1339\n        hide: options.delay                                                                                            // 1340\n      }                                                                                                                // 1341\n    }                                                                                                                  // 1342\n                                                                                                                       // 1343\n    return options                                                                                                     // 1344\n  }                                                                                                                    // 1345\n                                                                                                                       // 1346\n  Tooltip.prototype.getDelegateOptions = function () {                                                                 // 1347\n    var options  = {}                                                                                                  // 1348\n    var defaults = this.getDefaults()                                                                                  // 1349\n                                                                                                                       // 1350\n    this._options && $.each(this._options, function (key, value) {                                                     // 1351\n      if (defaults[key] != value) options[key] = value                                                                 // 1352\n    })                                                                                                                 // 1353\n                                                                                                                       // 1354\n    return options                                                                                                     // 1355\n  }                                                                                                                    // 1356\n                                                                                                                       // 1357\n  Tooltip.prototype.enter = function (obj) {                                                                           // 1358\n    var self = obj instanceof this.constructor ?                                                                       // 1359\n      obj : $(obj.currentTarget).data('bs.' + this.type)                                                               // 1360\n                                                                                                                       // 1361\n    if (!self) {                                                                                                       // 1362\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())                                        // 1363\n      $(obj.currentTarget).data('bs.' + this.type, self)                                                               // 1364\n    }                                                                                                                  // 1365\n                                                                                                                       // 1366\n    if (obj instanceof $.Event) {                                                                                      // 1367\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true                                                   // 1368\n    }                                                                                                                  // 1369\n                                                                                                                       // 1370\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {                                                        // 1371\n      self.hoverState = 'in'                                                                                           // 1372\n      return                                                                                                           // 1373\n    }                                                                                                                  // 1374\n                                                                                                                       // 1375\n    clearTimeout(self.timeout)                                                                                         // 1376\n                                                                                                                       // 1377\n    self.hoverState = 'in'                                                                                             // 1378\n                                                                                                                       // 1379\n    if (!self.options.delay || !self.options.delay.show) return self.show()                                            // 1380\n                                                                                                                       // 1381\n    self.timeout = setTimeout(function () {                                                                            // 1382\n      if (self.hoverState == 'in') self.show()                                                                         // 1383\n    }, self.options.delay.show)                                                                                        // 1384\n  }                                                                                                                    // 1385\n                                                                                                                       // 1386\n  Tooltip.prototype.isInStateTrue = function () {                                                                      // 1387\n    for (var key in this.inState) {                                                                                    // 1388\n      if (this.inState[key]) return true                                                                               // 1389\n    }                                                                                                                  // 1390\n                                                                                                                       // 1391\n    return false                                                                                                       // 1392\n  }                                                                                                                    // 1393\n                                                                                                                       // 1394\n  Tooltip.prototype.leave = function (obj) {                                                                           // 1395\n    var self = obj instanceof this.constructor ?                                                                       // 1396\n      obj : $(obj.currentTarget).data('bs.' + this.type)                                                               // 1397\n                                                                                                                       // 1398\n    if (!self) {                                                                                                       // 1399\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())                                        // 1400\n      $(obj.currentTarget).data('bs.' + this.type, self)                                                               // 1401\n    }                                                                                                                  // 1402\n                                                                                                                       // 1403\n    if (obj instanceof $.Event) {                                                                                      // 1404\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false                                                 // 1405\n    }                                                                                                                  // 1406\n                                                                                                                       // 1407\n    if (self.isInStateTrue()) return                                                                                   // 1408\n                                                                                                                       // 1409\n    clearTimeout(self.timeout)                                                                                         // 1410\n                                                                                                                       // 1411\n    self.hoverState = 'out'                                                                                            // 1412\n                                                                                                                       // 1413\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()                                            // 1414\n                                                                                                                       // 1415\n    self.timeout = setTimeout(function () {                                                                            // 1416\n      if (self.hoverState == 'out') self.hide()                                                                        // 1417\n    }, self.options.delay.hide)                                                                                        // 1418\n  }                                                                                                                    // 1419\n                                                                                                                       // 1420\n  Tooltip.prototype.show = function () {                                                                               // 1421\n    var e = $.Event('show.bs.' + this.type)                                                                            // 1422\n                                                                                                                       // 1423\n    if (this.hasContent() && this.enabled) {                                                                           // 1424\n      this.$element.trigger(e)                                                                                         // 1425\n                                                                                                                       // 1426\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])                         // 1427\n      if (e.isDefaultPrevented() || !inDom) return                                                                     // 1428\n      var that = this                                                                                                  // 1429\n                                                                                                                       // 1430\n      var $tip = this.tip()                                                                                            // 1431\n                                                                                                                       // 1432\n      var tipId = this.getUID(this.type)                                                                               // 1433\n                                                                                                                       // 1434\n      this.setContent()                                                                                                // 1435\n      $tip.attr('id', tipId)                                                                                           // 1436\n      this.$element.attr('aria-describedby', tipId)                                                                    // 1437\n                                                                                                                       // 1438\n      if (this.options.animation) $tip.addClass('fade')                                                                // 1439\n                                                                                                                       // 1440\n      var placement = typeof this.options.placement == 'function' ?                                                    // 1441\n        this.options.placement.call(this, $tip[0], this.$element[0]) :                                                 // 1442\n        this.options.placement                                                                                         // 1443\n                                                                                                                       // 1444\n      var autoToken = /\\s?auto?\\s?/i                                                                                   // 1445\n      var autoPlace = autoToken.test(placement)                                                                        // 1446\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'                                             // 1447\n                                                                                                                       // 1448\n      $tip                                                                                                             // 1449\n        .detach()                                                                                                      // 1450\n        .css({ top: 0, left: 0, display: 'block' })                                                                    // 1451\n        .addClass(placement)                                                                                           // 1452\n        .data('bs.' + this.type, this)                                                                                 // 1453\n                                                                                                                       // 1454\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)                 // 1455\n      this.$element.trigger('inserted.bs.' + this.type)                                                                // 1456\n                                                                                                                       // 1457\n      var pos          = this.getPosition()                                                                            // 1458\n      var actualWidth  = $tip[0].offsetWidth                                                                           // 1459\n      var actualHeight = $tip[0].offsetHeight                                                                          // 1460\n                                                                                                                       // 1461\n      if (autoPlace) {                                                                                                 // 1462\n        var orgPlacement = placement                                                                                   // 1463\n        var viewportDim = this.getPosition(this.$viewport)                                                             // 1464\n                                                                                                                       // 1465\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :               // 1466\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :               // 1467\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :               // 1468\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :               // 1469\n                    placement                                                                                          // 1470\n                                                                                                                       // 1471\n        $tip                                                                                                           // 1472\n          .removeClass(orgPlacement)                                                                                   // 1473\n          .addClass(placement)                                                                                         // 1474\n      }                                                                                                                // 1475\n                                                                                                                       // 1476\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)                       // 1477\n                                                                                                                       // 1478\n      this.applyPlacement(calculatedOffset, placement)                                                                 // 1479\n                                                                                                                       // 1480\n      var complete = function () {                                                                                     // 1481\n        var prevHoverState = that.hoverState                                                                           // 1482\n        that.$element.trigger('shown.bs.' + that.type)                                                                 // 1483\n        that.hoverState = null                                                                                         // 1484\n                                                                                                                       // 1485\n        if (prevHoverState == 'out') that.leave(that)                                                                  // 1486\n      }                                                                                                                // 1487\n                                                                                                                       // 1488\n      $.support.transition && this.$tip.hasClass('fade') ?                                                             // 1489\n        $tip                                                                                                           // 1490\n          .one('bsTransitionEnd', complete)                                                                            // 1491\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :                                                         // 1492\n        complete()                                                                                                     // 1493\n    }                                                                                                                  // 1494\n  }                                                                                                                    // 1495\n                                                                                                                       // 1496\n  Tooltip.prototype.applyPlacement = function (offset, placement) {                                                    // 1497\n    var $tip   = this.tip()                                                                                            // 1498\n    var width  = $tip[0].offsetWidth                                                                                   // 1499\n    var height = $tip[0].offsetHeight                                                                                  // 1500\n                                                                                                                       // 1501\n    // manually read margins because getBoundingClientRect includes difference                                         // 1502\n    var marginTop = parseInt($tip.css('margin-top'), 10)                                                               // 1503\n    var marginLeft = parseInt($tip.css('margin-left'), 10)                                                             // 1504\n                                                                                                                       // 1505\n    // we must check for NaN for ie 8/9                                                                                // 1506\n    if (isNaN(marginTop))  marginTop  = 0                                                                              // 1507\n    if (isNaN(marginLeft)) marginLeft = 0                                                                              // 1508\n                                                                                                                       // 1509\n    offset.top  += marginTop                                                                                           // 1510\n    offset.left += marginLeft                                                                                          // 1511\n                                                                                                                       // 1512\n    // $.fn.offset doesn't round pixel values                                                                          // 1513\n    // so we use setOffset directly with our own function B-0                                                          // 1514\n    $.offset.setOffset($tip[0], $.extend({                                                                             // 1515\n      using: function (props) {                                                                                        // 1516\n        $tip.css({                                                                                                     // 1517\n          top: Math.round(props.top),                                                                                  // 1518\n          left: Math.round(props.left)                                                                                 // 1519\n        })                                                                                                             // 1520\n      }                                                                                                                // 1521\n    }, offset), 0)                                                                                                     // 1522\n                                                                                                                       // 1523\n    $tip.addClass('in')                                                                                                // 1524\n                                                                                                                       // 1525\n    // check to see if placing tip in new offset caused the tip to resize itself                                       // 1526\n    var actualWidth  = $tip[0].offsetWidth                                                                             // 1527\n    var actualHeight = $tip[0].offsetHeight                                                                            // 1528\n                                                                                                                       // 1529\n    if (placement == 'top' && actualHeight != height) {                                                                // 1530\n      offset.top = offset.top + height - actualHeight                                                                  // 1531\n    }                                                                                                                  // 1532\n                                                                                                                       // 1533\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)                            // 1534\n                                                                                                                       // 1535\n    if (delta.left) offset.left += delta.left                                                                          // 1536\n    else offset.top += delta.top                                                                                       // 1537\n                                                                                                                       // 1538\n    var isVertical          = /top|bottom/.test(placement)                                                             // 1539\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'                                              // 1541\n                                                                                                                       // 1542\n    $tip.offset(offset)                                                                                                // 1543\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)                                            // 1544\n  }                                                                                                                    // 1545\n                                                                                                                       // 1546\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {                                           // 1547\n    this.arrow()                                                                                                       // 1548\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')                                            // 1549\n      .css(isVertical ? 'top' : 'left', '')                                                                            // 1550\n  }                                                                                                                    // 1551\n                                                                                                                       // 1552\n  Tooltip.prototype.setContent = function () {                                                                         // 1553\n    var $tip  = this.tip()                                                                                             // 1554\n    var title = this.getTitle()                                                                                        // 1555\n                                                                                                                       // 1556\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)                                            // 1557\n    $tip.removeClass('fade in top bottom left right')                                                                  // 1558\n  }                                                                                                                    // 1559\n                                                                                                                       // 1560\n  Tooltip.prototype.hide = function (callback) {                                                                       // 1561\n    var that = this                                                                                                    // 1562\n    var $tip = $(this.$tip)                                                                                            // 1563\n    var e    = $.Event('hide.bs.' + this.type)                                                                         // 1564\n                                                                                                                       // 1565\n    function complete() {                                                                                              // 1566\n      if (that.hoverState != 'in') $tip.detach()                                                                       // 1567\n      that.$element                                                                                                    // 1568\n        .removeAttr('aria-describedby')                                                                                // 1569\n        .trigger('hidden.bs.' + that.type)                                                                             // 1570\n      callback && callback()                                                                                           // 1571\n    }                                                                                                                  // 1572\n                                                                                                                       // 1573\n    this.$element.trigger(e)                                                                                           // 1574\n                                                                                                                       // 1575\n    if (e.isDefaultPrevented()) return                                                                                 // 1576\n                                                                                                                       // 1577\n    $tip.removeClass('in')                                                                                             // 1578\n                                                                                                                       // 1579\n    $.support.transition && $tip.hasClass('fade') ?                                                                    // 1580\n      $tip                                                                                                             // 1581\n        .one('bsTransitionEnd', complete)                                                                              // 1582\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :                                                           // 1583\n      complete()                                                                                                       // 1584\n                                                                                                                       // 1585\n    this.hoverState = null                                                                                             // 1586\n                                                                                                                       // 1587\n    return this                                                                                                        // 1588\n  }                                                                                                                    // 1589\n                                                                                                                       // 1590\n  Tooltip.prototype.fixTitle = function () {                                                                           // 1591\n    var $e = this.$element                                                                                             // 1592\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {                                       // 1593\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')                                         // 1594\n    }                                                                                                                  // 1595\n  }                                                                                                                    // 1596\n                                                                                                                       // 1597\n  Tooltip.prototype.hasContent = function () {                                                                         // 1598\n    return this.getTitle()                                                                                             // 1599\n  }                                                                                                                    // 1600\n                                                                                                                       // 1601\n  Tooltip.prototype.getPosition = function ($element) {                                                                // 1602\n    $element   = $element || this.$element                                                                             // 1603\n                                                                                                                       // 1604\n    var el     = $element[0]                                                                                           // 1605\n    var isBody = el.tagName == 'BODY'                                                                                  // 1606\n                                                                                                                       // 1607\n    var elRect    = el.getBoundingClientRect()                                                                         // 1608\n    if (elRect.width == null) {                                                                                        // 1609\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })         // 1611\n    }                                                                                                                  // 1612\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()                                                   // 1613\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null                           // 1615\n                                                                                                                       // 1616\n    return $.extend({}, elRect, scroll, outerDims, elOffset)                                                           // 1617\n  }                                                                                                                    // 1618\n                                                                                                                       // 1619\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {                       // 1620\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }    // 1624\n                                                                                                                       // 1625\n  }                                                                                                                    // 1626\n                                                                                                                       // 1627\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {                  // 1628\n    var delta = { top: 0, left: 0 }                                                                                    // 1629\n    if (!this.$viewport) return delta                                                                                  // 1630\n                                                                                                                       // 1631\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0                                  // 1632\n    var viewportDimensions = this.getPosition(this.$viewport)                                                          // 1633\n                                                                                                                       // 1634\n    if (/right|left/.test(placement)) {                                                                                // 1635\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll                                     // 1636\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight                      // 1637\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow                                                    // 1638\n        delta.top = viewportDimensions.top - topEdgeOffset                                                             // 1639\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow           // 1640\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset                              // 1641\n      }                                                                                                                // 1642\n    } else {                                                                                                           // 1643\n      var leftEdgeOffset  = pos.left - viewportPadding                                                                 // 1644\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth                                                   // 1645\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow                                                 // 1646\n        delta.left = viewportDimensions.left - leftEdgeOffset                                                          // 1647\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow                                       // 1648\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset                              // 1649\n      }                                                                                                                // 1650\n    }                                                                                                                  // 1651\n                                                                                                                       // 1652\n    return delta                                                                                                       // 1653\n  }                                                                                                                    // 1654\n                                                                                                                       // 1655\n  Tooltip.prototype.getTitle = function () {                                                                           // 1656\n    var title                                                                                                          // 1657\n    var $e = this.$element                                                                                             // 1658\n    var o  = this.options                                                                                              // 1659\n                                                                                                                       // 1660\n    title = $e.attr('data-original-title')                                                                             // 1661\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)                                               // 1662\n                                                                                                                       // 1663\n    return title                                                                                                       // 1664\n  }                                                                                                                    // 1665\n                                                                                                                       // 1666\n  Tooltip.prototype.getUID = function (prefix) {                                                                       // 1667\n    do prefix += ~~(Math.random() * 1000000)                                                                           // 1668\n    while (document.getElementById(prefix))                                                                            // 1669\n    return prefix                                                                                                      // 1670\n  }                                                                                                                    // 1671\n                                                                                                                       // 1672\n  Tooltip.prototype.tip = function () {                                                                                // 1673\n    if (!this.$tip) {                                                                                                  // 1674\n      this.$tip = $(this.options.template)                                                                             // 1675\n      if (this.$tip.length != 1) {                                                                                     // 1676\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')                 // 1677\n      }                                                                                                                // 1678\n    }                                                                                                                  // 1679\n    return this.$tip                                                                                                   // 1680\n  }                                                                                                                    // 1681\n                                                                                                                       // 1682\n  Tooltip.prototype.arrow = function () {                                                                              // 1683\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))                                            // 1684\n  }                                                                                                                    // 1685\n                                                                                                                       // 1686\n  Tooltip.prototype.enable = function () {                                                                             // 1687\n    this.enabled = true                                                                                                // 1688\n  }                                                                                                                    // 1689\n                                                                                                                       // 1690\n  Tooltip.prototype.disable = function () {                                                                            // 1691\n    this.enabled = false                                                                                               // 1692\n  }                                                                                                                    // 1693\n                                                                                                                       // 1694\n  Tooltip.prototype.toggleEnabled = function () {                                                                      // 1695\n    this.enabled = !this.enabled                                                                                       // 1696\n  }                                                                                                                    // 1697\n                                                                                                                       // 1698\n  Tooltip.prototype.toggle = function (e) {                                                                            // 1699\n    var self = this                                                                                                    // 1700\n    if (e) {                                                                                                           // 1701\n      self = $(e.currentTarget).data('bs.' + this.type)                                                                // 1702\n      if (!self) {                                                                                                     // 1703\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())                                        // 1704\n        $(e.currentTarget).data('bs.' + this.type, self)                                                               // 1705\n      }                                                                                                                // 1706\n    }                                                                                                                  // 1707\n                                                                                                                       // 1708\n    if (e) {                                                                                                           // 1709\n      self.inState.click = !self.inState.click                                                                         // 1710\n      if (self.isInStateTrue()) self.enter(self)                                                                       // 1711\n      else self.leave(self)                                                                                            // 1712\n    } else {                                                                                                           // 1713\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)                                                  // 1714\n    }                                                                                                                  // 1715\n  }                                                                                                                    // 1716\n                                                                                                                       // 1717\n  Tooltip.prototype.destroy = function () {                                                                            // 1718\n    var that = this                                                                                                    // 1719\n    clearTimeout(this.timeout)                                                                                         // 1720\n    this.hide(function () {                                                                                            // 1721\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)                                                 // 1722\n      if (that.$tip) {                                                                                                 // 1723\n        that.$tip.detach()                                                                                             // 1724\n      }                                                                                                                // 1725\n      that.$tip = null                                                                                                 // 1726\n      that.$arrow = null                                                                                               // 1727\n      that.$viewport = null                                                                                            // 1728\n    })                                                                                                                 // 1729\n  }                                                                                                                    // 1730\n                                                                                                                       // 1731\n                                                                                                                       // 1732\n  // TOOLTIP PLUGIN DEFINITION                                                                                         // 1733\n  // =========================                                                                                         // 1734\n                                                                                                                       // 1735\n  function Plugin(option) {                                                                                            // 1736\n    return this.each(function () {                                                                                     // 1737\n      var $this   = $(this)                                                                                            // 1738\n      var data    = $this.data('bs.tooltip')                                                                           // 1739\n      var options = typeof option == 'object' && option                                                                // 1740\n                                                                                                                       // 1741\n      if (!data && /destroy|hide/.test(option)) return                                                                 // 1742\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))                                         // 1743\n      if (typeof option == 'string') data[option]()                                                                    // 1744\n    })                                                                                                                 // 1745\n  }                                                                                                                    // 1746\n                                                                                                                       // 1747\n  var old = $.fn.tooltip                                                                                               // 1748\n                                                                                                                       // 1749\n  $.fn.tooltip             = Plugin                                                                                    // 1750\n  $.fn.tooltip.Constructor = Tooltip                                                                                   // 1751\n                                                                                                                       // 1752\n                                                                                                                       // 1753\n  // TOOLTIP NO CONFLICT                                                                                               // 1754\n  // ===================                                                                                               // 1755\n                                                                                                                       // 1756\n  $.fn.tooltip.noConflict = function () {                                                                              // 1757\n    $.fn.tooltip = old                                                                                                 // 1758\n    return this                                                                                                        // 1759\n  }                                                                                                                    // 1760\n                                                                                                                       // 1761\n}(jQuery);                                                                                                             // 1762\n                                                                                                                       // 1763\n/* ========================================================================                                            // 1764\n * Bootstrap: popover.js v3.3.6                                                                                        // 1765\n * http://getbootstrap.com/javascript/#popovers                                                                        // 1766\n * ========================================================================                                            // 1767\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 1768\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1769\n * ======================================================================== */                                         // 1770\n                                                                                                                       // 1771\n                                                                                                                       // 1772\n+function ($) {                                                                                                        // 1773\n  'use strict';                                                                                                        // 1774\n                                                                                                                       // 1775\n  // POPOVER PUBLIC CLASS DEFINITION                                                                                   // 1776\n  // ===============================                                                                                   // 1777\n                                                                                                                       // 1778\n  var Popover = function (element, options) {                                                                          // 1779\n    this.init('popover', element, options)                                                                             // 1780\n  }                                                                                                                    // 1781\n                                                                                                                       // 1782\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')                                                    // 1783\n                                                                                                                       // 1784\n  Popover.VERSION  = '3.3.6'                                                                                           // 1785\n                                                                                                                       // 1786\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {                                                 // 1787\n    placement: 'right',                                                                                                // 1788\n    trigger: 'click',                                                                                                  // 1789\n    content: '',                                                                                                       // 1790\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })                                                                                                                   // 1792\n                                                                                                                       // 1793\n                                                                                                                       // 1794\n  // NOTE: POPOVER EXTENDS tooltip.js                                                                                  // 1795\n  // ================================                                                                                  // 1796\n                                                                                                                       // 1797\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)                                                 // 1798\n                                                                                                                       // 1799\n  Popover.prototype.constructor = Popover                                                                              // 1800\n                                                                                                                       // 1801\n  Popover.prototype.getDefaults = function () {                                                                        // 1802\n    return Popover.DEFAULTS                                                                                            // 1803\n  }                                                                                                                    // 1804\n                                                                                                                       // 1805\n  Popover.prototype.setContent = function () {                                                                         // 1806\n    var $tip    = this.tip()                                                                                           // 1807\n    var title   = this.getTitle()                                                                                      // 1808\n    var content = this.getContent()                                                                                    // 1809\n                                                                                                                       // 1810\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)                                            // 1811\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events   // 1812\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'                                    // 1813\n    ](content)                                                                                                         // 1814\n                                                                                                                       // 1815\n    $tip.removeClass('fade top bottom left right in')                                                                  // 1816\n                                                                                                                       // 1817\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do                                       // 1818\n    // this manually by checking the contents.                                                                         // 1819\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()                                        // 1820\n  }                                                                                                                    // 1821\n                                                                                                                       // 1822\n  Popover.prototype.hasContent = function () {                                                                         // 1823\n    return this.getTitle() || this.getContent()                                                                        // 1824\n  }                                                                                                                    // 1825\n                                                                                                                       // 1826\n  Popover.prototype.getContent = function () {                                                                         // 1827\n    var $e = this.$element                                                                                             // 1828\n    var o  = this.options                                                                                              // 1829\n                                                                                                                       // 1830\n    return $e.attr('data-content')                                                                                     // 1831\n      || (typeof o.content == 'function' ?                                                                             // 1832\n            o.content.call($e[0]) :                                                                                    // 1833\n            o.content)                                                                                                 // 1834\n  }                                                                                                                    // 1835\n                                                                                                                       // 1836\n  Popover.prototype.arrow = function () {                                                                              // 1837\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))                                                    // 1838\n  }                                                                                                                    // 1839\n                                                                                                                       // 1840\n                                                                                                                       // 1841\n  // POPOVER PLUGIN DEFINITION                                                                                         // 1842\n  // =========================                                                                                         // 1843\n                                                                                                                       // 1844\n  function Plugin(option) {                                                                                            // 1845\n    return this.each(function () {                                                                                     // 1846\n      var $this   = $(this)                                                                                            // 1847\n      var data    = $this.data('bs.popover')                                                                           // 1848\n      var options = typeof option == 'object' && option                                                                // 1849\n                                                                                                                       // 1850\n      if (!data && /destroy|hide/.test(option)) return                                                                 // 1851\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))                                         // 1852\n      if (typeof option == 'string') data[option]()                                                                    // 1853\n    })                                                                                                                 // 1854\n  }                                                                                                                    // 1855\n                                                                                                                       // 1856\n  var old = $.fn.popover                                                                                               // 1857\n                                                                                                                       // 1858\n  $.fn.popover             = Plugin                                                                                    // 1859\n  $.fn.popover.Constructor = Popover                                                                                   // 1860\n                                                                                                                       // 1861\n                                                                                                                       // 1862\n  // POPOVER NO CONFLICT                                                                                               // 1863\n  // ===================                                                                                               // 1864\n                                                                                                                       // 1865\n  $.fn.popover.noConflict = function () {                                                                              // 1866\n    $.fn.popover = old                                                                                                 // 1867\n    return this                                                                                                        // 1868\n  }                                                                                                                    // 1869\n                                                                                                                       // 1870\n}(jQuery);                                                                                                             // 1871\n                                                                                                                       // 1872\n/* ========================================================================                                            // 1873\n * Bootstrap: scrollspy.js v3.3.6                                                                                      // 1874\n * http://getbootstrap.com/javascript/#scrollspy                                                                       // 1875\n * ========================================================================                                            // 1876\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 1877\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1878\n * ======================================================================== */                                         // 1879\n                                                                                                                       // 1880\n                                                                                                                       // 1881\n+function ($) {                                                                                                        // 1882\n  'use strict';                                                                                                        // 1883\n                                                                                                                       // 1884\n  // SCROLLSPY CLASS DEFINITION                                                                                        // 1885\n  // ==========================                                                                                        // 1886\n                                                                                                                       // 1887\n  function ScrollSpy(element, options) {                                                                               // 1888\n    this.$body          = $(document.body)                                                                             // 1889\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)                                        // 1890\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)                                                    // 1891\n    this.selector       = (this.options.target || '') + ' .nav li > a'                                                 // 1892\n    this.offsets        = []                                                                                           // 1893\n    this.targets        = []                                                                                           // 1894\n    this.activeTarget   = null                                                                                         // 1895\n    this.scrollHeight   = 0                                                                                            // 1896\n                                                                                                                       // 1897\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))                                         // 1898\n    this.refresh()                                                                                                     // 1899\n    this.process()                                                                                                     // 1900\n  }                                                                                                                    // 1901\n                                                                                                                       // 1902\n  ScrollSpy.VERSION  = '3.3.6'                                                                                         // 1903\n                                                                                                                       // 1904\n  ScrollSpy.DEFAULTS = {                                                                                               // 1905\n    offset: 10                                                                                                         // 1906\n  }                                                                                                                    // 1907\n                                                                                                                       // 1908\n  ScrollSpy.prototype.getScrollHeight = function () {                                                                  // 1909\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }                                                                                                                    // 1911\n                                                                                                                       // 1912\n  ScrollSpy.prototype.refresh = function () {                                                                          // 1913\n    var that          = this                                                                                           // 1914\n    var offsetMethod  = 'offset'                                                                                       // 1915\n    var offsetBase    = 0                                                                                              // 1916\n                                                                                                                       // 1917\n    this.offsets      = []                                                                                             // 1918\n    this.targets      = []                                                                                             // 1919\n    this.scrollHeight = this.getScrollHeight()                                                                         // 1920\n                                                                                                                       // 1921\n    if (!$.isWindow(this.$scrollElement[0])) {                                                                         // 1922\n      offsetMethod = 'position'                                                                                        // 1923\n      offsetBase   = this.$scrollElement.scrollTop()                                                                   // 1924\n    }                                                                                                                  // 1925\n                                                                                                                       // 1926\n    this.$body                                                                                                         // 1927\n      .find(this.selector)                                                                                             // 1928\n      .map(function () {                                                                                               // 1929\n        var $el   = $(this)                                                                                            // 1930\n        var href  = $el.data('target') || $el.attr('href')                                                             // 1931\n        var $href = /^#./.test(href) && $(href)                                                                        // 1932\n                                                                                                                       // 1933\n        return ($href                                                                                                  // 1934\n          && $href.length                                                                                              // 1935\n          && $href.is(':visible')                                                                                      // 1936\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null                                                 // 1937\n      })                                                                                                               // 1938\n      .sort(function (a, b) { return a[0] - b[0] })                                                                    // 1939\n      .each(function () {                                                                                              // 1940\n        that.offsets.push(this[0])                                                                                     // 1941\n        that.targets.push(this[1])                                                                                     // 1942\n      })                                                                                                               // 1943\n  }                                                                                                                    // 1944\n                                                                                                                       // 1945\n  ScrollSpy.prototype.process = function () {                                                                          // 1946\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset                                           // 1947\n    var scrollHeight = this.getScrollHeight()                                                                          // 1948\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()                               // 1949\n    var offsets      = this.offsets                                                                                    // 1950\n    var targets      = this.targets                                                                                    // 1951\n    var activeTarget = this.activeTarget                                                                               // 1952\n    var i                                                                                                              // 1953\n                                                                                                                       // 1954\n    if (this.scrollHeight != scrollHeight) {                                                                           // 1955\n      this.refresh()                                                                                                   // 1956\n    }                                                                                                                  // 1957\n                                                                                                                       // 1958\n    if (scrollTop >= maxScroll) {                                                                                      // 1959\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)                                     // 1960\n    }                                                                                                                  // 1961\n                                                                                                                       // 1962\n    if (activeTarget && scrollTop < offsets[0]) {                                                                      // 1963\n      this.activeTarget = null                                                                                         // 1964\n      return this.clear()                                                                                              // 1965\n    }                                                                                                                  // 1966\n                                                                                                                       // 1967\n    for (i = offsets.length; i--;) {                                                                                   // 1968\n      activeTarget != targets[i]                                                                                       // 1969\n        && scrollTop >= offsets[i]                                                                                     // 1970\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])                                                // 1971\n        && this.activate(targets[i])                                                                                   // 1972\n    }                                                                                                                  // 1973\n  }                                                                                                                    // 1974\n                                                                                                                       // 1975\n  ScrollSpy.prototype.activate = function (target) {                                                                   // 1976\n    this.activeTarget = target                                                                                         // 1977\n                                                                                                                       // 1978\n    this.clear()                                                                                                       // 1979\n                                                                                                                       // 1980\n    var selector = this.selector +                                                                                     // 1981\n      '[data-target=\"' + target + '\"],' +                                                                              // 1982\n      this.selector + '[href=\"' + target + '\"]'                                                                        // 1983\n                                                                                                                       // 1984\n    var active = $(selector)                                                                                           // 1985\n      .parents('li')                                                                                                   // 1986\n      .addClass('active')                                                                                              // 1987\n                                                                                                                       // 1988\n    if (active.parent('.dropdown-menu').length) {                                                                      // 1989\n      active = active                                                                                                  // 1990\n        .closest('li.dropdown')                                                                                        // 1991\n        .addClass('active')                                                                                            // 1992\n    }                                                                                                                  // 1993\n                                                                                                                       // 1994\n    active.trigger('activate.bs.scrollspy')                                                                            // 1995\n  }                                                                                                                    // 1996\n                                                                                                                       // 1997\n  ScrollSpy.prototype.clear = function () {                                                                            // 1998\n    $(this.selector)                                                                                                   // 1999\n      .parentsUntil(this.options.target, '.active')                                                                    // 2000\n      .removeClass('active')                                                                                           // 2001\n  }                                                                                                                    // 2002\n                                                                                                                       // 2003\n                                                                                                                       // 2004\n  // SCROLLSPY PLUGIN DEFINITION                                                                                       // 2005\n  // ===========================                                                                                       // 2006\n                                                                                                                       // 2007\n  function Plugin(option) {                                                                                            // 2008\n    return this.each(function () {                                                                                     // 2009\n      var $this   = $(this)                                                                                            // 2010\n      var data    = $this.data('bs.scrollspy')                                                                         // 2011\n      var options = typeof option == 'object' && option                                                                // 2012\n                                                                                                                       // 2013\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))                                     // 2014\n      if (typeof option == 'string') data[option]()                                                                    // 2015\n    })                                                                                                                 // 2016\n  }                                                                                                                    // 2017\n                                                                                                                       // 2018\n  var old = $.fn.scrollspy                                                                                             // 2019\n                                                                                                                       // 2020\n  $.fn.scrollspy             = Plugin                                                                                  // 2021\n  $.fn.scrollspy.Constructor = ScrollSpy                                                                               // 2022\n                                                                                                                       // 2023\n                                                                                                                       // 2024\n  // SCROLLSPY NO CONFLICT                                                                                             // 2025\n  // =====================                                                                                             // 2026\n                                                                                                                       // 2027\n  $.fn.scrollspy.noConflict = function () {                                                                            // 2028\n    $.fn.scrollspy = old                                                                                               // 2029\n    return this                                                                                                        // 2030\n  }                                                                                                                    // 2031\n                                                                                                                       // 2032\n                                                                                                                       // 2033\n  // SCROLLSPY DATA-API                                                                                                // 2034\n  // ==================                                                                                                // 2035\n                                                                                                                       // 2036\n  $(window).on('load.bs.scrollspy.data-api', function () {                                                             // 2037\n    $('[data-spy=\"scroll\"]').each(function () {                                                                        // 2038\n      var $spy = $(this)                                                                                               // 2039\n      Plugin.call($spy, $spy.data())                                                                                   // 2040\n    })                                                                                                                 // 2041\n  })                                                                                                                   // 2042\n                                                                                                                       // 2043\n}(jQuery);                                                                                                             // 2044\n                                                                                                                       // 2045\n/* ========================================================================                                            // 2046\n * Bootstrap: tab.js v3.3.6                                                                                            // 2047\n * http://getbootstrap.com/javascript/#tabs                                                                            // 2048\n * ========================================================================                                            // 2049\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 2050\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 2051\n * ======================================================================== */                                         // 2052\n                                                                                                                       // 2053\n                                                                                                                       // 2054\n+function ($) {                                                                                                        // 2055\n  'use strict';                                                                                                        // 2056\n                                                                                                                       // 2057\n  // TAB CLASS DEFINITION                                                                                              // 2058\n  // ====================                                                                                              // 2059\n                                                                                                                       // 2060\n  var Tab = function (element) {                                                                                       // 2061\n    // jscs:disable requireDollarBeforejQueryAssignment                                                                // 2062\n    this.element = $(element)                                                                                          // 2063\n    // jscs:enable requireDollarBeforejQueryAssignment                                                                 // 2064\n  }                                                                                                                    // 2065\n                                                                                                                       // 2066\n  Tab.VERSION = '3.3.6'                                                                                                // 2067\n                                                                                                                       // 2068\n  Tab.TRANSITION_DURATION = 150                                                                                        // 2069\n                                                                                                                       // 2070\n  Tab.prototype.show = function () {                                                                                   // 2071\n    var $this    = this.element                                                                                        // 2072\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')                                                             // 2073\n    var selector = $this.data('target')                                                                                // 2074\n                                                                                                                       // 2075\n    if (!selector) {                                                                                                   // 2076\n      selector = $this.attr('href')                                                                                    // 2077\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7                                   // 2078\n    }                                                                                                                  // 2079\n                                                                                                                       // 2080\n    if ($this.parent('li').hasClass('active')) return                                                                  // 2081\n                                                                                                                       // 2082\n    var $previous = $ul.find('.active:last a')                                                                         // 2083\n    var hideEvent = $.Event('hide.bs.tab', {                                                                           // 2084\n      relatedTarget: $this[0]                                                                                          // 2085\n    })                                                                                                                 // 2086\n    var showEvent = $.Event('show.bs.tab', {                                                                           // 2087\n      relatedTarget: $previous[0]                                                                                      // 2088\n    })                                                                                                                 // 2089\n                                                                                                                       // 2090\n    $previous.trigger(hideEvent)                                                                                       // 2091\n    $this.trigger(showEvent)                                                                                           // 2092\n                                                                                                                       // 2093\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return                                       // 2094\n                                                                                                                       // 2095\n    var $target = $(selector)                                                                                          // 2096\n                                                                                                                       // 2097\n    this.activate($this.closest('li'), $ul)                                                                            // 2098\n    this.activate($target, $target.parent(), function () {                                                             // 2099\n      $previous.trigger({                                                                                              // 2100\n        type: 'hidden.bs.tab',                                                                                         // 2101\n        relatedTarget: $this[0]                                                                                        // 2102\n      })                                                                                                               // 2103\n      $this.trigger({                                                                                                  // 2104\n        type: 'shown.bs.tab',                                                                                          // 2105\n        relatedTarget: $previous[0]                                                                                    // 2106\n      })                                                                                                               // 2107\n    })                                                                                                                 // 2108\n  }                                                                                                                    // 2109\n                                                                                                                       // 2110\n  Tab.prototype.activate = function (element, container, callback) {                                                   // 2111\n    var $active    = container.find('> .active')                                                                       // 2112\n    var transition = callback                                                                                          // 2113\n      && $.support.transition                                                                                          // 2114\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)                            // 2115\n                                                                                                                       // 2116\n    function next() {                                                                                                  // 2117\n      $active                                                                                                          // 2118\n        .removeClass('active')                                                                                         // 2119\n        .find('> .dropdown-menu > .active')                                                                            // 2120\n          .removeClass('active')                                                                                       // 2121\n        .end()                                                                                                         // 2122\n        .find('[data-toggle=\"tab\"]')                                                                                   // 2123\n          .attr('aria-expanded', false)                                                                                // 2124\n                                                                                                                       // 2125\n      element                                                                                                          // 2126\n        .addClass('active')                                                                                            // 2127\n        .find('[data-toggle=\"tab\"]')                                                                                   // 2128\n          .attr('aria-expanded', true)                                                                                 // 2129\n                                                                                                                       // 2130\n      if (transition) {                                                                                                // 2131\n        element[0].offsetWidth // reflow for transition                                                                // 2132\n        element.addClass('in')                                                                                         // 2133\n      } else {                                                                                                         // 2134\n        element.removeClass('fade')                                                                                    // 2135\n      }                                                                                                                // 2136\n                                                                                                                       // 2137\n      if (element.parent('.dropdown-menu').length) {                                                                   // 2138\n        element                                                                                                        // 2139\n          .closest('li.dropdown')                                                                                      // 2140\n            .addClass('active')                                                                                        // 2141\n          .end()                                                                                                       // 2142\n          .find('[data-toggle=\"tab\"]')                                                                                 // 2143\n            .attr('aria-expanded', true)                                                                               // 2144\n      }                                                                                                                // 2145\n                                                                                                                       // 2146\n      callback && callback()                                                                                           // 2147\n    }                                                                                                                  // 2148\n                                                                                                                       // 2149\n    $active.length && transition ?                                                                                     // 2150\n      $active                                                                                                          // 2151\n        .one('bsTransitionEnd', next)                                                                                  // 2152\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :                                                               // 2153\n      next()                                                                                                           // 2154\n                                                                                                                       // 2155\n    $active.removeClass('in')                                                                                          // 2156\n  }                                                                                                                    // 2157\n                                                                                                                       // 2158\n                                                                                                                       // 2159\n  // TAB PLUGIN DEFINITION                                                                                             // 2160\n  // =====================                                                                                             // 2161\n                                                                                                                       // 2162\n  function Plugin(option) {                                                                                            // 2163\n    return this.each(function () {                                                                                     // 2164\n      var $this = $(this)                                                                                              // 2165\n      var data  = $this.data('bs.tab')                                                                                 // 2166\n                                                                                                                       // 2167\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))                                                          // 2168\n      if (typeof option == 'string') data[option]()                                                                    // 2169\n    })                                                                                                                 // 2170\n  }                                                                                                                    // 2171\n                                                                                                                       // 2172\n  var old = $.fn.tab                                                                                                   // 2173\n                                                                                                                       // 2174\n  $.fn.tab             = Plugin                                                                                        // 2175\n  $.fn.tab.Constructor = Tab                                                                                           // 2176\n                                                                                                                       // 2177\n                                                                                                                       // 2178\n  // TAB NO CONFLICT                                                                                                   // 2179\n  // ===============                                                                                                   // 2180\n                                                                                                                       // 2181\n  $.fn.tab.noConflict = function () {                                                                                  // 2182\n    $.fn.tab = old                                                                                                     // 2183\n    return this                                                                                                        // 2184\n  }                                                                                                                    // 2185\n                                                                                                                       // 2186\n                                                                                                                       // 2187\n  // TAB DATA-API                                                                                                      // 2188\n  // ============                                                                                                      // 2189\n                                                                                                                       // 2190\n  var clickHandler = function (e) {                                                                                    // 2191\n    e.preventDefault()                                                                                                 // 2192\n    Plugin.call($(this), 'show')                                                                                       // 2193\n  }                                                                                                                    // 2194\n                                                                                                                       // 2195\n  $(document)                                                                                                          // 2196\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)                                                  // 2197\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)                                                 // 2198\n                                                                                                                       // 2199\n}(jQuery);                                                                                                             // 2200\n                                                                                                                       // 2201\n/* ========================================================================                                            // 2202\n * Bootstrap: affix.js v3.3.6                                                                                          // 2203\n * http://getbootstrap.com/javascript/#affix                                                                           // 2204\n * ========================================================================                                            // 2205\n * Copyright 2011-2015 Twitter, Inc.                                                                                   // 2206\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 2207\n * ======================================================================== */                                         // 2208\n                                                                                                                       // 2209\n                                                                                                                       // 2210\n+function ($) {                                                                                                        // 2211\n  'use strict';                                                                                                        // 2212\n                                                                                                                       // 2213\n  // AFFIX CLASS DEFINITION                                                                                            // 2214\n  // ======================                                                                                            // 2215\n                                                                                                                       // 2216\n  var Affix = function (element, options) {                                                                            // 2217\n    this.options = $.extend({}, Affix.DEFAULTS, options)                                                               // 2218\n                                                                                                                       // 2219\n    this.$target = $(this.options.target)                                                                              // 2220\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))                                               // 2221\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))                                  // 2222\n                                                                                                                       // 2223\n    this.$element     = $(element)                                                                                     // 2224\n    this.affixed      = null                                                                                           // 2225\n    this.unpin        = null                                                                                           // 2226\n    this.pinnedOffset = null                                                                                           // 2227\n                                                                                                                       // 2228\n    this.checkPosition()                                                                                               // 2229\n  }                                                                                                                    // 2230\n                                                                                                                       // 2231\n  Affix.VERSION  = '3.3.6'                                                                                             // 2232\n                                                                                                                       // 2233\n  Affix.RESET    = 'affix affix-top affix-bottom'                                                                      // 2234\n                                                                                                                       // 2235\n  Affix.DEFAULTS = {                                                                                                   // 2236\n    offset: 0,                                                                                                         // 2237\n    target: window                                                                                                     // 2238\n  }                                                                                                                    // 2239\n                                                                                                                       // 2240\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {                                // 2241\n    var scrollTop    = this.$target.scrollTop()                                                                        // 2242\n    var position     = this.$element.offset()                                                                          // 2243\n    var targetHeight = this.$target.height()                                                                           // 2244\n                                                                                                                       // 2245\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false                       // 2246\n                                                                                                                       // 2247\n    if (this.affixed == 'bottom') {                                                                                    // 2248\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'                        // 2249\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'                              // 2250\n    }                                                                                                                  // 2251\n                                                                                                                       // 2252\n    var initializing   = this.affixed == null                                                                          // 2253\n    var colliderTop    = initializing ? scrollTop : position.top                                                       // 2254\n    var colliderHeight = initializing ? targetHeight : height                                                          // 2255\n                                                                                                                       // 2256\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'                                                      // 2257\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'         // 2258\n                                                                                                                       // 2259\n    return false                                                                                                       // 2260\n  }                                                                                                                    // 2261\n                                                                                                                       // 2262\n  Affix.prototype.getPinnedOffset = function () {                                                                      // 2263\n    if (this.pinnedOffset) return this.pinnedOffset                                                                    // 2264\n    this.$element.removeClass(Affix.RESET).addClass('affix')                                                           // 2265\n    var scrollTop = this.$target.scrollTop()                                                                           // 2266\n    var position  = this.$element.offset()                                                                             // 2267\n    return (this.pinnedOffset = position.top - scrollTop)                                                              // 2268\n  }                                                                                                                    // 2269\n                                                                                                                       // 2270\n  Affix.prototype.checkPositionWithEventLoop = function () {                                                           // 2271\n    setTimeout($.proxy(this.checkPosition, this), 1)                                                                   // 2272\n  }                                                                                                                    // 2273\n                                                                                                                       // 2274\n  Affix.prototype.checkPosition = function () {                                                                        // 2275\n    if (!this.$element.is(':visible')) return                                                                          // 2276\n                                                                                                                       // 2277\n    var height       = this.$element.height()                                                                          // 2278\n    var offset       = this.options.offset                                                                             // 2279\n    var offsetTop    = offset.top                                                                                      // 2280\n    var offsetBottom = offset.bottom                                                                                   // 2281\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())                                       // 2282\n                                                                                                                       // 2283\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset                                           // 2284\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)                                    // 2285\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)                                 // 2286\n                                                                                                                       // 2287\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)                                           // 2288\n                                                                                                                       // 2289\n    if (this.affixed != affix) {                                                                                       // 2290\n      if (this.unpin != null) this.$element.css('top', '')                                                             // 2291\n                                                                                                                       // 2292\n      var affixType = 'affix' + (affix ? '-' + affix : '')                                                             // 2293\n      var e         = $.Event(affixType + '.bs.affix')                                                                 // 2294\n                                                                                                                       // 2295\n      this.$element.trigger(e)                                                                                         // 2296\n                                                                                                                       // 2297\n      if (e.isDefaultPrevented()) return                                                                               // 2298\n                                                                                                                       // 2299\n      this.affixed = affix                                                                                             // 2300\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null                                                   // 2301\n                                                                                                                       // 2302\n      this.$element                                                                                                    // 2303\n        .removeClass(Affix.RESET)                                                                                      // 2304\n        .addClass(affixType)                                                                                           // 2305\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')                                                  // 2306\n    }                                                                                                                  // 2307\n                                                                                                                       // 2308\n    if (affix == 'bottom') {                                                                                           // 2309\n      this.$element.offset({                                                                                           // 2310\n        top: scrollHeight - height - offsetBottom                                                                      // 2311\n      })                                                                                                               // 2312\n    }                                                                                                                  // 2313\n  }                                                                                                                    // 2314\n                                                                                                                       // 2315\n                                                                                                                       // 2316\n  // AFFIX PLUGIN DEFINITION                                                                                           // 2317\n  // =======================                                                                                           // 2318\n                                                                                                                       // 2319\n  function Plugin(option) {                                                                                            // 2320\n    return this.each(function () {                                                                                     // 2321\n      var $this   = $(this)                                                                                            // 2322\n      var data    = $this.data('bs.affix')                                                                             // 2323\n      var options = typeof option == 'object' && option                                                                // 2324\n                                                                                                                       // 2325\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))                                             // 2326\n      if (typeof option == 'string') data[option]()                                                                    // 2327\n    })                                                                                                                 // 2328\n  }                                                                                                                    // 2329\n                                                                                                                       // 2330\n  var old = $.fn.affix                                                                                                 // 2331\n                                                                                                                       // 2332\n  $.fn.affix             = Plugin                                                                                      // 2333\n  $.fn.affix.Constructor = Affix                                                                                       // 2334\n                                                                                                                       // 2335\n                                                                                                                       // 2336\n  // AFFIX NO CONFLICT                                                                                                 // 2337\n  // =================                                                                                                 // 2338\n                                                                                                                       // 2339\n  $.fn.affix.noConflict = function () {                                                                                // 2340\n    $.fn.affix = old                                                                                                   // 2341\n    return this                                                                                                        // 2342\n  }                                                                                                                    // 2343\n                                                                                                                       // 2344\n                                                                                                                       // 2345\n  // AFFIX DATA-API                                                                                                    // 2346\n  // ==============                                                                                                    // 2347\n                                                                                                                       // 2348\n  $(window).on('load', function () {                                                                                   // 2349\n    $('[data-spy=\"affix\"]').each(function () {                                                                         // 2350\n      var $spy = $(this)                                                                                               // 2351\n      var data = $spy.data()                                                                                           // 2352\n                                                                                                                       // 2353\n      data.offset = data.offset || {}                                                                                  // 2354\n                                                                                                                       // 2355\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom                                            // 2356\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop                                               // 2357\n                                                                                                                       // 2358\n      Plugin.call($spy, data)                                                                                          // 2359\n    })                                                                                                                 // 2360\n  })                                                                                                                   // 2361\n                                                                                                                       // 2362\n}(jQuery);                                                                                                             // 2363\n                                                                                                                       // 2364\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['twbs:bootstrap'] = {};\n\n})();\n","servePath":"/packages/twbs_bootstrap.js"}]