[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/mizzao_bootboxjs/packages/mizzao_bootboxjs.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                                                               //    // 4\n// packages/mizzao:bootboxjs/bootbox/bootbox.js                                                                  //    // 5\n//                                                                                                               //    // 6\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                                                 //    // 8\n/**                                                                                                              // 1  // 9\n * bootbox.js [v4.4.0]                                                                                           // 2  // 10\n *                                                                                                               // 3  // 11\n * http://bootboxjs.com/license.txt                                                                              // 4  // 12\n */                                                                                                              // 5  // 13\n                                                                                                                 // 6  // 14\n// @see https://github.com/makeusabrew/bootbox/issues/180                                                        // 7  // 15\n// @see https://github.com/makeusabrew/bootbox/issues/186                                                        // 8  // 16\n(function (root, factory) {                                                                                      // 9  // 17\n                                                                                                                 // 10\n  \"use strict\";                                                                                                  // 11\n  if (typeof define === \"function\" && define.amd) {                                                              // 12\n    // AMD. Register as an anonymous module.                                                                     // 13\n    define([\"jquery\"], factory);                                                                                 // 14\n  } else if (typeof exports === \"object\") {                                                                      // 15\n    // Node. Does not work with strict CommonJS, but                                                             // 16\n    // only CommonJS-like environments that support module.exports,                                              // 17\n    // like Node.                                                                                                // 18\n    module.exports = factory(require(\"jquery\"));                                                                 // 19\n  } else {                                                                                                       // 20\n    // Browser globals (root is window)                                                                          // 21\n    root.bootbox = factory(root.jQuery);                                                                         // 22\n  }                                                                                                              // 23\n                                                                                                                 // 24\n}(this, function init($, undefined) {                                                                            // 25\n                                                                                                                 // 26\n  \"use strict\";                                                                                                  // 27\n                                                                                                                 // 28\n  // the base DOM structure needed to create a modal                                                             // 29\n  var templates = {                                                                                              // 30\n    dialog:                                                                                                      // 31\n      \"<div class='bootbox modal' tabindex='-1' role='dialog'>\" +                                                // 32\n        \"<div class='modal-dialog'>\" +                                                                           // 33\n          \"<div class='modal-content'>\" +                                                                        // 34\n            \"<div class='modal-body'><div class='bootbox-body'></div></div>\" +                                   // 35\n          \"</div>\" +                                                                                             // 36\n        \"</div>\" +                                                                                               // 37\n      \"</div>\",                                                                                                  // 38\n    header:                                                                                                      // 39\n      \"<div class='modal-header'>\" +                                                                             // 40\n        \"<h4 class='modal-title'></h4>\" +                                                                        // 41\n      \"</div>\",                                                                                                  // 42\n    footer:                                                                                                      // 43\n      \"<div class='modal-footer'></div>\",                                                                        // 44\n    closeButton:                                                                                                 // 45\n      \"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\",\n    form:                                                                                                        // 47\n      \"<form class='bootbox-form'></form>\",                                                                      // 48\n    inputs: {                                                                                                    // 49\n      text:                                                                                                      // 50\n        \"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",            // 51\n      textarea:                                                                                                  // 52\n        \"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\",                       // 53\n      email:                                                                                                     // 54\n        \"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",      // 55\n      select:                                                                                                    // 56\n        \"<select class='bootbox-input bootbox-input-select form-control'></select>\",                             // 57\n      checkbox:                                                                                                  // 58\n        \"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\",\n      date:                                                                                                      // 60\n        \"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\",          // 61\n      time:                                                                                                      // 62\n        \"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\",          // 63\n      number:                                                                                                    // 64\n        \"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\",      // 65\n      password:                                                                                                  // 66\n        \"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\" // 67\n    }                                                                                                            // 68\n  };                                                                                                             // 69\n                                                                                                                 // 70\n  var defaults = {                                                                                               // 71\n    // default language                                                                                          // 72\n    locale: \"en\",                                                                                                // 73\n    // show backdrop or not. Default to static so user has to interact with dialog                               // 74\n    backdrop: \"static\",                                                                                          // 75\n    // animate the modal in/out                                                                                  // 76\n    animate: true,                                                                                               // 77\n    // additional class string applied to the top level dialog                                                   // 78\n    className: null,                                                                                             // 79\n    // whether or not to include a close button                                                                  // 80\n    closeButton: true,                                                                                           // 81\n    // show the dialog immediately by default                                                                    // 82\n    show: true,                                                                                                  // 83\n    // dialog container                                                                                          // 84\n    container: \"body\"                                                                                            // 85\n  };                                                                                                             // 86\n                                                                                                                 // 87\n  // our public object; augmented after our private API                                                          // 88\n  var exports = {};                                                                                              // 89\n                                                                                                                 // 90\n  /**                                                                                                            // 91\n   * @private                                                                                                    // 92\n   */                                                                                                            // 93\n  function _t(key) {                                                                                             // 94\n    var locale = locales[defaults.locale];                                                                       // 95\n    return locale ? locale[key] : locales.en[key];                                                               // 96\n  }                                                                                                              // 97\n                                                                                                                 // 98\n  function processCallback(e, dialog, callback) {                                                                // 99\n    e.stopPropagation();                                                                                         // 100\n    e.preventDefault();                                                                                          // 101\n                                                                                                                 // 102\n    // by default we assume a callback will get rid of the dialog,                                               // 103\n    // although it is given the opportunity to override this                                                     // 104\n                                                                                                                 // 105\n    // so, if the callback can be invoked and it *explicitly returns false*                                      // 106\n    // then we'll set a flag to keep the dialog active...                                                        // 107\n    var preserveDialog = $.isFunction(callback) && callback.call(dialog, e) === false;                           // 108\n                                                                                                                 // 109\n    // ... otherwise we'll bin it                                                                                // 110\n    if (!preserveDialog) {                                                                                       // 111\n      dialog.modal(\"hide\");                                                                                      // 112\n    }                                                                                                            // 113\n  }                                                                                                              // 114\n                                                                                                                 // 115\n  function getKeyLength(obj) {                                                                                   // 116\n    // @TODO defer to Object.keys(x).length if available?                                                        // 117\n    var k, t = 0;                                                                                                // 118\n    for (k in obj) {                                                                                             // 119\n      t ++;                                                                                                      // 120\n    }                                                                                                            // 121\n    return t;                                                                                                    // 122\n  }                                                                                                              // 123\n                                                                                                                 // 124\n  function each(collection, iterator) {                                                                          // 125\n    var index = 0;                                                                                               // 126\n    $.each(collection, function(key, value) {                                                                    // 127\n      iterator(key, value, index++);                                                                             // 128\n    });                                                                                                          // 129\n  }                                                                                                              // 130\n                                                                                                                 // 131\n  function sanitize(options) {                                                                                   // 132\n    var buttons;                                                                                                 // 133\n    var total;                                                                                                   // 134\n                                                                                                                 // 135\n    if (typeof options !== \"object\") {                                                                           // 136\n      throw new Error(\"Please supply an object of options\");                                                     // 137\n    }                                                                                                            // 138\n                                                                                                                 // 139\n    if (!options.message) {                                                                                      // 140\n      throw new Error(\"Please specify a message\");                                                               // 141\n    }                                                                                                            // 142\n                                                                                                                 // 143\n    // make sure any supplied options take precedence over defaults                                              // 144\n    options = $.extend({}, defaults, options);                                                                   // 145\n                                                                                                                 // 146\n    if (!options.buttons) {                                                                                      // 147\n      options.buttons = {};                                                                                      // 148\n    }                                                                                                            // 149\n                                                                                                                 // 150\n    buttons = options.buttons;                                                                                   // 151\n                                                                                                                 // 152\n    total = getKeyLength(buttons);                                                                               // 153\n                                                                                                                 // 154\n    each(buttons, function(key, button, index) {                                                                 // 155\n                                                                                                                 // 156\n      if ($.isFunction(button)) {                                                                                // 157\n        // short form, assume value is our callback. Since button                                                // 158\n        // isn't an object it isn't a reference either so re-assign it                                           // 159\n        button = buttons[key] = {                                                                                // 160\n          callback: button                                                                                       // 161\n        };                                                                                                       // 162\n      }                                                                                                          // 163\n                                                                                                                 // 164\n      // before any further checks make sure by now button is the correct type                                   // 165\n      if ($.type(button) !== \"object\") {                                                                         // 166\n        throw new Error(\"button with key \" + key + \" must be an object\");                                        // 167\n      }                                                                                                          // 168\n                                                                                                                 // 169\n      if (!button.label) {                                                                                       // 170\n        // the lack of an explicit label means we'll assume the key is good enough                               // 171\n        button.label = key;                                                                                      // 172\n      }                                                                                                          // 173\n                                                                                                                 // 174\n      if (!button.className) {                                                                                   // 175\n        if (total <= 2 && index === total-1) {                                                                   // 176\n          // always add a primary to the main option in a two-button dialog                                      // 177\n          button.className = \"btn-primary\";                                                                      // 178\n        } else {                                                                                                 // 179\n          button.className = \"btn-default\";                                                                      // 180\n        }                                                                                                        // 181\n      }                                                                                                          // 182\n    });                                                                                                          // 183\n                                                                                                                 // 184\n    return options;                                                                                              // 185\n  }                                                                                                              // 186\n                                                                                                                 // 187\n  /**                                                                                                            // 188\n   * map a flexible set of arguments into a single returned object                                               // 189\n   * if args.length is already one just return it, otherwise                                                     // 190\n   * use the properties argument to map the unnamed args to                                                      // 191\n   * object properties                                                                                           // 192\n   * so in the latter case:                                                                                      // 193\n   * mapArguments([\"foo\", $.noop], [\"message\", \"callback\"])                                                      // 194\n   * -> { message: \"foo\", callback: $.noop }                                                                     // 195\n   */                                                                                                            // 196\n  function mapArguments(args, properties) {                                                                      // 197\n    var argn = args.length;                                                                                      // 198\n    var options = {};                                                                                            // 199\n                                                                                                                 // 200\n    if (argn < 1 || argn > 2) {                                                                                  // 201\n      throw new Error(\"Invalid argument length\");                                                                // 202\n    }                                                                                                            // 203\n                                                                                                                 // 204\n    if (argn === 2 || typeof args[0] === \"string\") {                                                             // 205\n      options[properties[0]] = args[0];                                                                          // 206\n      options[properties[1]] = args[1];                                                                          // 207\n    } else {                                                                                                     // 208\n      options = args[0];                                                                                         // 209\n    }                                                                                                            // 210\n                                                                                                                 // 211\n    return options;                                                                                              // 212\n  }                                                                                                              // 213\n                                                                                                                 // 214\n  /**                                                                                                            // 215\n   * merge a set of default dialog options with user supplied arguments                                          // 216\n   */                                                                                                            // 217\n  function mergeArguments(defaults, args, properties) {                                                          // 218\n    return $.extend(                                                                                             // 219\n      // deep merge                                                                                              // 220\n      true,                                                                                                      // 221\n      // ensure the target is an empty, unreferenced object                                                      // 222\n      {},                                                                                                        // 223\n      // the base options object for this type of dialog (often just buttons)                                    // 224\n      defaults,                                                                                                  // 225\n      // args could be an object or array; if it's an array properties will                                      // 226\n      // map it to a proper options object                                                                       // 227\n      mapArguments(                                                                                              // 228\n        args,                                                                                                    // 229\n        properties                                                                                               // 230\n      )                                                                                                          // 231\n    );                                                                                                           // 232\n  }                                                                                                              // 233\n                                                                                                                 // 234\n  /**                                                                                                            // 235\n   * this entry-level method makes heavy use of composition to take a simple                                     // 236\n   * range of inputs and return valid options suitable for passing to bootbox.dialog                             // 237\n   */                                                                                                            // 238\n  function mergeDialogOptions(className, labels, properties, args) {                                             // 239\n    //  build up a base set of dialog properties                                                                 // 240\n    var baseOptions = {                                                                                          // 241\n      className: \"bootbox-\" + className,                                                                         // 242\n      buttons: createLabels.apply(null, labels)                                                                  // 243\n    };                                                                                                           // 244\n                                                                                                                 // 245\n    // ensure the buttons properties generated, *after* merging                                                  // 246\n    // with user args are still valid against the supplied labels                                                // 247\n    return validateButtons(                                                                                      // 248\n      // merge the generated base properties with user supplied arguments                                        // 249\n      mergeArguments(                                                                                            // 250\n        baseOptions,                                                                                             // 251\n        args,                                                                                                    // 252\n        // if args.length > 1, properties specify how each arg maps to an object key                             // 253\n        properties                                                                                               // 254\n      ),                                                                                                         // 255\n      labels                                                                                                     // 256\n    );                                                                                                           // 257\n  }                                                                                                              // 258\n                                                                                                                 // 259\n  /**                                                                                                            // 260\n   * from a given list of arguments return a suitable object of button labels                                    // 261\n   * all this does is normalise the given labels and translate them where possible                               // 262\n   * e.g. \"ok\", \"confirm\" -> { ok: \"OK, cancel: \"Annuleren\" }                                                    // 263\n   */                                                                                                            // 264\n  function createLabels() {                                                                                      // 265\n    var buttons = {};                                                                                            // 266\n                                                                                                                 // 267\n    for (var i = 0, j = arguments.length; i < j; i++) {                                                          // 268\n      var argument = arguments[i];                                                                               // 269\n      var key = argument.toLowerCase();                                                                          // 270\n      var value = argument.toUpperCase();                                                                        // 271\n                                                                                                                 // 272\n      buttons[key] = {                                                                                           // 273\n        label: _t(value)                                                                                         // 274\n      };                                                                                                         // 275\n    }                                                                                                            // 276\n                                                                                                                 // 277\n    return buttons;                                                                                              // 278\n  }                                                                                                              // 279\n                                                                                                                 // 280\n  function validateButtons(options, buttons) {                                                                   // 281\n    var allowedButtons = {};                                                                                     // 282\n    each(buttons, function(key, value) {                                                                         // 283\n      allowedButtons[value] = true;                                                                              // 284\n    });                                                                                                          // 285\n                                                                                                                 // 286\n    each(options.buttons, function(key) {                                                                        // 287\n      if (allowedButtons[key] === undefined) {                                                                   // 288\n        throw new Error(\"button key \" + key + \" is not allowed (options are \" + buttons.join(\"\\n\") + \")\");       // 289\n      }                                                                                                          // 290\n    });                                                                                                          // 291\n                                                                                                                 // 292\n    return options;                                                                                              // 293\n  }                                                                                                              // 294\n                                                                                                                 // 295\n  exports.alert = function() {                                                                                   // 296\n    var options;                                                                                                 // 297\n                                                                                                                 // 298\n    options = mergeDialogOptions(\"alert\", [\"ok\"], [\"message\", \"callback\"], arguments);                           // 299\n                                                                                                                 // 300\n    if (options.callback && !$.isFunction(options.callback)) {                                                   // 301\n      throw new Error(\"alert requires callback property to be a function when provided\");                        // 302\n    }                                                                                                            // 303\n                                                                                                                 // 304\n    /**                                                                                                          // 305\n     * overrides                                                                                                 // 306\n     */                                                                                                          // 307\n    options.buttons.ok.callback = options.onEscape = function() {                                                // 308\n      if ($.isFunction(options.callback)) {                                                                      // 309\n        return options.callback.call(this);                                                                      // 310\n      }                                                                                                          // 311\n      return true;                                                                                               // 312\n    };                                                                                                           // 313\n                                                                                                                 // 314\n    return exports.dialog(options);                                                                              // 315\n  };                                                                                                             // 316\n                                                                                                                 // 317\n  exports.confirm = function() {                                                                                 // 318\n    var options;                                                                                                 // 319\n                                                                                                                 // 320\n    options = mergeDialogOptions(\"confirm\", [\"cancel\", \"confirm\"], [\"message\", \"callback\"], arguments);          // 321\n                                                                                                                 // 322\n    /**                                                                                                          // 323\n     * overrides; undo anything the user tried to set they shouldn't have                                        // 324\n     */                                                                                                          // 325\n    options.buttons.cancel.callback = options.onEscape = function() {                                            // 326\n      return options.callback.call(this, false);                                                                 // 327\n    };                                                                                                           // 328\n                                                                                                                 // 329\n    options.buttons.confirm.callback = function() {                                                              // 330\n      return options.callback.call(this, true);                                                                  // 331\n    };                                                                                                           // 332\n                                                                                                                 // 333\n    // confirm specific validation                                                                               // 334\n    if (!$.isFunction(options.callback)) {                                                                       // 335\n      throw new Error(\"confirm requires a callback\");                                                            // 336\n    }                                                                                                            // 337\n                                                                                                                 // 338\n    return exports.dialog(options);                                                                              // 339\n  };                                                                                                             // 340\n                                                                                                                 // 341\n  exports.prompt = function() {                                                                                  // 342\n    var options;                                                                                                 // 343\n    var defaults;                                                                                                // 344\n    var dialog;                                                                                                  // 345\n    var form;                                                                                                    // 346\n    var input;                                                                                                   // 347\n    var shouldShow;                                                                                              // 348\n    var inputOptions;                                                                                            // 349\n                                                                                                                 // 350\n    // we have to create our form first otherwise                                                                // 351\n    // its value is undefined when gearing up our options                                                        // 352\n    // @TODO this could be solved by allowing message to                                                         // 353\n    // be a function instead...                                                                                  // 354\n    form = $(templates.form);                                                                                    // 355\n                                                                                                                 // 356\n    // prompt defaults are more complex than others in that                                                      // 357\n    // users can override more defaults                                                                          // 358\n    // @TODO I don't like that prompt has to do a lot of heavy                                                   // 359\n    // lifting which mergeDialogOptions can *almost* support already                                             // 360\n    // just because of 'value' and 'inputType' - can we refactor?                                                // 361\n    defaults = {                                                                                                 // 362\n      className: \"bootbox-prompt\",                                                                               // 363\n      buttons: createLabels(\"cancel\", \"confirm\"),                                                                // 364\n      value: \"\",                                                                                                 // 365\n      inputType: \"text\"                                                                                          // 366\n    };                                                                                                           // 367\n                                                                                                                 // 368\n    options = validateButtons(                                                                                   // 369\n      mergeArguments(defaults, arguments, [\"title\", \"callback\"]),                                                // 370\n      [\"cancel\", \"confirm\"]                                                                                      // 371\n    );                                                                                                           // 372\n                                                                                                                 // 373\n    // capture the user's show value; we always set this to false before                                         // 374\n    // spawning the dialog to give us a chance to attach some handlers to                                        // 375\n    // it, but we need to make sure we respect a preference not to show it                                       // 376\n    shouldShow = (options.show === undefined) ? true : options.show;                                             // 377\n                                                                                                                 // 378\n    /**                                                                                                          // 379\n     * overrides; undo anything the user tried to set they shouldn't have                                        // 380\n     */                                                                                                          // 381\n    options.message = form;                                                                                      // 382\n                                                                                                                 // 383\n    options.buttons.cancel.callback = options.onEscape = function() {                                            // 384\n      return options.callback.call(this, null);                                                                  // 385\n    };                                                                                                           // 386\n                                                                                                                 // 387\n    options.buttons.confirm.callback = function() {                                                              // 388\n      var value;                                                                                                 // 389\n                                                                                                                 // 390\n      switch (options.inputType) {                                                                               // 391\n        case \"text\":                                                                                             // 392\n        case \"textarea\":                                                                                         // 393\n        case \"email\":                                                                                            // 394\n        case \"select\":                                                                                           // 395\n        case \"date\":                                                                                             // 396\n        case \"time\":                                                                                             // 397\n        case \"number\":                                                                                           // 398\n        case \"password\":                                                                                         // 399\n          value = input.val();                                                                                   // 400\n          break;                                                                                                 // 401\n                                                                                                                 // 402\n        case \"checkbox\":                                                                                         // 403\n          var checkedItems = input.find(\"input:checked\");                                                        // 404\n                                                                                                                 // 405\n          // we assume that checkboxes are always multiple,                                                      // 406\n          // hence we default to an empty array                                                                  // 407\n          value = [];                                                                                            // 408\n                                                                                                                 // 409\n          each(checkedItems, function(_, item) {                                                                 // 410\n            value.push($(item).val());                                                                           // 411\n          });                                                                                                    // 412\n          break;                                                                                                 // 413\n      }                                                                                                          // 414\n                                                                                                                 // 415\n      return options.callback.call(this, value);                                                                 // 416\n    };                                                                                                           // 417\n                                                                                                                 // 418\n    options.show = false;                                                                                        // 419\n                                                                                                                 // 420\n    // prompt specific validation                                                                                // 421\n    if (!options.title) {                                                                                        // 422\n      throw new Error(\"prompt requires a title\");                                                                // 423\n    }                                                                                                            // 424\n                                                                                                                 // 425\n    if (!$.isFunction(options.callback)) {                                                                       // 426\n      throw new Error(\"prompt requires a callback\");                                                             // 427\n    }                                                                                                            // 428\n                                                                                                                 // 429\n    if (!templates.inputs[options.inputType]) {                                                                  // 430\n      throw new Error(\"invalid prompt type\");                                                                    // 431\n    }                                                                                                            // 432\n                                                                                                                 // 433\n    // create the input based on the supplied type                                                               // 434\n    input = $(templates.inputs[options.inputType]);                                                              // 435\n                                                                                                                 // 436\n    switch (options.inputType) {                                                                                 // 437\n      case \"text\":                                                                                               // 438\n      case \"textarea\":                                                                                           // 439\n      case \"email\":                                                                                              // 440\n      case \"date\":                                                                                               // 441\n      case \"time\":                                                                                               // 442\n      case \"number\":                                                                                             // 443\n      case \"password\":                                                                                           // 444\n        input.val(options.value);                                                                                // 445\n        break;                                                                                                   // 446\n                                                                                                                 // 447\n      case \"select\":                                                                                             // 448\n        var groups = {};                                                                                         // 449\n        inputOptions = options.inputOptions || [];                                                               // 450\n                                                                                                                 // 451\n        if (!$.isArray(inputOptions)) {                                                                          // 452\n          throw new Error(\"Please pass an array of input options\");                                              // 453\n        }                                                                                                        // 454\n                                                                                                                 // 455\n        if (!inputOptions.length) {                                                                              // 456\n          throw new Error(\"prompt with select requires options\");                                                // 457\n        }                                                                                                        // 458\n                                                                                                                 // 459\n        each(inputOptions, function(_, option) {                                                                 // 460\n                                                                                                                 // 461\n          // assume the element to attach to is the input...                                                     // 462\n          var elem = input;                                                                                      // 463\n                                                                                                                 // 464\n          if (option.value === undefined || option.text === undefined) {                                         // 465\n            throw new Error(\"given options in wrong format\");                                                    // 466\n          }                                                                                                      // 467\n                                                                                                                 // 468\n          // ... but override that element if this option sits in a group                                        // 469\n                                                                                                                 // 470\n          if (option.group) {                                                                                    // 471\n            // initialise group if necessary                                                                     // 472\n            if (!groups[option.group]) {                                                                         // 473\n              groups[option.group] = $(\"<optgroup/>\").attr(\"label\", option.group);                               // 474\n            }                                                                                                    // 475\n                                                                                                                 // 476\n            elem = groups[option.group];                                                                         // 477\n          }                                                                                                      // 478\n                                                                                                                 // 479\n          elem.append(\"<option value='\" + option.value + \"'>\" + option.text + \"</option>\");                      // 480\n        });                                                                                                      // 481\n                                                                                                                 // 482\n        each(groups, function(_, group) {                                                                        // 483\n          input.append(group);                                                                                   // 484\n        });                                                                                                      // 485\n                                                                                                                 // 486\n        // safe to set a select's value as per a normal input                                                    // 487\n        input.val(options.value);                                                                                // 488\n        break;                                                                                                   // 489\n                                                                                                                 // 490\n      case \"checkbox\":                                                                                           // 491\n        var values   = $.isArray(options.value) ? options.value : [options.value];                               // 492\n        inputOptions = options.inputOptions || [];                                                               // 493\n                                                                                                                 // 494\n        if (!inputOptions.length) {                                                                              // 495\n          throw new Error(\"prompt with checkbox requires options\");                                              // 496\n        }                                                                                                        // 497\n                                                                                                                 // 498\n        if (!inputOptions[0].value || !inputOptions[0].text) {                                                   // 499\n          throw new Error(\"given options in wrong format\");                                                      // 500\n        }                                                                                                        // 501\n                                                                                                                 // 502\n        // checkboxes have to nest within a containing element, so                                               // 503\n        // they break the rules a bit and we end up re-assigning                                                 // 504\n        // our 'input' element to this container instead                                                         // 505\n        input = $(\"<div/>\");                                                                                     // 506\n                                                                                                                 // 507\n        each(inputOptions, function(_, option) {                                                                 // 508\n          var checkbox = $(templates.inputs[options.inputType]);                                                 // 509\n                                                                                                                 // 510\n          checkbox.find(\"input\").attr(\"value\", option.value);                                                    // 511\n          checkbox.find(\"label\").append(option.text);                                                            // 512\n                                                                                                                 // 513\n          // we've ensured values is an array so we can always iterate over it                                   // 514\n          each(values, function(_, value) {                                                                      // 515\n            if (value === option.value) {                                                                        // 516\n              checkbox.find(\"input\").prop(\"checked\", true);                                                      // 517\n            }                                                                                                    // 518\n          });                                                                                                    // 519\n                                                                                                                 // 520\n          input.append(checkbox);                                                                                // 521\n        });                                                                                                      // 522\n        break;                                                                                                   // 523\n    }                                                                                                            // 524\n                                                                                                                 // 525\n    // @TODO provide an attributes option instead                                                                // 526\n    // and simply map that as keys: vals                                                                         // 527\n    if (options.placeholder) {                                                                                   // 528\n      input.attr(\"placeholder\", options.placeholder);                                                            // 529\n    }                                                                                                            // 530\n                                                                                                                 // 531\n    if (options.pattern) {                                                                                       // 532\n      input.attr(\"pattern\", options.pattern);                                                                    // 533\n    }                                                                                                            // 534\n                                                                                                                 // 535\n    if (options.maxlength) {                                                                                     // 536\n      input.attr(\"maxlength\", options.maxlength);                                                                // 537\n    }                                                                                                            // 538\n                                                                                                                 // 539\n    // now place it in our form                                                                                  // 540\n    form.append(input);                                                                                          // 541\n                                                                                                                 // 542\n    form.on(\"submit\", function(e) {                                                                              // 543\n      e.preventDefault();                                                                                        // 544\n      // Fix for SammyJS (or similar JS routing library) hijacking the form post.                                // 545\n      e.stopPropagation();                                                                                       // 546\n      // @TODO can we actually click *the* button object instead?                                                // 547\n      // e.g. buttons.confirm.click() or similar                                                                 // 548\n      dialog.find(\".btn-primary\").click();                                                                       // 549\n    });                                                                                                          // 550\n                                                                                                                 // 551\n    dialog = exports.dialog(options);                                                                            // 552\n                                                                                                                 // 553\n    // clear the existing handler focusing the submit button...                                                  // 554\n    dialog.off(\"shown.bs.modal\");                                                                                // 555\n                                                                                                                 // 556\n    // ...and replace it with one focusing our input, if possible                                                // 557\n    dialog.on(\"shown.bs.modal\", function() {                                                                     // 558\n      // need the closure here since input isn't                                                                 // 559\n      // an object otherwise                                                                                     // 560\n      input.focus();                                                                                             // 561\n    });                                                                                                          // 562\n                                                                                                                 // 563\n    if (shouldShow === true) {                                                                                   // 564\n      dialog.modal(\"show\");                                                                                      // 565\n    }                                                                                                            // 566\n                                                                                                                 // 567\n    return dialog;                                                                                               // 568\n  };                                                                                                             // 569\n                                                                                                                 // 570\n  exports.dialog = function(options) {                                                                           // 571\n    options = sanitize(options);                                                                                 // 572\n                                                                                                                 // 573\n    var dialog = $(templates.dialog);                                                                            // 574\n    var innerDialog = dialog.find(\".modal-dialog\");                                                              // 575\n    var body = dialog.find(\".modal-body\");                                                                       // 576\n    var buttons = options.buttons;                                                                               // 577\n    var buttonStr = \"\";                                                                                          // 578\n    var callbacks = {                                                                                            // 579\n      onEscape: options.onEscape                                                                                 // 580\n    };                                                                                                           // 581\n                                                                                                                 // 582\n    if ($.fn.modal === undefined) {                                                                              // 583\n      throw new Error(                                                                                           // 584\n        \"$.fn.modal is not defined; please double check you have included \" +                                    // 585\n        \"the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ \" +                           // 586\n        \"for more details.\"                                                                                      // 587\n      );                                                                                                         // 588\n    }                                                                                                            // 589\n                                                                                                                 // 590\n    each(buttons, function(key, button) {                                                                        // 591\n                                                                                                                 // 592\n      // @TODO I don't like this string appending to itself; bit dirty. Needs reworking                          // 593\n      // can we just build up button elements instead? slower but neater. Then button                            // 594\n      // can just become a template too                                                                          // 595\n      buttonStr += \"<button data-bb-handler='\" + key + \"' type='button' class='btn \" + button.className + \"'>\" + button.label + \"</button>\";\n      callbacks[key] = button.callback;                                                                          // 597\n    });                                                                                                          // 598\n                                                                                                                 // 599\n    body.find(\".bootbox-body\").html(options.message);                                                            // 600\n                                                                                                                 // 601\n    if (options.animate === true) {                                                                              // 602\n      dialog.addClass(\"fade\");                                                                                   // 603\n    }                                                                                                            // 604\n                                                                                                                 // 605\n    if (options.className) {                                                                                     // 606\n      dialog.addClass(options.className);                                                                        // 607\n    }                                                                                                            // 608\n                                                                                                                 // 609\n    if (options.size === \"large\") {                                                                              // 610\n      innerDialog.addClass(\"modal-lg\");                                                                          // 611\n    } else if (options.size === \"small\") {                                                                       // 612\n      innerDialog.addClass(\"modal-sm\");                                                                          // 613\n    }                                                                                                            // 614\n                                                                                                                 // 615\n    if (options.title) {                                                                                         // 616\n      body.before(templates.header);                                                                             // 617\n    }                                                                                                            // 618\n                                                                                                                 // 619\n    if (options.closeButton) {                                                                                   // 620\n      var closeButton = $(templates.closeButton);                                                                // 621\n                                                                                                                 // 622\n      if (options.title) {                                                                                       // 623\n        dialog.find(\".modal-header\").prepend(closeButton);                                                       // 624\n      } else {                                                                                                   // 625\n        closeButton.css(\"margin-top\", \"-10px\").prependTo(body);                                                  // 626\n      }                                                                                                          // 627\n    }                                                                                                            // 628\n                                                                                                                 // 629\n    if (options.title) {                                                                                         // 630\n      dialog.find(\".modal-title\").html(options.title);                                                           // 631\n    }                                                                                                            // 632\n                                                                                                                 // 633\n    if (buttonStr.length) {                                                                                      // 634\n      body.after(templates.footer);                                                                              // 635\n      dialog.find(\".modal-footer\").html(buttonStr);                                                              // 636\n    }                                                                                                            // 637\n                                                                                                                 // 638\n                                                                                                                 // 639\n    /**                                                                                                          // 640\n     * Bootstrap event listeners; used handle extra                                                              // 641\n     * setup & teardown required after the underlying                                                            // 642\n     * modal has performed certain actions                                                                       // 643\n     */                                                                                                          // 644\n                                                                                                                 // 645\n    dialog.on(\"hidden.bs.modal\", function(e) {                                                                   // 646\n      // ensure we don't accidentally intercept hidden events triggered                                          // 647\n      // by children of the current dialog. We shouldn't anymore now BS                                          // 648\n      // namespaces its events; but still worth doing                                                            // 649\n      if (e.target === this) {                                                                                   // 650\n        dialog.remove();                                                                                         // 651\n      }                                                                                                          // 652\n    });                                                                                                          // 653\n                                                                                                                 // 654\n    /*                                                                                                           // 655\n    dialog.on(\"show.bs.modal\", function() {                                                                      // 656\n      // sadly this doesn't work; show is called *just* before                                                   // 657\n      // the backdrop is added so we'd need a setTimeout hack or                                                 // 658\n      // otherwise... leaving in as would be nice                                                                // 659\n      if (options.backdrop) {                                                                                    // 660\n        dialog.next(\".modal-backdrop\").addClass(\"bootbox-backdrop\");                                             // 661\n      }                                                                                                          // 662\n    });                                                                                                          // 663\n    */                                                                                                           // 664\n                                                                                                                 // 665\n    dialog.on(\"shown.bs.modal\", function() {                                                                     // 666\n      dialog.find(\".btn-primary:first\").focus();                                                                 // 667\n    });                                                                                                          // 668\n                                                                                                                 // 669\n    /**                                                                                                          // 670\n     * Bootbox event listeners; experimental and may not last                                                    // 671\n     * just an attempt to decouple some behaviours from their                                                    // 672\n     * respective triggers                                                                                       // 673\n     */                                                                                                          // 674\n                                                                                                                 // 675\n    if (options.backdrop !== \"static\") {                                                                         // 676\n      // A boolean true/false according to the Bootstrap docs                                                    // 677\n      // should show a dialog the user can dismiss by clicking on                                                // 678\n      // the background.                                                                                         // 679\n      // We always only ever pass static/false to the actual                                                     // 680\n      // $.modal function because with `true` we can't trap                                                      // 681\n      // this event (the .modal-backdrop swallows it)                                                            // 682\n      // However, we still want to sort of respect true                                                          // 683\n      // and invoke the escape mechanism instead                                                                 // 684\n      dialog.on(\"click.dismiss.bs.modal\", function(e) {                                                          // 685\n        // @NOTE: the target varies in >= 3.3.x releases since the modal backdrop                                // 686\n        // moved *inside* the outer dialog rather than *alongside* it                                            // 687\n        if (dialog.children(\".modal-backdrop\").length) {                                                         // 688\n          e.currentTarget = dialog.children(\".modal-backdrop\").get(0);                                           // 689\n        }                                                                                                        // 690\n                                                                                                                 // 691\n        if (e.target !== e.currentTarget) {                                                                      // 692\n          return;                                                                                                // 693\n        }                                                                                                        // 694\n                                                                                                                 // 695\n        dialog.trigger(\"escape.close.bb\");                                                                       // 696\n      });                                                                                                        // 697\n    }                                                                                                            // 698\n                                                                                                                 // 699\n    dialog.on(\"escape.close.bb\", function(e) {                                                                   // 700\n      if (callbacks.onEscape) {                                                                                  // 701\n        processCallback(e, dialog, callbacks.onEscape);                                                          // 702\n      }                                                                                                          // 703\n    });                                                                                                          // 704\n                                                                                                                 // 705\n    /**                                                                                                          // 706\n     * Standard jQuery event listeners; used to handle user                                                      // 707\n     * interaction with our dialog                                                                               // 708\n     */                                                                                                          // 709\n                                                                                                                 // 710\n    dialog.on(\"click\", \".modal-footer button\", function(e) {                                                     // 711\n      var callbackKey = $(this).data(\"bb-handler\");                                                              // 712\n                                                                                                                 // 713\n      processCallback(e, dialog, callbacks[callbackKey]);                                                        // 714\n    });                                                                                                          // 715\n                                                                                                                 // 716\n    dialog.on(\"click\", \".bootbox-close-button\", function(e) {                                                    // 717\n      // onEscape might be falsy but that's fine; the fact is                                                    // 718\n      // if the user has managed to click the close button we                                                    // 719\n      // have to close the dialog, callback or not                                                               // 720\n      processCallback(e, dialog, callbacks.onEscape);                                                            // 721\n    });                                                                                                          // 722\n                                                                                                                 // 723\n    dialog.on(\"keyup\", function(e) {                                                                             // 724\n      if (e.which === 27) {                                                                                      // 725\n        dialog.trigger(\"escape.close.bb\");                                                                       // 726\n      }                                                                                                          // 727\n    });                                                                                                          // 728\n                                                                                                                 // 729\n    // the remainder of this method simply deals with adding our                                                 // 730\n    // dialogent to the DOM, augmenting it with Bootstrap's modal                                                // 731\n    // functionality and then giving the resulting object back                                                   // 732\n    // to our caller                                                                                             // 733\n                                                                                                                 // 734\n    $(options.container).append(dialog);                                                                         // 735\n                                                                                                                 // 736\n    dialog.modal({                                                                                               // 737\n      backdrop: options.backdrop ? \"static\": false,                                                              // 738\n      keyboard: false,                                                                                           // 739\n      show: false                                                                                                // 740\n    });                                                                                                          // 741\n                                                                                                                 // 742\n    if (options.show) {                                                                                          // 743\n      dialog.modal(\"show\");                                                                                      // 744\n    }                                                                                                            // 745\n                                                                                                                 // 746\n    // @TODO should we return the raw element here or should                                                     // 747\n    // we wrap it in an object on which we can expose some neater                                                // 748\n    // methods, e.g. var d = bootbox.alert(); d.hide(); instead                                                  // 749\n    // of d.modal(\"hide\");                                                                                       // 750\n                                                                                                                 // 751\n   /*                                                                                                            // 752\n    function BBDialog(elem) {                                                                                    // 753\n      this.elem = elem;                                                                                          // 754\n    }                                                                                                            // 755\n                                                                                                                 // 756\n    BBDialog.prototype = {                                                                                       // 757\n      hide: function() {                                                                                         // 758\n        return this.elem.modal(\"hide\");                                                                          // 759\n      },                                                                                                         // 760\n      show: function() {                                                                                         // 761\n        return this.elem.modal(\"show\");                                                                          // 762\n      }                                                                                                          // 763\n    };                                                                                                           // 764\n    */                                                                                                           // 765\n                                                                                                                 // 766\n    return dialog;                                                                                               // 767\n                                                                                                                 // 768\n  };                                                                                                             // 769\n                                                                                                                 // 770\n  exports.setDefaults = function() {                                                                             // 771\n    var values = {};                                                                                             // 772\n                                                                                                                 // 773\n    if (arguments.length === 2) {                                                                                // 774\n      // allow passing of single key/value...                                                                    // 775\n      values[arguments[0]] = arguments[1];                                                                       // 776\n    } else {                                                                                                     // 777\n      // ... and as an object too                                                                                // 778\n      values = arguments[0];                                                                                     // 779\n    }                                                                                                            // 780\n                                                                                                                 // 781\n    $.extend(defaults, values);                                                                                  // 782\n  };                                                                                                             // 783\n                                                                                                                 // 784\n  exports.hideAll = function() {                                                                                 // 785\n    $(\".bootbox\").modal(\"hide\");                                                                                 // 786\n                                                                                                                 // 787\n    return exports;                                                                                              // 788\n  };                                                                                                             // 789\n                                                                                                                 // 790\n                                                                                                                 // 791\n  /**                                                                                                            // 792\n   * standard locales. Please add more according to ISO 639-1 standard. Multiple language variants are           // 793\n   * unlikely to be required. If this gets too large it can be split out into separate JS files.                 // 794\n   */                                                                                                            // 795\n  var locales = {                                                                                                // 796\n    bg_BG : {                                                                                                    // 797\n      OK      : \"Ок\",                                                                                            // 798\n      CANCEL  : \"Отказ\",                                                                                         // 799\n      CONFIRM : \"Потвърждавам\"                                                                                   // 800\n    },                                                                                                           // 801\n    br : {                                                                                                       // 802\n      OK      : \"OK\",                                                                                            // 803\n      CANCEL  : \"Cancelar\",                                                                                      // 804\n      CONFIRM : \"Sim\"                                                                                            // 805\n    },                                                                                                           // 806\n    cs : {                                                                                                       // 807\n      OK      : \"OK\",                                                                                            // 808\n      CANCEL  : \"Zrušit\",                                                                                        // 809\n      CONFIRM : \"Potvrdit\"                                                                                       // 810\n    },                                                                                                           // 811\n    da : {                                                                                                       // 812\n      OK      : \"OK\",                                                                                            // 813\n      CANCEL  : \"Annuller\",                                                                                      // 814\n      CONFIRM : \"Accepter\"                                                                                       // 815\n    },                                                                                                           // 816\n    de : {                                                                                                       // 817\n      OK      : \"OK\",                                                                                            // 818\n      CANCEL  : \"Abbrechen\",                                                                                     // 819\n      CONFIRM : \"Akzeptieren\"                                                                                    // 820\n    },                                                                                                           // 821\n    el : {                                                                                                       // 822\n      OK      : \"Εντάξει\",                                                                                       // 823\n      CANCEL  : \"Ακύρωση\",                                                                                       // 824\n      CONFIRM : \"Επιβεβαίωση\"                                                                                    // 825\n    },                                                                                                           // 826\n    en : {                                                                                                       // 827\n      OK      : \"OK\",                                                                                            // 828\n      CANCEL  : \"Cancel\",                                                                                        // 829\n      CONFIRM : \"OK\"                                                                                             // 830\n    },                                                                                                           // 831\n    es : {                                                                                                       // 832\n      OK      : \"OK\",                                                                                            // 833\n      CANCEL  : \"Cancelar\",                                                                                      // 834\n      CONFIRM : \"Aceptar\"                                                                                        // 835\n    },                                                                                                           // 836\n    et : {                                                                                                       // 837\n      OK      : \"OK\",                                                                                            // 838\n      CANCEL  : \"Katkesta\",                                                                                      // 839\n      CONFIRM : \"OK\"                                                                                             // 840\n    },                                                                                                           // 841\n    fa : {                                                                                                       // 842\n      OK      : \"قبول\",                                                                                          // 843\n      CANCEL  : \"لغو\",                                                                                           // 844\n      CONFIRM : \"تایید\"                                                                                          // 845\n    },                                                                                                           // 846\n    fi : {                                                                                                       // 847\n      OK      : \"OK\",                                                                                            // 848\n      CANCEL  : \"Peruuta\",                                                                                       // 849\n      CONFIRM : \"OK\"                                                                                             // 850\n    },                                                                                                           // 851\n    fr : {                                                                                                       // 852\n      OK      : \"OK\",                                                                                            // 853\n      CANCEL  : \"Annuler\",                                                                                       // 854\n      CONFIRM : \"D'accord\"                                                                                       // 855\n    },                                                                                                           // 856\n    he : {                                                                                                       // 857\n      OK      : \"אישור\",                                                                                         // 858\n      CANCEL  : \"ביטול\",                                                                                         // 859\n      CONFIRM : \"אישור\"                                                                                          // 860\n    },                                                                                                           // 861\n    hu : {                                                                                                       // 862\n      OK      : \"OK\",                                                                                            // 863\n      CANCEL  : \"Mégsem\",                                                                                        // 864\n      CONFIRM : \"Megerősít\"                                                                                      // 865\n    },                                                                                                           // 866\n    hr : {                                                                                                       // 867\n      OK      : \"OK\",                                                                                            // 868\n      CANCEL  : \"Odustani\",                                                                                      // 869\n      CONFIRM : \"Potvrdi\"                                                                                        // 870\n    },                                                                                                           // 871\n    id : {                                                                                                       // 872\n      OK      : \"OK\",                                                                                            // 873\n      CANCEL  : \"Batal\",                                                                                         // 874\n      CONFIRM : \"OK\"                                                                                             // 875\n    },                                                                                                           // 876\n    it : {                                                                                                       // 877\n      OK      : \"OK\",                                                                                            // 878\n      CANCEL  : \"Annulla\",                                                                                       // 879\n      CONFIRM : \"Conferma\"                                                                                       // 880\n    },                                                                                                           // 881\n    ja : {                                                                                                       // 882\n      OK      : \"OK\",                                                                                            // 883\n      CANCEL  : \"キャンセル\",                                                                                         // 884\n      CONFIRM : \"確認\"                                                                                             // 885\n    },                                                                                                           // 886\n    lt : {                                                                                                       // 887\n      OK      : \"Gerai\",                                                                                         // 888\n      CANCEL  : \"Atšaukti\",                                                                                      // 889\n      CONFIRM : \"Patvirtinti\"                                                                                    // 890\n    },                                                                                                           // 891\n    lv : {                                                                                                       // 892\n      OK      : \"Labi\",                                                                                          // 893\n      CANCEL  : \"Atcelt\",                                                                                        // 894\n      CONFIRM : \"Apstiprināt\"                                                                                    // 895\n    },                                                                                                           // 896\n    nl : {                                                                                                       // 897\n      OK      : \"OK\",                                                                                            // 898\n      CANCEL  : \"Annuleren\",                                                                                     // 899\n      CONFIRM : \"Accepteren\"                                                                                     // 900\n    },                                                                                                           // 901\n    no : {                                                                                                       // 902\n      OK      : \"OK\",                                                                                            // 903\n      CANCEL  : \"Avbryt\",                                                                                        // 904\n      CONFIRM : \"OK\"                                                                                             // 905\n    },                                                                                                           // 906\n    pl : {                                                                                                       // 907\n      OK      : \"OK\",                                                                                            // 908\n      CANCEL  : \"Anuluj\",                                                                                        // 909\n      CONFIRM : \"Potwierdź\"                                                                                      // 910\n    },                                                                                                           // 911\n    pt : {                                                                                                       // 912\n      OK      : \"OK\",                                                                                            // 913\n      CANCEL  : \"Cancelar\",                                                                                      // 914\n      CONFIRM : \"Confirmar\"                                                                                      // 915\n    },                                                                                                           // 916\n    ru : {                                                                                                       // 917\n      OK      : \"OK\",                                                                                            // 918\n      CANCEL  : \"Отмена\",                                                                                        // 919\n      CONFIRM : \"Применить\"                                                                                      // 920\n    },                                                                                                           // 921\n    sq : {                                                                                                       // 922\n      OK : \"OK\",                                                                                                 // 923\n      CANCEL : \"Anulo\",                                                                                          // 924\n      CONFIRM : \"Prano\"                                                                                          // 925\n    },                                                                                                           // 926\n    sv : {                                                                                                       // 927\n      OK      : \"OK\",                                                                                            // 928\n      CANCEL  : \"Avbryt\",                                                                                        // 929\n      CONFIRM : \"OK\"                                                                                             // 930\n    },                                                                                                           // 931\n    th : {                                                                                                       // 932\n      OK      : \"ตกลง\",                                                                                          // 933\n      CANCEL  : \"ยกเลิก\",                                                                                        // 934\n      CONFIRM : \"ยืนยัน\"                                                                                         // 935\n    },                                                                                                           // 936\n    tr : {                                                                                                       // 937\n      OK      : \"Tamam\",                                                                                         // 938\n      CANCEL  : \"İptal\",                                                                                         // 939\n      CONFIRM : \"Onayla\"                                                                                         // 940\n    },                                                                                                           // 941\n    zh_CN : {                                                                                                    // 942\n      OK      : \"OK\",                                                                                            // 943\n      CANCEL  : \"取消\",                                                                                            // 944\n      CONFIRM : \"确认\"                                                                                             // 945\n    },                                                                                                           // 946\n    zh_TW : {                                                                                                    // 947\n      OK      : \"OK\",                                                                                            // 948\n      CANCEL  : \"取消\",                                                                                            // 949\n      CONFIRM : \"確認\"                                                                                             // 950\n    }                                                                                                            // 951\n  };                                                                                                             // 952\n                                                                                                                 // 953\n  exports.addLocale = function(name, values) {                                                                   // 954\n    $.each([\"OK\", \"CANCEL\", \"CONFIRM\"], function(_, v) {                                                         // 955\n      if (!values[v]) {                                                                                          // 956\n        throw new Error(\"Please supply a translation for '\" + v + \"'\");                                          // 957\n      }                                                                                                          // 958\n    });                                                                                                          // 959\n                                                                                                                 // 960\n    locales[name] = {                                                                                            // 961\n      OK: values.OK,                                                                                             // 962\n      CANCEL: values.CANCEL,                                                                                     // 963\n      CONFIRM: values.CONFIRM                                                                                    // 964\n    };                                                                                                           // 965\n                                                                                                                 // 966\n    return exports;                                                                                              // 967\n  };                                                                                                             // 968\n                                                                                                                 // 969\n  exports.removeLocale = function(name) {                                                                        // 970\n    delete locales[name];                                                                                        // 971\n                                                                                                                 // 972\n    return exports;                                                                                              // 973\n  };                                                                                                             // 974\n                                                                                                                 // 975\n  exports.setLocale = function(name) {                                                                           // 976\n    return exports.setDefaults(\"locale\", name);                                                                  // 977\n  };                                                                                                             // 978\n                                                                                                                 // 979\n  exports.init = function(_$) {                                                                                  // 980\n    return init(_$ || $);                                                                                        // 981\n  };                                                                                                             // 982\n                                                                                                                 // 983\n  return exports;                                                                                                // 984\n}));                                                                                                             // 985\n                                                                                                                 // 986\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 995\n                                                                                                                       // 996\n}).call(this);                                                                                                         // 997\n                                                                                                                       // 998\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['mizzao:bootboxjs'] = {};\n\n})();\n","servePath":"/packages/mizzao_bootboxjs.js"}]