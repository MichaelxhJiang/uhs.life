[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/cfs_gridfs/packages/cfs_gridfs.js                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/cfs:gridfs/gridfs.server.js                                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nvar path = Npm.require('path');                                                                            // 1\nvar mongodb = Npm.require('mongodb');                                                                      // 2\nvar ObjectID = Npm.require('mongodb').ObjectID;                                                            // 3\nvar Grid = Npm.require('gridfs-stream');                                                                   // 4\n//var Grid = Npm.require('gridfs-locking-stream');                                                         // 5\n                                                                                                           // 6\nvar chunkSize = 1024*1024*2; // 256k is default GridFS chunk size, but performs terribly for largish files // 7\n                                                                                                           // 8\n/**                                                                                                        // 9\n * @public                                                                                                 // 10\n * @constructor                                                                                            // 11\n * @param {String} name - The store name                                                                   // 12\n * @param {Object} options                                                                                 // 13\n * @param {Function} [options.beforeSave] - Function to run before saving a file from the server. The context of the function will be the `FS.File` instance we're saving. The function may alter its properties.\n * @param {Number} [options.maxTries=5] - Max times to attempt saving a file                               // 15\n * @returns {FS.StorageAdapter} An instance of FS.StorageAdapter.                                          // 16\n *                                                                                                         // 17\n * Creates a GridFS store instance on the server. Inherits from FS.StorageAdapter                          // 18\n * type.                                                                                                   // 19\n */                                                                                                        // 20\n                                                                                                           // 21\nFS.Store.GridFS = function(name, options) {                                                                // 22\n  var self = this;                                                                                         // 23\n  options = options || {};                                                                                 // 24\n                                                                                                           // 25\n  var gridfsName = name;                                                                                   // 26\n  var mongoOptions = options.mongoOptions || {};                                                           // 27\n                                                                                                           // 28\n  if (!(self instanceof FS.Store.GridFS))                                                                  // 29\n    throw new Error('FS.Store.GridFS missing keyword \"new\"');                                              // 30\n                                                                                                           // 31\n  if (!options.mongoUrl) {                                                                                 // 32\n    options.mongoUrl = process.env.MONGO_URL;                                                              // 33\n    // When using a Meteor MongoDB instance, preface name with \"cfs_gridfs.\"                               // 34\n    gridfsName = \"cfs_gridfs.\" + name;                                                                     // 35\n  }                                                                                                        // 36\n                                                                                                           // 37\n  if (!options.mongoOptions) {                                                                             // 38\n    options.mongoOptions = { db: { native_parser: true }, server: { auto_reconnect: true }};               // 39\n  }                                                                                                        // 40\n                                                                                                           // 41\n  if (options.chunkSize) {                                                                                 // 42\n    chunkSize = options.chunkSize;                                                                         // 43\n  }                                                                                                        // 44\n                                                                                                           // 45\n  return new FS.StorageAdapter(name, options, {                                                            // 46\n                                                                                                           // 47\n    typeName: 'storage.gridfs',                                                                            // 48\n    fileKey: function(fileObj) {                                                                           // 49\n      // We should not have to mount the file here - We assume its taken                                   // 50\n      // care of - Otherwise we create new files instead of overwriting                                    // 51\n      var key = {                                                                                          // 52\n        _id: null,                                                                                         // 53\n        filename: null                                                                                     // 54\n      };                                                                                                   // 55\n                                                                                                           // 56\n      // If we're passed a fileObj, we retrieve the _id and filename from it.                              // 57\n      if (fileObj) {                                                                                       // 58\n        var info = fileObj._getInfo(name, {updateFileRecordFirst: false});                                 // 59\n        key._id = info.key || null;                                                                        // 60\n        key.filename = info.name || fileObj.name({updateFileRecordFirst: false}) || (fileObj.collectionName + '-' + fileObj._id);\n      }                                                                                                    // 62\n                                                                                                           // 63\n      // If key._id is null at this point, createWriteStream will let GridFS generate a new ID             // 64\n      return key;                                                                                          // 65\n    },                                                                                                     // 66\n    createReadStream: function(fileKey, options) {                                                         // 67\n      options = options || {};                                                                             // 68\n                                                                                                           // 69\n      // Init GridFS                                                                                       // 70\n      var gfs = new Grid(self.db, mongodb);                                                                // 71\n                                                                                                           // 72\n      // Set the default streamning settings                                                               // 73\n      var settings = {                                                                                     // 74\n        _id: new ObjectID(fileKey._id),                                                                    // 75\n        root: gridfsName                                                                                   // 76\n      };                                                                                                   // 77\n                                                                                                           // 78\n      // Check if this should be a partial read                                                            // 79\n      if (typeof options.start !== 'undefined' && typeof options.end !== 'undefined' ) {                   // 80\n        // Add partial info                                                                                // 81\n        settings.range = {                                                                                 // 82\n          startPos: options.start,                                                                         // 83\n          endPos: options.end                                                                              // 84\n        };                                                                                                 // 85\n      }                                                                                                    // 86\n                                                                                                           // 87\n      FS.debug && console.log('GRIDFS', settings);                                                         // 88\n                                                                                                           // 89\n      return gfs.createReadStream(settings);                                                               // 90\n                                                                                                           // 91\n    },                                                                                                     // 92\n    createWriteStream: function(fileKey, options) {                                                        // 93\n      options = options || {};                                                                             // 94\n                                                                                                           // 95\n      // Init GridFS                                                                                       // 96\n      var gfs = new Grid(self.db, mongodb);                                                                // 97\n                                                                                                           // 98\n      var opts = {                                                                                         // 99\n        filename: fileKey.filename,                                                                        // 100\n        mode: 'w',                                                                                         // 101\n        root: gridfsName,                                                                                  // 102\n        chunk_size: options.chunk_size || chunkSize,                                                       // 103\n        // We allow aliases, metadata and contentType to be passed in via                                  // 104\n        // options                                                                                         // 105\n        aliases: options.aliases || [],                                                                    // 106\n        metadata: options.metadata || null,                                                                // 107\n        content_type: options.contentType || 'application/octet-stream'                                    // 108\n      };                                                                                                   // 109\n                                                                                                           // 110\n      if (fileKey._id) {                                                                                   // 111\n        opts._id = new ObjectID(fileKey._id);                                                              // 112\n      }                                                                                                    // 113\n                                                                                                           // 114\n      var writeStream = gfs.createWriteStream(opts);                                                       // 115\n                                                                                                           // 116\n      writeStream.on('close', function(file) {                                                             // 117\n        if (!file) {                                                                                       // 118\n          // gridfs-stream will emit \"close\" without passing a file                                        // 119\n          // if there is an error. We can simply exit here because                                         // 120\n          // the \"error\" listener will also be called in this case.                                        // 121\n          return;                                                                                          // 122\n        }                                                                                                  // 123\n                                                                                                           // 124\n        if (FS.debug) console.log('SA GridFS - DONE!');                                                    // 125\n                                                                                                           // 126\n        // Emit end and return the fileKey, size, and updated date                                         // 127\n        writeStream.emit('stored', {                                                                       // 128\n          // Set the generated _id so that we know it for future reads and writes.                         // 129\n          // We store the _id as a string and only convert to ObjectID right before                        // 130\n          // reading, writing, or deleting. If we store the ObjectID itself,                               // 131\n          // Meteor (EJSON?) seems to convert it to a LocalCollection.ObjectID,                            // 132\n          // which GFS doesn't understand.                                                                 // 133\n          fileKey: file._id.toString(),                                                                    // 134\n          size: file.length,                                                                               // 135\n          storedAt: file.uploadDate || new Date()                                                          // 136\n        });                                                                                                // 137\n      });                                                                                                  // 138\n                                                                                                           // 139\n      writeStream.on('error', function(error) {                                                            // 140\n        console.log('SA GridFS - ERROR!', error);                                                          // 141\n      });                                                                                                  // 142\n                                                                                                           // 143\n      return writeStream;                                                                                  // 144\n                                                                                                           // 145\n    },                                                                                                     // 146\n    remove: function(fileKey, callback) {                                                                  // 147\n      // Init GridFS                                                                                       // 148\n      var gfs = new Grid(self.db, mongodb);                                                                // 149\n                                                                                                           // 150\n      try {                                                                                                // 151\n        gfs.remove({ _id: new ObjectID(fileKey._id), root: gridfsName }, callback);                        // 152\n      } catch(err) {                                                                                       // 153\n        callback(err);                                                                                     // 154\n      }                                                                                                    // 155\n    },                                                                                                     // 156\n                                                                                                           // 157\n    // Not implemented                                                                                     // 158\n    watch: function() {                                                                                    // 159\n      throw new Error(\"GridFS storage adapter does not support the sync option\");                          // 160\n    },                                                                                                     // 161\n                                                                                                           // 162\n    init: function(callback) {                                                                             // 163\n      mongodb.MongoClient.connect(options.mongoUrl, mongoOptions, function (err, db) {                     // 164\n        if (err) { return callback(err); }                                                                 // 165\n        self.db = db;                                                                                      // 166\n        callback(null);                                                                                    // 167\n      });                                                                                                  // 168\n    }                                                                                                      // 169\n  });                                                                                                      // 170\n};                                                                                                         // 171\n                                                                                                           // 172\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cfs:gridfs'] = {};\n\n})();\n","servePath":"/packages/cfs_gridfs.js"}]