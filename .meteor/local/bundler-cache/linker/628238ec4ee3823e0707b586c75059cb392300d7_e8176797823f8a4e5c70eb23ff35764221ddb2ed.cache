[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/natestrauser_select2/lib/select2/dist/js/select2.js                                                    //\n// This file is in bare mode and is not in its own closure.                                                        //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n/*!                                                                                                                // 1\n * Select2 4.0.3                                                                                                   // 2\n * https://select2.github.io                                                                                       // 3\n *                                                                                                                 // 4\n * Released under the MIT license                                                                                  // 5\n * https://github.com/select2/select2/blob/master/LICENSE.md                                                       // 6\n */                                                                                                                // 7\n(function (factory) {                                                                                              // 8\n  if (typeof define === 'function' && define.amd) {                                                                // 9\n    // AMD. Register as an anonymous module.                                                                       // 10\n    define(['jquery'], factory);                                                                                   // 11\n  } else if (typeof exports === 'object') {                                                                        // 12\n    // Node/CommonJS                                                                                               // 13\n    factory(require('jquery'));                                                                                    // 14\n  } else {                                                                                                         // 15\n    // Browser globals                                                                                             // 16\n    factory(jQuery);                                                                                               // 17\n  }                                                                                                                // 18\n}(function (jQuery) {                                                                                              // 19\n  // This is needed so we can catch the AMD loader configuration and use it                                        // 20\n  // The inner file should be wrapped (by `banner.start.js`) in a function that                                    // 21\n  // returns the AMD loader references.                                                                            // 22\n  var S2 =                                                                                                         // 23\n(function () {                                                                                                     // 24\n  // Restore the Select2 AMD loader so it can be used                                                              // 25\n  // Needed mostly in the language files, where the loader is not inserted                                         // 26\n  if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {                                         // 27\n    var S2 = jQuery.fn.select2.amd;                                                                                // 28\n  }                                                                                                                // 29\nvar S2;(function () { if (!S2 || !S2.requirejs) {                                                                  // 30\nif (!S2) { S2 = {}; } else { require = S2; }                                                                       // 31\n/**                                                                                                                // 32\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.                         // 33\n * Available via the MIT or new BSD license.                                                                       // 34\n * see: http://github.com/jrburke/almond for details                                                               // 35\n */                                                                                                                // 36\n//Going sloppy to avoid 'use strict' string cost, but strict practices should                                      // 37\n//be followed.                                                                                                     // 38\n/*jslint sloppy: true */                                                                                           // 39\n/*global setTimeout: false */                                                                                      // 40\n                                                                                                                   // 41\nvar requirejs, require, define;                                                                                    // 42\n(function (undef) {                                                                                                // 43\n    var main, req, makeMap, handlers,                                                                              // 44\n        defined = {},                                                                                              // 45\n        waiting = {},                                                                                              // 46\n        config = {},                                                                                               // 47\n        defining = {},                                                                                             // 48\n        hasOwn = Object.prototype.hasOwnProperty,                                                                  // 49\n        aps = [].slice,                                                                                            // 50\n        jsSuffixRegExp = /\\.js$/;                                                                                  // 51\n                                                                                                                   // 52\n    function hasProp(obj, prop) {                                                                                  // 53\n        return hasOwn.call(obj, prop);                                                                             // 54\n    }                                                                                                              // 55\n                                                                                                                   // 56\n    /**                                                                                                            // 57\n     * Given a relative module name, like ./something, normalize it to                                             // 58\n     * a real name that can be mapped to a path.                                                                   // 59\n     * @param {String} name the relative name                                                                      // 60\n     * @param {String} baseName a real name that the name arg is relative                                          // 61\n     * to.                                                                                                         // 62\n     * @returns {String} normalized name                                                                           // 63\n     */                                                                                                            // 64\n    function normalize(name, baseName) {                                                                           // 65\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,                                                 // 66\n            foundI, foundStarMap, starI, i, j, part,                                                               // 67\n            baseParts = baseName && baseName.split(\"/\"),                                                           // 68\n            map = config.map,                                                                                      // 69\n            starMap = (map && map['*']) || {};                                                                     // 70\n                                                                                                                   // 71\n        //Adjust any relative paths.                                                                               // 72\n        if (name && name.charAt(0) === \".\") {                                                                      // 73\n            //If have a base name, try to normalize against it,                                                    // 74\n            //otherwise, assume it is a top-level require that will                                                // 75\n            //be relative to baseUrl in the end.                                                                   // 76\n            if (baseName) {                                                                                        // 77\n                name = name.split('/');                                                                            // 78\n                lastIndex = name.length - 1;                                                                       // 79\n                                                                                                                   // 80\n                // Node .js allowance:                                                                             // 81\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {                                 // 82\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');                                 // 83\n                }                                                                                                  // 84\n                                                                                                                   // 85\n                //Lop off the last part of baseParts, so that . matches the                                        // 86\n                //\"directory\" and not name of the baseName's module. For instance,                                 // 87\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we                                  // 88\n                //want the directory, \"one/two\" for this normalization.                                            // 89\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);                                      // 90\n                                                                                                                   // 91\n                //start trimDots                                                                                   // 92\n                for (i = 0; i < name.length; i += 1) {                                                             // 93\n                    part = name[i];                                                                                // 94\n                    if (part === \".\") {                                                                            // 95\n                        name.splice(i, 1);                                                                         // 96\n                        i -= 1;                                                                                    // 97\n                    } else if (part === \"..\") {                                                                    // 98\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {                                   // 99\n                            //End of the line. Keep at least one non-dot                                           // 100\n                            //path segment at the front so it can be mapped                                        // 101\n                            //correctly to disk. Otherwise, there is likely                                        // 102\n                            //no path mapping for a path starting with '..'.                                       // 103\n                            //This can still fail, but catches the most reasonable                                 // 104\n                            //uses of ..                                                                           // 105\n                            break;                                                                                 // 106\n                        } else if (i > 0) {                                                                        // 107\n                            name.splice(i - 1, 2);                                                                 // 108\n                            i -= 2;                                                                                // 109\n                        }                                                                                          // 110\n                    }                                                                                              // 111\n                }                                                                                                  // 112\n                //end trimDots                                                                                     // 113\n                                                                                                                   // 114\n                name = name.join(\"/\");                                                                             // 115\n            } else if (name.indexOf('./') === 0) {                                                                 // 116\n                // No baseName, so this is ID is resolved relative                                                 // 117\n                // to baseUrl, pull off the leading dot.                                                           // 118\n                name = name.substring(2);                                                                          // 119\n            }                                                                                                      // 120\n        }                                                                                                          // 121\n                                                                                                                   // 122\n        //Apply map config if available.                                                                           // 123\n        if ((baseParts || starMap) && map) {                                                                       // 124\n            nameParts = name.split('/');                                                                           // 125\n                                                                                                                   // 126\n            for (i = nameParts.length; i > 0; i -= 1) {                                                            // 127\n                nameSegment = nameParts.slice(0, i).join(\"/\");                                                     // 128\n                                                                                                                   // 129\n                if (baseParts) {                                                                                   // 130\n                    //Find the longest baseName segment match in the config.                                       // 131\n                    //So, do joins on the biggest to smallest lengths of baseParts.                                // 132\n                    for (j = baseParts.length; j > 0; j -= 1) {                                                    // 133\n                        mapValue = map[baseParts.slice(0, j).join('/')];                                           // 134\n                                                                                                                   // 135\n                        //baseName segment has  config, find if it has one for                                     // 136\n                        //this name.                                                                               // 137\n                        if (mapValue) {                                                                            // 138\n                            mapValue = mapValue[nameSegment];                                                      // 139\n                            if (mapValue) {                                                                        // 140\n                                //Match, update name to the new value.                                             // 141\n                                foundMap = mapValue;                                                               // 142\n                                foundI = i;                                                                        // 143\n                                break;                                                                             // 144\n                            }                                                                                      // 145\n                        }                                                                                          // 146\n                    }                                                                                              // 147\n                }                                                                                                  // 148\n                                                                                                                   // 149\n                if (foundMap) {                                                                                    // 150\n                    break;                                                                                         // 151\n                }                                                                                                  // 152\n                                                                                                                   // 153\n                //Check for a star map match, but just hold on to it,                                              // 154\n                //if there is a shorter segment match later in a matching                                          // 155\n                //config, then favor over this star map.                                                           // 156\n                if (!foundStarMap && starMap && starMap[nameSegment]) {                                            // 157\n                    foundStarMap = starMap[nameSegment];                                                           // 158\n                    starI = i;                                                                                     // 159\n                }                                                                                                  // 160\n            }                                                                                                      // 161\n                                                                                                                   // 162\n            if (!foundMap && foundStarMap) {                                                                       // 163\n                foundMap = foundStarMap;                                                                           // 164\n                foundI = starI;                                                                                    // 165\n            }                                                                                                      // 166\n                                                                                                                   // 167\n            if (foundMap) {                                                                                        // 168\n                nameParts.splice(0, foundI, foundMap);                                                             // 169\n                name = nameParts.join('/');                                                                        // 170\n            }                                                                                                      // 171\n        }                                                                                                          // 172\n                                                                                                                   // 173\n        return name;                                                                                               // 174\n    }                                                                                                              // 175\n                                                                                                                   // 176\n    function makeRequire(relName, forceSync) {                                                                     // 177\n        return function () {                                                                                       // 178\n            //A version of a require function that passes a moduleName                                             // 179\n            //value for items that may need to                                                                     // 180\n            //look up paths relative to the moduleName                                                             // 181\n            var args = aps.call(arguments, 0);                                                                     // 182\n                                                                                                                   // 183\n            //If first arg is not require('string'), and there is only                                             // 184\n            //one arg, it is the array form without a callback. Insert                                             // 185\n            //a null so that the following concat is correct.                                                      // 186\n            if (typeof args[0] !== 'string' && args.length === 1) {                                                // 187\n                args.push(null);                                                                                   // 188\n            }                                                                                                      // 189\n            return req.apply(undef, args.concat([relName, forceSync]));                                            // 190\n        };                                                                                                         // 191\n    }                                                                                                              // 192\n                                                                                                                   // 193\n    function makeNormalize(relName) {                                                                              // 194\n        return function (name) {                                                                                   // 195\n            return normalize(name, relName);                                                                       // 196\n        };                                                                                                         // 197\n    }                                                                                                              // 198\n                                                                                                                   // 199\n    function makeLoad(depName) {                                                                                   // 200\n        return function (value) {                                                                                  // 201\n            defined[depName] = value;                                                                              // 202\n        };                                                                                                         // 203\n    }                                                                                                              // 204\n                                                                                                                   // 205\n    function callDep(name) {                                                                                       // 206\n        if (hasProp(waiting, name)) {                                                                              // 207\n            var args = waiting[name];                                                                              // 208\n            delete waiting[name];                                                                                  // 209\n            defining[name] = true;                                                                                 // 210\n            main.apply(undef, args);                                                                               // 211\n        }                                                                                                          // 212\n                                                                                                                   // 213\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {                                                 // 214\n            throw new Error('No ' + name);                                                                         // 215\n        }                                                                                                          // 216\n        return defined[name];                                                                                      // 217\n    }                                                                                                              // 218\n                                                                                                                   // 219\n    //Turns a plugin!resource to [plugin, resource]                                                                // 220\n    //with the plugin being undefined if the name                                                                  // 221\n    //did not have a plugin prefix.                                                                                // 222\n    function splitPrefix(name) {                                                                                   // 223\n        var prefix,                                                                                                // 224\n            index = name ? name.indexOf('!') : -1;                                                                 // 225\n        if (index > -1) {                                                                                          // 226\n            prefix = name.substring(0, index);                                                                     // 227\n            name = name.substring(index + 1, name.length);                                                         // 228\n        }                                                                                                          // 229\n        return [prefix, name];                                                                                     // 230\n    }                                                                                                              // 231\n                                                                                                                   // 232\n    /**                                                                                                            // 233\n     * Makes a name map, normalizing the name, and using a plugin                                                  // 234\n     * for normalization if necessary. Grabs a ref to plugin                                                       // 235\n     * too, as an optimization.                                                                                    // 236\n     */                                                                                                            // 237\n    makeMap = function (name, relName) {                                                                           // 238\n        var plugin,                                                                                                // 239\n            parts = splitPrefix(name),                                                                             // 240\n            prefix = parts[0];                                                                                     // 241\n                                                                                                                   // 242\n        name = parts[1];                                                                                           // 243\n                                                                                                                   // 244\n        if (prefix) {                                                                                              // 245\n            prefix = normalize(prefix, relName);                                                                   // 246\n            plugin = callDep(prefix);                                                                              // 247\n        }                                                                                                          // 248\n                                                                                                                   // 249\n        //Normalize according                                                                                      // 250\n        if (prefix) {                                                                                              // 251\n            if (plugin && plugin.normalize) {                                                                      // 252\n                name = plugin.normalize(name, makeNormalize(relName));                                             // 253\n            } else {                                                                                               // 254\n                name = normalize(name, relName);                                                                   // 255\n            }                                                                                                      // 256\n        } else {                                                                                                   // 257\n            name = normalize(name, relName);                                                                       // 258\n            parts = splitPrefix(name);                                                                             // 259\n            prefix = parts[0];                                                                                     // 260\n            name = parts[1];                                                                                       // 261\n            if (prefix) {                                                                                          // 262\n                plugin = callDep(prefix);                                                                          // 263\n            }                                                                                                      // 264\n        }                                                                                                          // 265\n                                                                                                                   // 266\n        //Using ridiculous property names for space reasons                                                        // 267\n        return {                                                                                                   // 268\n            f: prefix ? prefix + '!' + name : name, //fullName                                                     // 269\n            n: name,                                                                                               // 270\n            pr: prefix,                                                                                            // 271\n            p: plugin                                                                                              // 272\n        };                                                                                                         // 273\n    };                                                                                                             // 274\n                                                                                                                   // 275\n    function makeConfig(name) {                                                                                    // 276\n        return function () {                                                                                       // 277\n            return (config && config.config && config.config[name]) || {};                                         // 278\n        };                                                                                                         // 279\n    }                                                                                                              // 280\n                                                                                                                   // 281\n    handlers = {                                                                                                   // 282\n        require: function (name) {                                                                                 // 283\n            return makeRequire(name);                                                                              // 284\n        },                                                                                                         // 285\n        exports: function (name) {                                                                                 // 286\n            var e = defined[name];                                                                                 // 287\n            if (typeof e !== 'undefined') {                                                                        // 288\n                return e;                                                                                          // 289\n            } else {                                                                                               // 290\n                return (defined[name] = {});                                                                       // 291\n            }                                                                                                      // 292\n        },                                                                                                         // 293\n        module: function (name) {                                                                                  // 294\n            return {                                                                                               // 295\n                id: name,                                                                                          // 296\n                uri: '',                                                                                           // 297\n                exports: defined[name],                                                                            // 298\n                config: makeConfig(name)                                                                           // 299\n            };                                                                                                     // 300\n        }                                                                                                          // 301\n    };                                                                                                             // 302\n                                                                                                                   // 303\n    main = function (name, deps, callback, relName) {                                                              // 304\n        var cjsModule, depName, ret, map, i,                                                                       // 305\n            args = [],                                                                                             // 306\n            callbackType = typeof callback,                                                                        // 307\n            usingExports;                                                                                          // 308\n                                                                                                                   // 309\n        //Use name if no relName                                                                                   // 310\n        relName = relName || name;                                                                                 // 311\n                                                                                                                   // 312\n        //Call the callback to define the module, if necessary.                                                    // 313\n        if (callbackType === 'undefined' || callbackType === 'function') {                                         // 314\n            //Pull out the defined dependencies and pass the ordered                                               // 315\n            //values to the callback.                                                                              // 316\n            //Default to [require, exports, module] if no deps                                                     // 317\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;                      // 318\n            for (i = 0; i < deps.length; i += 1) {                                                                 // 319\n                map = makeMap(deps[i], relName);                                                                   // 320\n                depName = map.f;                                                                                   // 321\n                                                                                                                   // 322\n                //Fast path CommonJS standard dependencies.                                                        // 323\n                if (depName === \"require\") {                                                                       // 324\n                    args[i] = handlers.require(name);                                                              // 325\n                } else if (depName === \"exports\") {                                                                // 326\n                    //CommonJS module spec 1.1                                                                     // 327\n                    args[i] = handlers.exports(name);                                                              // 328\n                    usingExports = true;                                                                           // 329\n                } else if (depName === \"module\") {                                                                 // 330\n                    //CommonJS module spec 1.1                                                                     // 331\n                    cjsModule = args[i] = handlers.module(name);                                                   // 332\n                } else if (hasProp(defined, depName) ||                                                            // 333\n                           hasProp(waiting, depName) ||                                                            // 334\n                           hasProp(defining, depName)) {                                                           // 335\n                    args[i] = callDep(depName);                                                                    // 336\n                } else if (map.p) {                                                                                // 337\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});                          // 338\n                    args[i] = defined[depName];                                                                    // 339\n                } else {                                                                                           // 340\n                    throw new Error(name + ' missing ' + depName);                                                 // 341\n                }                                                                                                  // 342\n            }                                                                                                      // 343\n                                                                                                                   // 344\n            ret = callback ? callback.apply(defined[name], args) : undefined;                                      // 345\n                                                                                                                   // 346\n            if (name) {                                                                                            // 347\n                //If setting exports via \"module\" is in play,                                                      // 348\n                //favor that over return value and exports. After that,                                            // 349\n                //favor a non-undefined return value over exports use.                                             // 350\n                if (cjsModule && cjsModule.exports !== undef &&                                                    // 351\n                        cjsModule.exports !== defined[name]) {                                                     // 352\n                    defined[name] = cjsModule.exports;                                                             // 353\n                } else if (ret !== undef || !usingExports) {                                                       // 354\n                    //Use the return value from the function.                                                      // 355\n                    defined[name] = ret;                                                                           // 356\n                }                                                                                                  // 357\n            }                                                                                                      // 358\n        } else if (name) {                                                                                         // 359\n            //May just be an object definition for the module. Only                                                // 360\n            //worry about defining if have a module name.                                                          // 361\n            defined[name] = callback;                                                                              // 362\n        }                                                                                                          // 363\n    };                                                                                                             // 364\n                                                                                                                   // 365\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {                               // 366\n        if (typeof deps === \"string\") {                                                                            // 367\n            if (handlers[deps]) {                                                                                  // 368\n                //callback in this case is really relName                                                          // 369\n                return handlers[deps](callback);                                                                   // 370\n            }                                                                                                      // 371\n            //Just return the module wanted. In this scenario, the                                                 // 372\n            //deps arg is the module name, and second arg (if passed)                                              // 373\n            //is just the relName.                                                                                 // 374\n            //Normalize module name, if it contains . or ..                                                        // 375\n            return callDep(makeMap(deps, callback).f);                                                             // 376\n        } else if (!deps.splice) {                                                                                 // 377\n            //deps is a config object, not an array.                                                               // 378\n            config = deps;                                                                                         // 379\n            if (config.deps) {                                                                                     // 380\n                req(config.deps, config.callback);                                                                 // 381\n            }                                                                                                      // 382\n            if (!callback) {                                                                                       // 383\n                return;                                                                                            // 384\n            }                                                                                                      // 385\n                                                                                                                   // 386\n            if (callback.splice) {                                                                                 // 387\n                //callback is an array, which means it is a dependency list.                                       // 388\n                //Adjust args if there are dependencies                                                            // 389\n                deps = callback;                                                                                   // 390\n                callback = relName;                                                                                // 391\n                relName = null;                                                                                    // 392\n            } else {                                                                                               // 393\n                deps = undef;                                                                                      // 394\n            }                                                                                                      // 395\n        }                                                                                                          // 396\n                                                                                                                   // 397\n        //Support require(['a'])                                                                                   // 398\n        callback = callback || function () {};                                                                     // 399\n                                                                                                                   // 400\n        //If relName is a function, it is an errback handler,                                                      // 401\n        //so remove it.                                                                                            // 402\n        if (typeof relName === 'function') {                                                                       // 403\n            relName = forceSync;                                                                                   // 404\n            forceSync = alt;                                                                                       // 405\n        }                                                                                                          // 406\n                                                                                                                   // 407\n        //Simulate async callback;                                                                                 // 408\n        if (forceSync) {                                                                                           // 409\n            main(undef, deps, callback, relName);                                                                  // 410\n        } else {                                                                                                   // 411\n            //Using a non-zero value because of concern for what old browsers                                      // 412\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:                                       // 413\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something                                  // 415\n            //that works in almond on the global level, but not guaranteed and                                     // 416\n            //unlikely to work in other AMD implementations.                                                       // 417\n            setTimeout(function () {                                                                               // 418\n                main(undef, deps, callback, relName);                                                              // 419\n            }, 4);                                                                                                 // 420\n        }                                                                                                          // 421\n                                                                                                                   // 422\n        return req;                                                                                                // 423\n    };                                                                                                             // 424\n                                                                                                                   // 425\n    /**                                                                                                            // 426\n     * Just drops the config on the floor, but returns req in case                                                 // 427\n     * the config return value is used.                                                                            // 428\n     */                                                                                                            // 429\n    req.config = function (cfg) {                                                                                  // 430\n        return req(cfg);                                                                                           // 431\n    };                                                                                                             // 432\n                                                                                                                   // 433\n    /**                                                                                                            // 434\n     * Expose module registry for debugging and tooling                                                            // 435\n     */                                                                                                            // 436\n    requirejs._defined = defined;                                                                                  // 437\n                                                                                                                   // 438\n    define = function (name, deps, callback) {                                                                     // 439\n        if (typeof name !== 'string') {                                                                            // 440\n            throw new Error('See almond README: incorrect module build, no module name');                          // 441\n        }                                                                                                          // 442\n                                                                                                                   // 443\n        //This module may not have dependencies                                                                    // 444\n        if (!deps.splice) {                                                                                        // 445\n            //deps is not an array, so probably means                                                              // 446\n            //an object literal or factory function for                                                            // 447\n            //the value. Adjust args.                                                                              // 448\n            callback = deps;                                                                                       // 449\n            deps = [];                                                                                             // 450\n        }                                                                                                          // 451\n                                                                                                                   // 452\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {                                                  // 453\n            waiting[name] = [name, deps, callback];                                                                // 454\n        }                                                                                                          // 455\n    };                                                                                                             // 456\n                                                                                                                   // 457\n    define.amd = {                                                                                                 // 458\n        jQuery: true                                                                                               // 459\n    };                                                                                                             // 460\n}());                                                                                                              // 461\n                                                                                                                   // 462\nS2.requirejs = requirejs;S2.require = require;S2.define = define;                                                  // 463\n}                                                                                                                  // 464\n}());                                                                                                              // 465\nS2.define(\"almond\", function(){});                                                                                 // 466\n                                                                                                                   // 467\n/* global jQuery:false, $:false */                                                                                 // 468\nS2.define('jquery',[],function () {                                                                                // 469\n  var _$ = jQuery || $;                                                                                            // 470\n                                                                                                                   // 471\n  if (_$ == null && console && console.error) {                                                                    // 472\n    console.error(                                                                                                 // 473\n      'Select2: An instance of jQuery or a jQuery-compatible library was not ' +                                   // 474\n      'found. Make sure that you are including jQuery before Select2 on your ' +                                   // 475\n      'web page.'                                                                                                  // 476\n    );                                                                                                             // 477\n  }                                                                                                                // 478\n                                                                                                                   // 479\n  return _$;                                                                                                       // 480\n});                                                                                                                // 481\n                                                                                                                   // 482\nS2.define('select2/utils',[                                                                                        // 483\n  'jquery'                                                                                                         // 484\n], function ($) {                                                                                                  // 485\n  var Utils = {};                                                                                                  // 486\n                                                                                                                   // 487\n  Utils.Extend = function (ChildClass, SuperClass) {                                                               // 488\n    var __hasProp = {}.hasOwnProperty;                                                                             // 489\n                                                                                                                   // 490\n    function BaseConstructor () {                                                                                  // 491\n      this.constructor = ChildClass;                                                                               // 492\n    }                                                                                                              // 493\n                                                                                                                   // 494\n    for (var key in SuperClass) {                                                                                  // 495\n      if (__hasProp.call(SuperClass, key)) {                                                                       // 496\n        ChildClass[key] = SuperClass[key];                                                                         // 497\n      }                                                                                                            // 498\n    }                                                                                                              // 499\n                                                                                                                   // 500\n    BaseConstructor.prototype = SuperClass.prototype;                                                              // 501\n    ChildClass.prototype = new BaseConstructor();                                                                  // 502\n    ChildClass.__super__ = SuperClass.prototype;                                                                   // 503\n                                                                                                                   // 504\n    return ChildClass;                                                                                             // 505\n  };                                                                                                               // 506\n                                                                                                                   // 507\n  function getMethods (theClass) {                                                                                 // 508\n    var proto = theClass.prototype;                                                                                // 509\n                                                                                                                   // 510\n    var methods = [];                                                                                              // 511\n                                                                                                                   // 512\n    for (var methodName in proto) {                                                                                // 513\n      var m = proto[methodName];                                                                                   // 514\n                                                                                                                   // 515\n      if (typeof m !== 'function') {                                                                               // 516\n        continue;                                                                                                  // 517\n      }                                                                                                            // 518\n                                                                                                                   // 519\n      if (methodName === 'constructor') {                                                                          // 520\n        continue;                                                                                                  // 521\n      }                                                                                                            // 522\n                                                                                                                   // 523\n      methods.push(methodName);                                                                                    // 524\n    }                                                                                                              // 525\n                                                                                                                   // 526\n    return methods;                                                                                                // 527\n  }                                                                                                                // 528\n                                                                                                                   // 529\n  Utils.Decorate = function (SuperClass, DecoratorClass) {                                                         // 530\n    var decoratedMethods = getMethods(DecoratorClass);                                                             // 531\n    var superMethods = getMethods(SuperClass);                                                                     // 532\n                                                                                                                   // 533\n    function DecoratedClass () {                                                                                   // 534\n      var unshift = Array.prototype.unshift;                                                                       // 535\n                                                                                                                   // 536\n      var argCount = DecoratorClass.prototype.constructor.length;                                                  // 537\n                                                                                                                   // 538\n      var calledConstructor = SuperClass.prototype.constructor;                                                    // 539\n                                                                                                                   // 540\n      if (argCount > 0) {                                                                                          // 541\n        unshift.call(arguments, SuperClass.prototype.constructor);                                                 // 542\n                                                                                                                   // 543\n        calledConstructor = DecoratorClass.prototype.constructor;                                                  // 544\n      }                                                                                                            // 545\n                                                                                                                   // 546\n      calledConstructor.apply(this, arguments);                                                                    // 547\n    }                                                                                                              // 548\n                                                                                                                   // 549\n    DecoratorClass.displayName = SuperClass.displayName;                                                           // 550\n                                                                                                                   // 551\n    function ctr () {                                                                                              // 552\n      this.constructor = DecoratedClass;                                                                           // 553\n    }                                                                                                              // 554\n                                                                                                                   // 555\n    DecoratedClass.prototype = new ctr();                                                                          // 556\n                                                                                                                   // 557\n    for (var m = 0; m < superMethods.length; m++) {                                                                // 558\n        var superMethod = superMethods[m];                                                                         // 559\n                                                                                                                   // 560\n        DecoratedClass.prototype[superMethod] =                                                                    // 561\n          SuperClass.prototype[superMethod];                                                                       // 562\n    }                                                                                                              // 563\n                                                                                                                   // 564\n    var calledMethod = function (methodName) {                                                                     // 565\n      // Stub out the original method if it's not decorating an actual method                                      // 566\n      var originalMethod = function () {};                                                                         // 567\n                                                                                                                   // 568\n      if (methodName in DecoratedClass.prototype) {                                                                // 569\n        originalMethod = DecoratedClass.prototype[methodName];                                                     // 570\n      }                                                                                                            // 571\n                                                                                                                   // 572\n      var decoratedMethod = DecoratorClass.prototype[methodName];                                                  // 573\n                                                                                                                   // 574\n      return function () {                                                                                         // 575\n        var unshift = Array.prototype.unshift;                                                                     // 576\n                                                                                                                   // 577\n        unshift.call(arguments, originalMethod);                                                                   // 578\n                                                                                                                   // 579\n        return decoratedMethod.apply(this, arguments);                                                             // 580\n      };                                                                                                           // 581\n    };                                                                                                             // 582\n                                                                                                                   // 583\n    for (var d = 0; d < decoratedMethods.length; d++) {                                                            // 584\n      var decoratedMethod = decoratedMethods[d];                                                                   // 585\n                                                                                                                   // 586\n      DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);                                   // 587\n    }                                                                                                              // 588\n                                                                                                                   // 589\n    return DecoratedClass;                                                                                         // 590\n  };                                                                                                               // 591\n                                                                                                                   // 592\n  var Observable = function () {                                                                                   // 593\n    this.listeners = {};                                                                                           // 594\n  };                                                                                                               // 595\n                                                                                                                   // 596\n  Observable.prototype.on = function (event, callback) {                                                           // 597\n    this.listeners = this.listeners || {};                                                                         // 598\n                                                                                                                   // 599\n    if (event in this.listeners) {                                                                                 // 600\n      this.listeners[event].push(callback);                                                                        // 601\n    } else {                                                                                                       // 602\n      this.listeners[event] = [callback];                                                                          // 603\n    }                                                                                                              // 604\n  };                                                                                                               // 605\n                                                                                                                   // 606\n  Observable.prototype.trigger = function (event) {                                                                // 607\n    var slice = Array.prototype.slice;                                                                             // 608\n    var params = slice.call(arguments, 1);                                                                         // 609\n                                                                                                                   // 610\n    this.listeners = this.listeners || {};                                                                         // 611\n                                                                                                                   // 612\n    // Params should always come in as an array                                                                    // 613\n    if (params == null) {                                                                                          // 614\n      params = [];                                                                                                 // 615\n    }                                                                                                              // 616\n                                                                                                                   // 617\n    // If there are no arguments to the event, use a temporary object                                              // 618\n    if (params.length === 0) {                                                                                     // 619\n      params.push({});                                                                                             // 620\n    }                                                                                                              // 621\n                                                                                                                   // 622\n    // Set the `_type` of the first object to the event                                                            // 623\n    params[0]._type = event;                                                                                       // 624\n                                                                                                                   // 625\n    if (event in this.listeners) {                                                                                 // 626\n      this.invoke(this.listeners[event], slice.call(arguments, 1));                                                // 627\n    }                                                                                                              // 628\n                                                                                                                   // 629\n    if ('*' in this.listeners) {                                                                                   // 630\n      this.invoke(this.listeners['*'], arguments);                                                                 // 631\n    }                                                                                                              // 632\n  };                                                                                                               // 633\n                                                                                                                   // 634\n  Observable.prototype.invoke = function (listeners, params) {                                                     // 635\n    for (var i = 0, len = listeners.length; i < len; i++) {                                                        // 636\n      listeners[i].apply(this, params);                                                                            // 637\n    }                                                                                                              // 638\n  };                                                                                                               // 639\n                                                                                                                   // 640\n  Utils.Observable = Observable;                                                                                   // 641\n                                                                                                                   // 642\n  Utils.generateChars = function (length) {                                                                        // 643\n    var chars = '';                                                                                                // 644\n                                                                                                                   // 645\n    for (var i = 0; i < length; i++) {                                                                             // 646\n      var randomChar = Math.floor(Math.random() * 36);                                                             // 647\n      chars += randomChar.toString(36);                                                                            // 648\n    }                                                                                                              // 649\n                                                                                                                   // 650\n    return chars;                                                                                                  // 651\n  };                                                                                                               // 652\n                                                                                                                   // 653\n  Utils.bind = function (func, context) {                                                                          // 654\n    return function () {                                                                                           // 655\n      func.apply(context, arguments);                                                                              // 656\n    };                                                                                                             // 657\n  };                                                                                                               // 658\n                                                                                                                   // 659\n  Utils._convertData = function (data) {                                                                           // 660\n    for (var originalKey in data) {                                                                                // 661\n      var keys = originalKey.split('-');                                                                           // 662\n                                                                                                                   // 663\n      var dataLevel = data;                                                                                        // 664\n                                                                                                                   // 665\n      if (keys.length === 1) {                                                                                     // 666\n        continue;                                                                                                  // 667\n      }                                                                                                            // 668\n                                                                                                                   // 669\n      for (var k = 0; k < keys.length; k++) {                                                                      // 670\n        var key = keys[k];                                                                                         // 671\n                                                                                                                   // 672\n        // Lowercase the first letter                                                                              // 673\n        // By default, dash-separated becomes camelCase                                                            // 674\n        key = key.substring(0, 1).toLowerCase() + key.substring(1);                                                // 675\n                                                                                                                   // 676\n        if (!(key in dataLevel)) {                                                                                 // 677\n          dataLevel[key] = {};                                                                                     // 678\n        }                                                                                                          // 679\n                                                                                                                   // 680\n        if (k == keys.length - 1) {                                                                                // 681\n          dataLevel[key] = data[originalKey];                                                                      // 682\n        }                                                                                                          // 683\n                                                                                                                   // 684\n        dataLevel = dataLevel[key];                                                                                // 685\n      }                                                                                                            // 686\n                                                                                                                   // 687\n      delete data[originalKey];                                                                                    // 688\n    }                                                                                                              // 689\n                                                                                                                   // 690\n    return data;                                                                                                   // 691\n  };                                                                                                               // 692\n                                                                                                                   // 693\n  Utils.hasScroll = function (index, el) {                                                                         // 694\n    // Adapted from the function created by @ShadowScripter                                                        // 695\n    // and adapted by @BillBarry on the Stack Exchange Code Review website.                                        // 696\n    // The original code can be found at                                                                           // 697\n    // http://codereview.stackexchange.com/q/13338                                                                 // 698\n    // and was designed to be used with the Sizzle selector engine.                                                // 699\n                                                                                                                   // 700\n    var $el = $(el);                                                                                               // 701\n    var overflowX = el.style.overflowX;                                                                            // 702\n    var overflowY = el.style.overflowY;                                                                            // 703\n                                                                                                                   // 704\n    //Check both x and y declarations                                                                              // 705\n    if (overflowX === overflowY &&                                                                                 // 706\n        (overflowY === 'hidden' || overflowY === 'visible')) {                                                     // 707\n      return false;                                                                                                // 708\n    }                                                                                                              // 709\n                                                                                                                   // 710\n    if (overflowX === 'scroll' || overflowY === 'scroll') {                                                        // 711\n      return true;                                                                                                 // 712\n    }                                                                                                              // 713\n                                                                                                                   // 714\n    return ($el.innerHeight() < el.scrollHeight ||                                                                 // 715\n      $el.innerWidth() < el.scrollWidth);                                                                          // 716\n  };                                                                                                               // 717\n                                                                                                                   // 718\n  Utils.escapeMarkup = function (markup) {                                                                         // 719\n    var replaceMap = {                                                                                             // 720\n      '\\\\': '&#92;',                                                                                               // 721\n      '&': '&amp;',                                                                                                // 722\n      '<': '&lt;',                                                                                                 // 723\n      '>': '&gt;',                                                                                                 // 724\n      '\"': '&quot;',                                                                                               // 725\n      '\\'': '&#39;',                                                                                               // 726\n      '/': '&#47;'                                                                                                 // 727\n    };                                                                                                             // 728\n                                                                                                                   // 729\n    // Do not try to escape the markup if it's not a string                                                        // 730\n    if (typeof markup !== 'string') {                                                                              // 731\n      return markup;                                                                                               // 732\n    }                                                                                                              // 733\n                                                                                                                   // 734\n    return String(markup).replace(/[&<>\"'\\/\\\\]/g, function (match) {                                               // 735\n      return replaceMap[match];                                                                                    // 736\n    });                                                                                                            // 737\n  };                                                                                                               // 738\n                                                                                                                   // 739\n  // Append an array of jQuery nodes to a given element.                                                           // 740\n  Utils.appendMany = function ($element, $nodes) {                                                                 // 741\n    // jQuery 1.7.x does not support $.fn.append() with an array                                                   // 742\n    // Fall back to a jQuery object collection using $.fn.add()                                                    // 743\n    if ($.fn.jquery.substr(0, 3) === '1.7') {                                                                      // 744\n      var $jqNodes = $();                                                                                          // 745\n                                                                                                                   // 746\n      $.map($nodes, function (node) {                                                                              // 747\n        $jqNodes = $jqNodes.add(node);                                                                             // 748\n      });                                                                                                          // 749\n                                                                                                                   // 750\n      $nodes = $jqNodes;                                                                                           // 751\n    }                                                                                                              // 752\n                                                                                                                   // 753\n    $element.append($nodes);                                                                                       // 754\n  };                                                                                                               // 755\n                                                                                                                   // 756\n  return Utils;                                                                                                    // 757\n});                                                                                                                // 758\n                                                                                                                   // 759\nS2.define('select2/results',[                                                                                      // 760\n  'jquery',                                                                                                        // 761\n  './utils'                                                                                                        // 762\n], function ($, Utils) {                                                                                           // 763\n  function Results ($element, options, dataAdapter) {                                                              // 764\n    this.$element = $element;                                                                                      // 765\n    this.data = dataAdapter;                                                                                       // 766\n    this.options = options;                                                                                        // 767\n                                                                                                                   // 768\n    Results.__super__.constructor.call(this);                                                                      // 769\n  }                                                                                                                // 770\n                                                                                                                   // 771\n  Utils.Extend(Results, Utils.Observable);                                                                         // 772\n                                                                                                                   // 773\n  Results.prototype.render = function () {                                                                         // 774\n    var $results = $(                                                                                              // 775\n      '<ul class=\"select2-results__options\" role=\"tree\"></ul>'                                                     // 776\n    );                                                                                                             // 777\n                                                                                                                   // 778\n    if (this.options.get('multiple')) {                                                                            // 779\n      $results.attr('aria-multiselectable', 'true');                                                               // 780\n    }                                                                                                              // 781\n                                                                                                                   // 782\n    this.$results = $results;                                                                                      // 783\n                                                                                                                   // 784\n    return $results;                                                                                               // 785\n  };                                                                                                               // 786\n                                                                                                                   // 787\n  Results.prototype.clear = function () {                                                                          // 788\n    this.$results.empty();                                                                                         // 789\n  };                                                                                                               // 790\n                                                                                                                   // 791\n  Results.prototype.displayMessage = function (params) {                                                           // 792\n    var escapeMarkup = this.options.get('escapeMarkup');                                                           // 793\n                                                                                                                   // 794\n    this.clear();                                                                                                  // 795\n    this.hideLoading();                                                                                            // 796\n                                                                                                                   // 797\n    var $message = $(                                                                                              // 798\n      '<li role=\"treeitem\" aria-live=\"assertive\"' +                                                                // 799\n      ' class=\"select2-results__option\"></li>'                                                                     // 800\n    );                                                                                                             // 801\n                                                                                                                   // 802\n    var message = this.options.get('translations').get(params.message);                                            // 803\n                                                                                                                   // 804\n    $message.append(                                                                                               // 805\n      escapeMarkup(                                                                                                // 806\n        message(params.args)                                                                                       // 807\n      )                                                                                                            // 808\n    );                                                                                                             // 809\n                                                                                                                   // 810\n    $message[0].className += ' select2-results__message';                                                          // 811\n                                                                                                                   // 812\n    this.$results.append($message);                                                                                // 813\n  };                                                                                                               // 814\n                                                                                                                   // 815\n  Results.prototype.hideMessages = function () {                                                                   // 816\n    this.$results.find('.select2-results__message').remove();                                                      // 817\n  };                                                                                                               // 818\n                                                                                                                   // 819\n  Results.prototype.append = function (data) {                                                                     // 820\n    this.hideLoading();                                                                                            // 821\n                                                                                                                   // 822\n    var $options = [];                                                                                             // 823\n                                                                                                                   // 824\n    if (data.results == null || data.results.length === 0) {                                                       // 825\n      if (this.$results.children().length === 0) {                                                                 // 826\n        this.trigger('results:message', {                                                                          // 827\n          message: 'noResults'                                                                                     // 828\n        });                                                                                                        // 829\n      }                                                                                                            // 830\n                                                                                                                   // 831\n      return;                                                                                                      // 832\n    }                                                                                                              // 833\n                                                                                                                   // 834\n    data.results = this.sort(data.results);                                                                        // 835\n                                                                                                                   // 836\n    for (var d = 0; d < data.results.length; d++) {                                                                // 837\n      var item = data.results[d];                                                                                  // 838\n                                                                                                                   // 839\n      var $option = this.option(item);                                                                             // 840\n                                                                                                                   // 841\n      $options.push($option);                                                                                      // 842\n    }                                                                                                              // 843\n                                                                                                                   // 844\n    this.$results.append($options);                                                                                // 845\n  };                                                                                                               // 846\n                                                                                                                   // 847\n  Results.prototype.position = function ($results, $dropdown) {                                                    // 848\n    var $resultsContainer = $dropdown.find('.select2-results');                                                    // 849\n    $resultsContainer.append($results);                                                                            // 850\n  };                                                                                                               // 851\n                                                                                                                   // 852\n  Results.prototype.sort = function (data) {                                                                       // 853\n    var sorter = this.options.get('sorter');                                                                       // 854\n                                                                                                                   // 855\n    return sorter(data);                                                                                           // 856\n  };                                                                                                               // 857\n                                                                                                                   // 858\n  Results.prototype.highlightFirstItem = function () {                                                             // 859\n    var $options = this.$results                                                                                   // 860\n      .find('.select2-results__option[aria-selected]');                                                            // 861\n                                                                                                                   // 862\n    var $selected = $options.filter('[aria-selected=true]');                                                       // 863\n                                                                                                                   // 864\n    // Check if there are any selected options                                                                     // 865\n    if ($selected.length > 0) {                                                                                    // 866\n      // If there are selected options, highlight the first                                                        // 867\n      $selected.first().trigger('mouseenter');                                                                     // 868\n    } else {                                                                                                       // 869\n      // If there are no selected options, highlight the first option                                              // 870\n      // in the dropdown                                                                                           // 871\n      $options.first().trigger('mouseenter');                                                                      // 872\n    }                                                                                                              // 873\n                                                                                                                   // 874\n    this.ensureHighlightVisible();                                                                                 // 875\n  };                                                                                                               // 876\n                                                                                                                   // 877\n  Results.prototype.setClasses = function () {                                                                     // 878\n    var self = this;                                                                                               // 879\n                                                                                                                   // 880\n    this.data.current(function (selected) {                                                                        // 881\n      var selectedIds = $.map(selected, function (s) {                                                             // 882\n        return s.id.toString();                                                                                    // 883\n      });                                                                                                          // 884\n                                                                                                                   // 885\n      var $options = self.$results                                                                                 // 886\n        .find('.select2-results__option[aria-selected]');                                                          // 887\n                                                                                                                   // 888\n      $options.each(function () {                                                                                  // 889\n        var $option = $(this);                                                                                     // 890\n                                                                                                                   // 891\n        var item = $.data(this, 'data');                                                                           // 892\n                                                                                                                   // 893\n        // id needs to be converted to a string when comparing                                                     // 894\n        var id = '' + item.id;                                                                                     // 895\n                                                                                                                   // 896\n        if ((item.element != null && item.element.selected) ||                                                     // 897\n            (item.element == null && $.inArray(id, selectedIds) > -1)) {                                           // 898\n          $option.attr('aria-selected', 'true');                                                                   // 899\n        } else {                                                                                                   // 900\n          $option.attr('aria-selected', 'false');                                                                  // 901\n        }                                                                                                          // 902\n      });                                                                                                          // 903\n                                                                                                                   // 904\n    });                                                                                                            // 905\n  };                                                                                                               // 906\n                                                                                                                   // 907\n  Results.prototype.showLoading = function (params) {                                                              // 908\n    this.hideLoading();                                                                                            // 909\n                                                                                                                   // 910\n    var loadingMore = this.options.get('translations').get('searching');                                           // 911\n                                                                                                                   // 912\n    var loading = {                                                                                                // 913\n      disabled: true,                                                                                              // 914\n      loading: true,                                                                                               // 915\n      text: loadingMore(params)                                                                                    // 916\n    };                                                                                                             // 917\n    var $loading = this.option(loading);                                                                           // 918\n    $loading.className += ' loading-results';                                                                      // 919\n                                                                                                                   // 920\n    this.$results.prepend($loading);                                                                               // 921\n  };                                                                                                               // 922\n                                                                                                                   // 923\n  Results.prototype.hideLoading = function () {                                                                    // 924\n    this.$results.find('.loading-results').remove();                                                               // 925\n  };                                                                                                               // 926\n                                                                                                                   // 927\n  Results.prototype.option = function (data) {                                                                     // 928\n    var option = document.createElement('li');                                                                     // 929\n    option.className = 'select2-results__option';                                                                  // 930\n                                                                                                                   // 931\n    var attrs = {                                                                                                  // 932\n      'role': 'treeitem',                                                                                          // 933\n      'aria-selected': 'false'                                                                                     // 934\n    };                                                                                                             // 935\n                                                                                                                   // 936\n    if (data.disabled) {                                                                                           // 937\n      delete attrs['aria-selected'];                                                                               // 938\n      attrs['aria-disabled'] = 'true';                                                                             // 939\n    }                                                                                                              // 940\n                                                                                                                   // 941\n    if (data.id == null) {                                                                                         // 942\n      delete attrs['aria-selected'];                                                                               // 943\n    }                                                                                                              // 944\n                                                                                                                   // 945\n    if (data._resultId != null) {                                                                                  // 946\n      option.id = data._resultId;                                                                                  // 947\n    }                                                                                                              // 948\n                                                                                                                   // 949\n    if (data.title) {                                                                                              // 950\n      option.title = data.title;                                                                                   // 951\n    }                                                                                                              // 952\n                                                                                                                   // 953\n    if (data.children) {                                                                                           // 954\n      attrs.role = 'group';                                                                                        // 955\n      attrs['aria-label'] = data.text;                                                                             // 956\n      delete attrs['aria-selected'];                                                                               // 957\n    }                                                                                                              // 958\n                                                                                                                   // 959\n    for (var attr in attrs) {                                                                                      // 960\n      var val = attrs[attr];                                                                                       // 961\n                                                                                                                   // 962\n      option.setAttribute(attr, val);                                                                              // 963\n    }                                                                                                              // 964\n                                                                                                                   // 965\n    if (data.children) {                                                                                           // 966\n      var $option = $(option);                                                                                     // 967\n                                                                                                                   // 968\n      var label = document.createElement('strong');                                                                // 969\n      label.className = 'select2-results__group';                                                                  // 970\n                                                                                                                   // 971\n      var $label = $(label);                                                                                       // 972\n      this.template(data, label);                                                                                  // 973\n                                                                                                                   // 974\n      var $children = [];                                                                                          // 975\n                                                                                                                   // 976\n      for (var c = 0; c < data.children.length; c++) {                                                             // 977\n        var child = data.children[c];                                                                              // 978\n                                                                                                                   // 979\n        var $child = this.option(child);                                                                           // 980\n                                                                                                                   // 981\n        $children.push($child);                                                                                    // 982\n      }                                                                                                            // 983\n                                                                                                                   // 984\n      var $childrenContainer = $('<ul></ul>', {                                                                    // 985\n        'class': 'select2-results__options select2-results__options--nested'                                       // 986\n      });                                                                                                          // 987\n                                                                                                                   // 988\n      $childrenContainer.append($children);                                                                        // 989\n                                                                                                                   // 990\n      $option.append(label);                                                                                       // 991\n      $option.append($childrenContainer);                                                                          // 992\n    } else {                                                                                                       // 993\n      this.template(data, option);                                                                                 // 994\n    }                                                                                                              // 995\n                                                                                                                   // 996\n    $.data(option, 'data', data);                                                                                  // 997\n                                                                                                                   // 998\n    return option;                                                                                                 // 999\n  };                                                                                                               // 1000\n                                                                                                                   // 1001\n  Results.prototype.bind = function (container, $container) {                                                      // 1002\n    var self = this;                                                                                               // 1003\n                                                                                                                   // 1004\n    var id = container.id + '-results';                                                                            // 1005\n                                                                                                                   // 1006\n    this.$results.attr('id', id);                                                                                  // 1007\n                                                                                                                   // 1008\n    container.on('results:all', function (params) {                                                                // 1009\n      self.clear();                                                                                                // 1010\n      self.append(params.data);                                                                                    // 1011\n                                                                                                                   // 1012\n      if (container.isOpen()) {                                                                                    // 1013\n        self.setClasses();                                                                                         // 1014\n        self.highlightFirstItem();                                                                                 // 1015\n      }                                                                                                            // 1016\n    });                                                                                                            // 1017\n                                                                                                                   // 1018\n    container.on('results:append', function (params) {                                                             // 1019\n      self.append(params.data);                                                                                    // 1020\n                                                                                                                   // 1021\n      if (container.isOpen()) {                                                                                    // 1022\n        self.setClasses();                                                                                         // 1023\n      }                                                                                                            // 1024\n    });                                                                                                            // 1025\n                                                                                                                   // 1026\n    container.on('query', function (params) {                                                                      // 1027\n      self.hideMessages();                                                                                         // 1028\n      self.showLoading(params);                                                                                    // 1029\n    });                                                                                                            // 1030\n                                                                                                                   // 1031\n    container.on('select', function () {                                                                           // 1032\n      if (!container.isOpen()) {                                                                                   // 1033\n        return;                                                                                                    // 1034\n      }                                                                                                            // 1035\n                                                                                                                   // 1036\n      self.setClasses();                                                                                           // 1037\n      self.highlightFirstItem();                                                                                   // 1038\n    });                                                                                                            // 1039\n                                                                                                                   // 1040\n    container.on('unselect', function () {                                                                         // 1041\n      if (!container.isOpen()) {                                                                                   // 1042\n        return;                                                                                                    // 1043\n      }                                                                                                            // 1044\n                                                                                                                   // 1045\n      self.setClasses();                                                                                           // 1046\n      self.highlightFirstItem();                                                                                   // 1047\n    });                                                                                                            // 1048\n                                                                                                                   // 1049\n    container.on('open', function () {                                                                             // 1050\n      // When the dropdown is open, aria-expended=\"true\"                                                           // 1051\n      self.$results.attr('aria-expanded', 'true');                                                                 // 1052\n      self.$results.attr('aria-hidden', 'false');                                                                  // 1053\n                                                                                                                   // 1054\n      self.setClasses();                                                                                           // 1055\n      self.ensureHighlightVisible();                                                                               // 1056\n    });                                                                                                            // 1057\n                                                                                                                   // 1058\n    container.on('close', function () {                                                                            // 1059\n      // When the dropdown is closed, aria-expended=\"false\"                                                        // 1060\n      self.$results.attr('aria-expanded', 'false');                                                                // 1061\n      self.$results.attr('aria-hidden', 'true');                                                                   // 1062\n      self.$results.removeAttr('aria-activedescendant');                                                           // 1063\n    });                                                                                                            // 1064\n                                                                                                                   // 1065\n    container.on('results:toggle', function () {                                                                   // 1066\n      var $highlighted = self.getHighlightedResults();                                                             // 1067\n                                                                                                                   // 1068\n      if ($highlighted.length === 0) {                                                                             // 1069\n        return;                                                                                                    // 1070\n      }                                                                                                            // 1071\n                                                                                                                   // 1072\n      $highlighted.trigger('mouseup');                                                                             // 1073\n    });                                                                                                            // 1074\n                                                                                                                   // 1075\n    container.on('results:select', function () {                                                                   // 1076\n      var $highlighted = self.getHighlightedResults();                                                             // 1077\n                                                                                                                   // 1078\n      if ($highlighted.length === 0) {                                                                             // 1079\n        return;                                                                                                    // 1080\n      }                                                                                                            // 1081\n                                                                                                                   // 1082\n      var data = $highlighted.data('data');                                                                        // 1083\n                                                                                                                   // 1084\n      if ($highlighted.attr('aria-selected') == 'true') {                                                          // 1085\n        self.trigger('close', {});                                                                                 // 1086\n      } else {                                                                                                     // 1087\n        self.trigger('select', {                                                                                   // 1088\n          data: data                                                                                               // 1089\n        });                                                                                                        // 1090\n      }                                                                                                            // 1091\n    });                                                                                                            // 1092\n                                                                                                                   // 1093\n    container.on('results:previous', function () {                                                                 // 1094\n      var $highlighted = self.getHighlightedResults();                                                             // 1095\n                                                                                                                   // 1096\n      var $options = self.$results.find('[aria-selected]');                                                        // 1097\n                                                                                                                   // 1098\n      var currentIndex = $options.index($highlighted);                                                             // 1099\n                                                                                                                   // 1100\n      // If we are already at te top, don't move further                                                           // 1101\n      if (currentIndex === 0) {                                                                                    // 1102\n        return;                                                                                                    // 1103\n      }                                                                                                            // 1104\n                                                                                                                   // 1105\n      var nextIndex = currentIndex - 1;                                                                            // 1106\n                                                                                                                   // 1107\n      // If none are highlighted, highlight the first                                                              // 1108\n      if ($highlighted.length === 0) {                                                                             // 1109\n        nextIndex = 0;                                                                                             // 1110\n      }                                                                                                            // 1111\n                                                                                                                   // 1112\n      var $next = $options.eq(nextIndex);                                                                          // 1113\n                                                                                                                   // 1114\n      $next.trigger('mouseenter');                                                                                 // 1115\n                                                                                                                   // 1116\n      var currentOffset = self.$results.offset().top;                                                              // 1117\n      var nextTop = $next.offset().top;                                                                            // 1118\n      var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);                                      // 1119\n                                                                                                                   // 1120\n      if (nextIndex === 0) {                                                                                       // 1121\n        self.$results.scrollTop(0);                                                                                // 1122\n      } else if (nextTop - currentOffset < 0) {                                                                    // 1123\n        self.$results.scrollTop(nextOffset);                                                                       // 1124\n      }                                                                                                            // 1125\n    });                                                                                                            // 1126\n                                                                                                                   // 1127\n    container.on('results:next', function () {                                                                     // 1128\n      var $highlighted = self.getHighlightedResults();                                                             // 1129\n                                                                                                                   // 1130\n      var $options = self.$results.find('[aria-selected]');                                                        // 1131\n                                                                                                                   // 1132\n      var currentIndex = $options.index($highlighted);                                                             // 1133\n                                                                                                                   // 1134\n      var nextIndex = currentIndex + 1;                                                                            // 1135\n                                                                                                                   // 1136\n      // If we are at the last option, stay there                                                                  // 1137\n      if (nextIndex >= $options.length) {                                                                          // 1138\n        return;                                                                                                    // 1139\n      }                                                                                                            // 1140\n                                                                                                                   // 1141\n      var $next = $options.eq(nextIndex);                                                                          // 1142\n                                                                                                                   // 1143\n      $next.trigger('mouseenter');                                                                                 // 1144\n                                                                                                                   // 1145\n      var currentOffset = self.$results.offset().top +                                                             // 1146\n        self.$results.outerHeight(false);                                                                          // 1147\n      var nextBottom = $next.offset().top + $next.outerHeight(false);                                              // 1148\n      var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;                                     // 1149\n                                                                                                                   // 1150\n      if (nextIndex === 0) {                                                                                       // 1151\n        self.$results.scrollTop(0);                                                                                // 1152\n      } else if (nextBottom > currentOffset) {                                                                     // 1153\n        self.$results.scrollTop(nextOffset);                                                                       // 1154\n      }                                                                                                            // 1155\n    });                                                                                                            // 1156\n                                                                                                                   // 1157\n    container.on('results:focus', function (params) {                                                              // 1158\n      params.element.addClass('select2-results__option--highlighted');                                             // 1159\n    });                                                                                                            // 1160\n                                                                                                                   // 1161\n    container.on('results:message', function (params) {                                                            // 1162\n      self.displayMessage(params);                                                                                 // 1163\n    });                                                                                                            // 1164\n                                                                                                                   // 1165\n    if ($.fn.mousewheel) {                                                                                         // 1166\n      this.$results.on('mousewheel', function (e) {                                                                // 1167\n        var top = self.$results.scrollTop();                                                                       // 1168\n                                                                                                                   // 1169\n        var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;                                           // 1170\n                                                                                                                   // 1171\n        var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;                                                         // 1172\n        var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();                                         // 1173\n                                                                                                                   // 1174\n        if (isAtTop) {                                                                                             // 1175\n          self.$results.scrollTop(0);                                                                              // 1176\n                                                                                                                   // 1177\n          e.preventDefault();                                                                                      // 1178\n          e.stopPropagation();                                                                                     // 1179\n        } else if (isAtBottom) {                                                                                   // 1180\n          self.$results.scrollTop(                                                                                 // 1181\n            self.$results.get(0).scrollHeight - self.$results.height()                                             // 1182\n          );                                                                                                       // 1183\n                                                                                                                   // 1184\n          e.preventDefault();                                                                                      // 1185\n          e.stopPropagation();                                                                                     // 1186\n        }                                                                                                          // 1187\n      });                                                                                                          // 1188\n    }                                                                                                              // 1189\n                                                                                                                   // 1190\n    this.$results.on('mouseup', '.select2-results__option[aria-selected]',                                         // 1191\n      function (evt) {                                                                                             // 1192\n      var $this = $(this);                                                                                         // 1193\n                                                                                                                   // 1194\n      var data = $this.data('data');                                                                               // 1195\n                                                                                                                   // 1196\n      if ($this.attr('aria-selected') === 'true') {                                                                // 1197\n        if (self.options.get('multiple')) {                                                                        // 1198\n          self.trigger('unselect', {                                                                               // 1199\n            originalEvent: evt,                                                                                    // 1200\n            data: data                                                                                             // 1201\n          });                                                                                                      // 1202\n        } else {                                                                                                   // 1203\n          self.trigger('close', {});                                                                               // 1204\n        }                                                                                                          // 1205\n                                                                                                                   // 1206\n        return;                                                                                                    // 1207\n      }                                                                                                            // 1208\n                                                                                                                   // 1209\n      self.trigger('select', {                                                                                     // 1210\n        originalEvent: evt,                                                                                        // 1211\n        data: data                                                                                                 // 1212\n      });                                                                                                          // 1213\n    });                                                                                                            // 1214\n                                                                                                                   // 1215\n    this.$results.on('mouseenter', '.select2-results__option[aria-selected]',                                      // 1216\n      function (evt) {                                                                                             // 1217\n      var data = $(this).data('data');                                                                             // 1218\n                                                                                                                   // 1219\n      self.getHighlightedResults()                                                                                 // 1220\n          .removeClass('select2-results__option--highlighted');                                                    // 1221\n                                                                                                                   // 1222\n      self.trigger('results:focus', {                                                                              // 1223\n        data: data,                                                                                                // 1224\n        element: $(this)                                                                                           // 1225\n      });                                                                                                          // 1226\n    });                                                                                                            // 1227\n  };                                                                                                               // 1228\n                                                                                                                   // 1229\n  Results.prototype.getHighlightedResults = function () {                                                          // 1230\n    var $highlighted = this.$results                                                                               // 1231\n    .find('.select2-results__option--highlighted');                                                                // 1232\n                                                                                                                   // 1233\n    return $highlighted;                                                                                           // 1234\n  };                                                                                                               // 1235\n                                                                                                                   // 1236\n  Results.prototype.destroy = function () {                                                                        // 1237\n    this.$results.remove();                                                                                        // 1238\n  };                                                                                                               // 1239\n                                                                                                                   // 1240\n  Results.prototype.ensureHighlightVisible = function () {                                                         // 1241\n    var $highlighted = this.getHighlightedResults();                                                               // 1242\n                                                                                                                   // 1243\n    if ($highlighted.length === 0) {                                                                               // 1244\n      return;                                                                                                      // 1245\n    }                                                                                                              // 1246\n                                                                                                                   // 1247\n    var $options = this.$results.find('[aria-selected]');                                                          // 1248\n                                                                                                                   // 1249\n    var currentIndex = $options.index($highlighted);                                                               // 1250\n                                                                                                                   // 1251\n    var currentOffset = this.$results.offset().top;                                                                // 1252\n    var nextTop = $highlighted.offset().top;                                                                       // 1253\n    var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);                                        // 1254\n                                                                                                                   // 1255\n    var offsetDelta = nextTop - currentOffset;                                                                     // 1256\n    nextOffset -= $highlighted.outerHeight(false) * 2;                                                             // 1257\n                                                                                                                   // 1258\n    if (currentIndex <= 2) {                                                                                       // 1259\n      this.$results.scrollTop(0);                                                                                  // 1260\n    } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {                                     // 1261\n      this.$results.scrollTop(nextOffset);                                                                         // 1262\n    }                                                                                                              // 1263\n  };                                                                                                               // 1264\n                                                                                                                   // 1265\n  Results.prototype.template = function (result, container) {                                                      // 1266\n    var template = this.options.get('templateResult');                                                             // 1267\n    var escapeMarkup = this.options.get('escapeMarkup');                                                           // 1268\n                                                                                                                   // 1269\n    var content = template(result, container);                                                                     // 1270\n                                                                                                                   // 1271\n    if (content == null) {                                                                                         // 1272\n      container.style.display = 'none';                                                                            // 1273\n    } else if (typeof content === 'string') {                                                                      // 1274\n      container.innerHTML = escapeMarkup(content);                                                                 // 1275\n    } else {                                                                                                       // 1276\n      $(container).append(content);                                                                                // 1277\n    }                                                                                                              // 1278\n  };                                                                                                               // 1279\n                                                                                                                   // 1280\n  return Results;                                                                                                  // 1281\n});                                                                                                                // 1282\n                                                                                                                   // 1283\nS2.define('select2/keys',[                                                                                         // 1284\n                                                                                                                   // 1285\n], function () {                                                                                                   // 1286\n  var KEYS = {                                                                                                     // 1287\n    BACKSPACE: 8,                                                                                                  // 1288\n    TAB: 9,                                                                                                        // 1289\n    ENTER: 13,                                                                                                     // 1290\n    SHIFT: 16,                                                                                                     // 1291\n    CTRL: 17,                                                                                                      // 1292\n    ALT: 18,                                                                                                       // 1293\n    ESC: 27,                                                                                                       // 1294\n    SPACE: 32,                                                                                                     // 1295\n    PAGE_UP: 33,                                                                                                   // 1296\n    PAGE_DOWN: 34,                                                                                                 // 1297\n    END: 35,                                                                                                       // 1298\n    HOME: 36,                                                                                                      // 1299\n    LEFT: 37,                                                                                                      // 1300\n    UP: 38,                                                                                                        // 1301\n    RIGHT: 39,                                                                                                     // 1302\n    DOWN: 40,                                                                                                      // 1303\n    DELETE: 46                                                                                                     // 1304\n  };                                                                                                               // 1305\n                                                                                                                   // 1306\n  return KEYS;                                                                                                     // 1307\n});                                                                                                                // 1308\n                                                                                                                   // 1309\nS2.define('select2/selection/base',[                                                                               // 1310\n  'jquery',                                                                                                        // 1311\n  '../utils',                                                                                                      // 1312\n  '../keys'                                                                                                        // 1313\n], function ($, Utils, KEYS) {                                                                                     // 1314\n  function BaseSelection ($element, options) {                                                                     // 1315\n    this.$element = $element;                                                                                      // 1316\n    this.options = options;                                                                                        // 1317\n                                                                                                                   // 1318\n    BaseSelection.__super__.constructor.call(this);                                                                // 1319\n  }                                                                                                                // 1320\n                                                                                                                   // 1321\n  Utils.Extend(BaseSelection, Utils.Observable);                                                                   // 1322\n                                                                                                                   // 1323\n  BaseSelection.prototype.render = function () {                                                                   // 1324\n    var $selection = $(                                                                                            // 1325\n      '<span class=\"select2-selection\" role=\"combobox\" ' +                                                         // 1326\n      ' aria-haspopup=\"true\" aria-expanded=\"false\">' +                                                             // 1327\n      '</span>'                                                                                                    // 1328\n    );                                                                                                             // 1329\n                                                                                                                   // 1330\n    this._tabindex = 0;                                                                                            // 1331\n                                                                                                                   // 1332\n    if (this.$element.data('old-tabindex') != null) {                                                              // 1333\n      this._tabindex = this.$element.data('old-tabindex');                                                         // 1334\n    } else if (this.$element.attr('tabindex') != null) {                                                           // 1335\n      this._tabindex = this.$element.attr('tabindex');                                                             // 1336\n    }                                                                                                              // 1337\n                                                                                                                   // 1338\n    $selection.attr('title', this.$element.attr('title'));                                                         // 1339\n    $selection.attr('tabindex', this._tabindex);                                                                   // 1340\n                                                                                                                   // 1341\n    this.$selection = $selection;                                                                                  // 1342\n                                                                                                                   // 1343\n    return $selection;                                                                                             // 1344\n  };                                                                                                               // 1345\n                                                                                                                   // 1346\n  BaseSelection.prototype.bind = function (container, $container) {                                                // 1347\n    var self = this;                                                                                               // 1348\n                                                                                                                   // 1349\n    var id = container.id + '-container';                                                                          // 1350\n    var resultsId = container.id + '-results';                                                                     // 1351\n                                                                                                                   // 1352\n    this.container = container;                                                                                    // 1353\n                                                                                                                   // 1354\n    this.$selection.on('focus', function (evt) {                                                                   // 1355\n      self.trigger('focus', evt);                                                                                  // 1356\n    });                                                                                                            // 1357\n                                                                                                                   // 1358\n    this.$selection.on('blur', function (evt) {                                                                    // 1359\n      self._handleBlur(evt);                                                                                       // 1360\n    });                                                                                                            // 1361\n                                                                                                                   // 1362\n    this.$selection.on('keydown', function (evt) {                                                                 // 1363\n      self.trigger('keypress', evt);                                                                               // 1364\n                                                                                                                   // 1365\n      if (evt.which === KEYS.SPACE) {                                                                              // 1366\n        evt.preventDefault();                                                                                      // 1367\n      }                                                                                                            // 1368\n    });                                                                                                            // 1369\n                                                                                                                   // 1370\n    container.on('results:focus', function (params) {                                                              // 1371\n      self.$selection.attr('aria-activedescendant', params.data._resultId);                                        // 1372\n    });                                                                                                            // 1373\n                                                                                                                   // 1374\n    container.on('selection:update', function (params) {                                                           // 1375\n      self.update(params.data);                                                                                    // 1376\n    });                                                                                                            // 1377\n                                                                                                                   // 1378\n    container.on('open', function () {                                                                             // 1379\n      // When the dropdown is open, aria-expanded=\"true\"                                                           // 1380\n      self.$selection.attr('aria-expanded', 'true');                                                               // 1381\n      self.$selection.attr('aria-owns', resultsId);                                                                // 1382\n                                                                                                                   // 1383\n      self._attachCloseHandler(container);                                                                         // 1384\n    });                                                                                                            // 1385\n                                                                                                                   // 1386\n    container.on('close', function () {                                                                            // 1387\n      // When the dropdown is closed, aria-expanded=\"false\"                                                        // 1388\n      self.$selection.attr('aria-expanded', 'false');                                                              // 1389\n      self.$selection.removeAttr('aria-activedescendant');                                                         // 1390\n      self.$selection.removeAttr('aria-owns');                                                                     // 1391\n                                                                                                                   // 1392\n      self.$selection.focus();                                                                                     // 1393\n                                                                                                                   // 1394\n      self._detachCloseHandler(container);                                                                         // 1395\n    });                                                                                                            // 1396\n                                                                                                                   // 1397\n    container.on('enable', function () {                                                                           // 1398\n      self.$selection.attr('tabindex', self._tabindex);                                                            // 1399\n    });                                                                                                            // 1400\n                                                                                                                   // 1401\n    container.on('disable', function () {                                                                          // 1402\n      self.$selection.attr('tabindex', '-1');                                                                      // 1403\n    });                                                                                                            // 1404\n  };                                                                                                               // 1405\n                                                                                                                   // 1406\n  BaseSelection.prototype._handleBlur = function (evt) {                                                           // 1407\n    var self = this;                                                                                               // 1408\n                                                                                                                   // 1409\n    // This needs to be delayed as the active element is the body when the tab                                     // 1410\n    // key is pressed, possibly along with others.                                                                 // 1411\n    window.setTimeout(function () {                                                                                // 1412\n      // Don't trigger `blur` if the focus is still in the selection                                               // 1413\n      if (                                                                                                         // 1414\n        (document.activeElement == self.$selection[0]) ||                                                          // 1415\n        ($.contains(self.$selection[0], document.activeElement))                                                   // 1416\n      ) {                                                                                                          // 1417\n        return;                                                                                                    // 1418\n      }                                                                                                            // 1419\n                                                                                                                   // 1420\n      self.trigger('blur', evt);                                                                                   // 1421\n    }, 1);                                                                                                         // 1422\n  };                                                                                                               // 1423\n                                                                                                                   // 1424\n  BaseSelection.prototype._attachCloseHandler = function (container) {                                             // 1425\n    var self = this;                                                                                               // 1426\n                                                                                                                   // 1427\n    $(document.body).on('mousedown.select2.' + container.id, function (e) {                                        // 1428\n      var $target = $(e.target);                                                                                   // 1429\n                                                                                                                   // 1430\n      var $select = $target.closest('.select2');                                                                   // 1431\n                                                                                                                   // 1432\n      var $all = $('.select2.select2-container--open');                                                            // 1433\n                                                                                                                   // 1434\n      $all.each(function () {                                                                                      // 1435\n        var $this = $(this);                                                                                       // 1436\n                                                                                                                   // 1437\n        if (this == $select[0]) {                                                                                  // 1438\n          return;                                                                                                  // 1439\n        }                                                                                                          // 1440\n                                                                                                                   // 1441\n        var $element = $this.data('element');                                                                      // 1442\n                                                                                                                   // 1443\n        $element.select2('close');                                                                                 // 1444\n      });                                                                                                          // 1445\n    });                                                                                                            // 1446\n  };                                                                                                               // 1447\n                                                                                                                   // 1448\n  BaseSelection.prototype._detachCloseHandler = function (container) {                                             // 1449\n    $(document.body).off('mousedown.select2.' + container.id);                                                     // 1450\n  };                                                                                                               // 1451\n                                                                                                                   // 1452\n  BaseSelection.prototype.position = function ($selection, $container) {                                           // 1453\n    var $selectionContainer = $container.find('.selection');                                                       // 1454\n    $selectionContainer.append($selection);                                                                        // 1455\n  };                                                                                                               // 1456\n                                                                                                                   // 1457\n  BaseSelection.prototype.destroy = function () {                                                                  // 1458\n    this._detachCloseHandler(this.container);                                                                      // 1459\n  };                                                                                                               // 1460\n                                                                                                                   // 1461\n  BaseSelection.prototype.update = function (data) {                                                               // 1462\n    throw new Error('The `update` method must be defined in child classes.');                                      // 1463\n  };                                                                                                               // 1464\n                                                                                                                   // 1465\n  return BaseSelection;                                                                                            // 1466\n});                                                                                                                // 1467\n                                                                                                                   // 1468\nS2.define('select2/selection/single',[                                                                             // 1469\n  'jquery',                                                                                                        // 1470\n  './base',                                                                                                        // 1471\n  '../utils',                                                                                                      // 1472\n  '../keys'                                                                                                        // 1473\n], function ($, BaseSelection, Utils, KEYS) {                                                                      // 1474\n  function SingleSelection () {                                                                                    // 1475\n    SingleSelection.__super__.constructor.apply(this, arguments);                                                  // 1476\n  }                                                                                                                // 1477\n                                                                                                                   // 1478\n  Utils.Extend(SingleSelection, BaseSelection);                                                                    // 1479\n                                                                                                                   // 1480\n  SingleSelection.prototype.render = function () {                                                                 // 1481\n    var $selection = SingleSelection.__super__.render.call(this);                                                  // 1482\n                                                                                                                   // 1483\n    $selection.addClass('select2-selection--single');                                                              // 1484\n                                                                                                                   // 1485\n    $selection.html(                                                                                               // 1486\n      '<span class=\"select2-selection__rendered\"></span>' +                                                        // 1487\n      '<span class=\"select2-selection__arrow\" role=\"presentation\">' +                                              // 1488\n        '<b role=\"presentation\"></b>' +                                                                            // 1489\n      '</span>'                                                                                                    // 1490\n    );                                                                                                             // 1491\n                                                                                                                   // 1492\n    return $selection;                                                                                             // 1493\n  };                                                                                                               // 1494\n                                                                                                                   // 1495\n  SingleSelection.prototype.bind = function (container, $container) {                                              // 1496\n    var self = this;                                                                                               // 1497\n                                                                                                                   // 1498\n    SingleSelection.__super__.bind.apply(this, arguments);                                                         // 1499\n                                                                                                                   // 1500\n    var id = container.id + '-container';                                                                          // 1501\n                                                                                                                   // 1502\n    this.$selection.find('.select2-selection__rendered').attr('id', id);                                           // 1503\n    this.$selection.attr('aria-labelledby', id);                                                                   // 1504\n                                                                                                                   // 1505\n    this.$selection.on('mousedown', function (evt) {                                                               // 1506\n      // Only respond to left clicks                                                                               // 1507\n      if (evt.which !== 1) {                                                                                       // 1508\n        return;                                                                                                    // 1509\n      }                                                                                                            // 1510\n                                                                                                                   // 1511\n      self.trigger('toggle', {                                                                                     // 1512\n        originalEvent: evt                                                                                         // 1513\n      });                                                                                                          // 1514\n    });                                                                                                            // 1515\n                                                                                                                   // 1516\n    this.$selection.on('focus', function (evt) {                                                                   // 1517\n      // User focuses on the container                                                                             // 1518\n    });                                                                                                            // 1519\n                                                                                                                   // 1520\n    this.$selection.on('blur', function (evt) {                                                                    // 1521\n      // User exits the container                                                                                  // 1522\n    });                                                                                                            // 1523\n                                                                                                                   // 1524\n    container.on('focus', function (evt) {                                                                         // 1525\n      if (!container.isOpen()) {                                                                                   // 1526\n        self.$selection.focus();                                                                                   // 1527\n      }                                                                                                            // 1528\n    });                                                                                                            // 1529\n                                                                                                                   // 1530\n    container.on('selection:update', function (params) {                                                           // 1531\n      self.update(params.data);                                                                                    // 1532\n    });                                                                                                            // 1533\n  };                                                                                                               // 1534\n                                                                                                                   // 1535\n  SingleSelection.prototype.clear = function () {                                                                  // 1536\n    this.$selection.find('.select2-selection__rendered').empty();                                                  // 1537\n  };                                                                                                               // 1538\n                                                                                                                   // 1539\n  SingleSelection.prototype.display = function (data, container) {                                                 // 1540\n    var template = this.options.get('templateSelection');                                                          // 1541\n    var escapeMarkup = this.options.get('escapeMarkup');                                                           // 1542\n                                                                                                                   // 1543\n    return escapeMarkup(template(data, container));                                                                // 1544\n  };                                                                                                               // 1545\n                                                                                                                   // 1546\n  SingleSelection.prototype.selectionContainer = function () {                                                     // 1547\n    return $('<span></span>');                                                                                     // 1548\n  };                                                                                                               // 1549\n                                                                                                                   // 1550\n  SingleSelection.prototype.update = function (data) {                                                             // 1551\n    if (data.length === 0) {                                                                                       // 1552\n      this.clear();                                                                                                // 1553\n      return;                                                                                                      // 1554\n    }                                                                                                              // 1555\n                                                                                                                   // 1556\n    var selection = data[0];                                                                                       // 1557\n                                                                                                                   // 1558\n    var $rendered = this.$selection.find('.select2-selection__rendered');                                          // 1559\n    var formatted = this.display(selection, $rendered);                                                            // 1560\n                                                                                                                   // 1561\n    $rendered.empty().append(formatted);                                                                           // 1562\n    $rendered.prop('title', selection.title || selection.text);                                                    // 1563\n  };                                                                                                               // 1564\n                                                                                                                   // 1565\n  return SingleSelection;                                                                                          // 1566\n});                                                                                                                // 1567\n                                                                                                                   // 1568\nS2.define('select2/selection/multiple',[                                                                           // 1569\n  'jquery',                                                                                                        // 1570\n  './base',                                                                                                        // 1571\n  '../utils'                                                                                                       // 1572\n], function ($, BaseSelection, Utils) {                                                                            // 1573\n  function MultipleSelection ($element, options) {                                                                 // 1574\n    MultipleSelection.__super__.constructor.apply(this, arguments);                                                // 1575\n  }                                                                                                                // 1576\n                                                                                                                   // 1577\n  Utils.Extend(MultipleSelection, BaseSelection);                                                                  // 1578\n                                                                                                                   // 1579\n  MultipleSelection.prototype.render = function () {                                                               // 1580\n    var $selection = MultipleSelection.__super__.render.call(this);                                                // 1581\n                                                                                                                   // 1582\n    $selection.addClass('select2-selection--multiple');                                                            // 1583\n                                                                                                                   // 1584\n    $selection.html(                                                                                               // 1585\n      '<ul class=\"select2-selection__rendered\"></ul>'                                                              // 1586\n    );                                                                                                             // 1587\n                                                                                                                   // 1588\n    return $selection;                                                                                             // 1589\n  };                                                                                                               // 1590\n                                                                                                                   // 1591\n  MultipleSelection.prototype.bind = function (container, $container) {                                            // 1592\n    var self = this;                                                                                               // 1593\n                                                                                                                   // 1594\n    MultipleSelection.__super__.bind.apply(this, arguments);                                                       // 1595\n                                                                                                                   // 1596\n    this.$selection.on('click', function (evt) {                                                                   // 1597\n      self.trigger('toggle', {                                                                                     // 1598\n        originalEvent: evt                                                                                         // 1599\n      });                                                                                                          // 1600\n    });                                                                                                            // 1601\n                                                                                                                   // 1602\n    this.$selection.on(                                                                                            // 1603\n      'click',                                                                                                     // 1604\n      '.select2-selection__choice__remove',                                                                        // 1605\n      function (evt) {                                                                                             // 1606\n        // Ignore the event if it is disabled                                                                      // 1607\n        if (self.options.get('disabled')) {                                                                        // 1608\n          return;                                                                                                  // 1609\n        }                                                                                                          // 1610\n                                                                                                                   // 1611\n        var $remove = $(this);                                                                                     // 1612\n        var $selection = $remove.parent();                                                                         // 1613\n                                                                                                                   // 1614\n        var data = $selection.data('data');                                                                        // 1615\n                                                                                                                   // 1616\n        self.trigger('unselect', {                                                                                 // 1617\n          originalEvent: evt,                                                                                      // 1618\n          data: data                                                                                               // 1619\n        });                                                                                                        // 1620\n      }                                                                                                            // 1621\n    );                                                                                                             // 1622\n  };                                                                                                               // 1623\n                                                                                                                   // 1624\n  MultipleSelection.prototype.clear = function () {                                                                // 1625\n    this.$selection.find('.select2-selection__rendered').empty();                                                  // 1626\n  };                                                                                                               // 1627\n                                                                                                                   // 1628\n  MultipleSelection.prototype.display = function (data, container) {                                               // 1629\n    var template = this.options.get('templateSelection');                                                          // 1630\n    var escapeMarkup = this.options.get('escapeMarkup');                                                           // 1631\n                                                                                                                   // 1632\n    return escapeMarkup(template(data, container));                                                                // 1633\n  };                                                                                                               // 1634\n                                                                                                                   // 1635\n  MultipleSelection.prototype.selectionContainer = function () {                                                   // 1636\n    var $container = $(                                                                                            // 1637\n      '<li class=\"select2-selection__choice\">' +                                                                   // 1638\n        '<span class=\"select2-selection__choice__remove\" role=\"presentation\">' +                                   // 1639\n          '&times;' +                                                                                              // 1640\n        '</span>' +                                                                                                // 1641\n      '</li>'                                                                                                      // 1642\n    );                                                                                                             // 1643\n                                                                                                                   // 1644\n    return $container;                                                                                             // 1645\n  };                                                                                                               // 1646\n                                                                                                                   // 1647\n  MultipleSelection.prototype.update = function (data) {                                                           // 1648\n    this.clear();                                                                                                  // 1649\n                                                                                                                   // 1650\n    if (data.length === 0) {                                                                                       // 1651\n      return;                                                                                                      // 1652\n    }                                                                                                              // 1653\n                                                                                                                   // 1654\n    var $selections = [];                                                                                          // 1655\n                                                                                                                   // 1656\n    for (var d = 0; d < data.length; d++) {                                                                        // 1657\n      var selection = data[d];                                                                                     // 1658\n                                                                                                                   // 1659\n      var $selection = this.selectionContainer();                                                                  // 1660\n      var formatted = this.display(selection, $selection);                                                         // 1661\n                                                                                                                   // 1662\n      $selection.append(formatted);                                                                                // 1663\n      $selection.prop('title', selection.title || selection.text);                                                 // 1664\n                                                                                                                   // 1665\n      $selection.data('data', selection);                                                                          // 1666\n                                                                                                                   // 1667\n      $selections.push($selection);                                                                                // 1668\n    }                                                                                                              // 1669\n                                                                                                                   // 1670\n    var $rendered = this.$selection.find('.select2-selection__rendered');                                          // 1671\n                                                                                                                   // 1672\n    Utils.appendMany($rendered, $selections);                                                                      // 1673\n  };                                                                                                               // 1674\n                                                                                                                   // 1675\n  return MultipleSelection;                                                                                        // 1676\n});                                                                                                                // 1677\n                                                                                                                   // 1678\nS2.define('select2/selection/placeholder',[                                                                        // 1679\n  '../utils'                                                                                                       // 1680\n], function (Utils) {                                                                                              // 1681\n  function Placeholder (decorated, $element, options) {                                                            // 1682\n    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));                                      // 1683\n                                                                                                                   // 1684\n    decorated.call(this, $element, options);                                                                       // 1685\n  }                                                                                                                // 1686\n                                                                                                                   // 1687\n  Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {                                         // 1688\n    if (typeof placeholder === 'string') {                                                                         // 1689\n      placeholder = {                                                                                              // 1690\n        id: '',                                                                                                    // 1691\n        text: placeholder                                                                                          // 1692\n      };                                                                                                           // 1693\n    }                                                                                                              // 1694\n                                                                                                                   // 1695\n    return placeholder;                                                                                            // 1696\n  };                                                                                                               // 1697\n                                                                                                                   // 1698\n  Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {                                    // 1699\n    var $placeholder = this.selectionContainer();                                                                  // 1700\n                                                                                                                   // 1701\n    $placeholder.html(this.display(placeholder));                                                                  // 1702\n    $placeholder.addClass('select2-selection__placeholder')                                                        // 1703\n                .removeClass('select2-selection__choice');                                                         // 1704\n                                                                                                                   // 1705\n    return $placeholder;                                                                                           // 1706\n  };                                                                                                               // 1707\n                                                                                                                   // 1708\n  Placeholder.prototype.update = function (decorated, data) {                                                      // 1709\n    var singlePlaceholder = (                                                                                      // 1710\n      data.length == 1 && data[0].id != this.placeholder.id                                                        // 1711\n    );                                                                                                             // 1712\n    var multipleSelections = data.length > 1;                                                                      // 1713\n                                                                                                                   // 1714\n    if (multipleSelections || singlePlaceholder) {                                                                 // 1715\n      return decorated.call(this, data);                                                                           // 1716\n    }                                                                                                              // 1717\n                                                                                                                   // 1718\n    this.clear();                                                                                                  // 1719\n                                                                                                                   // 1720\n    var $placeholder = this.createPlaceholder(this.placeholder);                                                   // 1721\n                                                                                                                   // 1722\n    this.$selection.find('.select2-selection__rendered').append($placeholder);                                     // 1723\n  };                                                                                                               // 1724\n                                                                                                                   // 1725\n  return Placeholder;                                                                                              // 1726\n});                                                                                                                // 1727\n                                                                                                                   // 1728\nS2.define('select2/selection/allowClear',[                                                                         // 1729\n  'jquery',                                                                                                        // 1730\n  '../keys'                                                                                                        // 1731\n], function ($, KEYS) {                                                                                            // 1732\n  function AllowClear () { }                                                                                       // 1733\n                                                                                                                   // 1734\n  AllowClear.prototype.bind = function (decorated, container, $container) {                                        // 1735\n    var self = this;                                                                                               // 1736\n                                                                                                                   // 1737\n    decorated.call(this, container, $container);                                                                   // 1738\n                                                                                                                   // 1739\n    if (this.placeholder == null) {                                                                                // 1740\n      if (this.options.get('debug') && window.console && console.error) {                                          // 1741\n        console.error(                                                                                             // 1742\n          'Select2: The `allowClear` option should be used in combination ' +                                      // 1743\n          'with the `placeholder` option.'                                                                         // 1744\n        );                                                                                                         // 1745\n      }                                                                                                            // 1746\n    }                                                                                                              // 1747\n                                                                                                                   // 1748\n    this.$selection.on('mousedown', '.select2-selection__clear',                                                   // 1749\n      function (evt) {                                                                                             // 1750\n        self._handleClear(evt);                                                                                    // 1751\n    });                                                                                                            // 1752\n                                                                                                                   // 1753\n    container.on('keypress', function (evt) {                                                                      // 1754\n      self._handleKeyboardClear(evt, container);                                                                   // 1755\n    });                                                                                                            // 1756\n  };                                                                                                               // 1757\n                                                                                                                   // 1758\n  AllowClear.prototype._handleClear = function (_, evt) {                                                          // 1759\n    // Ignore the event if it is disabled                                                                          // 1760\n    if (this.options.get('disabled')) {                                                                            // 1761\n      return;                                                                                                      // 1762\n    }                                                                                                              // 1763\n                                                                                                                   // 1764\n    var $clear = this.$selection.find('.select2-selection__clear');                                                // 1765\n                                                                                                                   // 1766\n    // Ignore the event if nothing has been selected                                                               // 1767\n    if ($clear.length === 0) {                                                                                     // 1768\n      return;                                                                                                      // 1769\n    }                                                                                                              // 1770\n                                                                                                                   // 1771\n    evt.stopPropagation();                                                                                         // 1772\n                                                                                                                   // 1773\n    var data = $clear.data('data');                                                                                // 1774\n                                                                                                                   // 1775\n    for (var d = 0; d < data.length; d++) {                                                                        // 1776\n      var unselectData = {                                                                                         // 1777\n        data: data[d]                                                                                              // 1778\n      };                                                                                                           // 1779\n                                                                                                                   // 1780\n      // Trigger the `unselect` event, so people can prevent it from being                                         // 1781\n      // cleared.                                                                                                  // 1782\n      this.trigger('unselect', unselectData);                                                                      // 1783\n                                                                                                                   // 1784\n      // If the event was prevented, don't clear it out.                                                           // 1785\n      if (unselectData.prevented) {                                                                                // 1786\n        return;                                                                                                    // 1787\n      }                                                                                                            // 1788\n    }                                                                                                              // 1789\n                                                                                                                   // 1790\n    this.$element.val(this.placeholder.id).trigger('change');                                                      // 1791\n                                                                                                                   // 1792\n    this.trigger('toggle', {});                                                                                    // 1793\n  };                                                                                                               // 1794\n                                                                                                                   // 1795\n  AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {                                       // 1796\n    if (container.isOpen()) {                                                                                      // 1797\n      return;                                                                                                      // 1798\n    }                                                                                                              // 1799\n                                                                                                                   // 1800\n    if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {                                                 // 1801\n      this._handleClear(evt);                                                                                      // 1802\n    }                                                                                                              // 1803\n  };                                                                                                               // 1804\n                                                                                                                   // 1805\n  AllowClear.prototype.update = function (decorated, data) {                                                       // 1806\n    decorated.call(this, data);                                                                                    // 1807\n                                                                                                                   // 1808\n    if (this.$selection.find('.select2-selection__placeholder').length > 0 ||                                      // 1809\n        data.length === 0) {                                                                                       // 1810\n      return;                                                                                                      // 1811\n    }                                                                                                              // 1812\n                                                                                                                   // 1813\n    var $remove = $(                                                                                               // 1814\n      '<span class=\"select2-selection__clear\">' +                                                                  // 1815\n        '&times;' +                                                                                                // 1816\n      '</span>'                                                                                                    // 1817\n    );                                                                                                             // 1818\n    $remove.data('data', data);                                                                                    // 1819\n                                                                                                                   // 1820\n    this.$selection.find('.select2-selection__rendered').prepend($remove);                                         // 1821\n  };                                                                                                               // 1822\n                                                                                                                   // 1823\n  return AllowClear;                                                                                               // 1824\n});                                                                                                                // 1825\n                                                                                                                   // 1826\nS2.define('select2/selection/search',[                                                                             // 1827\n  'jquery',                                                                                                        // 1828\n  '../utils',                                                                                                      // 1829\n  '../keys'                                                                                                        // 1830\n], function ($, Utils, KEYS) {                                                                                     // 1831\n  function Search (decorated, $element, options) {                                                                 // 1832\n    decorated.call(this, $element, options);                                                                       // 1833\n  }                                                                                                                // 1834\n                                                                                                                   // 1835\n  Search.prototype.render = function (decorated) {                                                                 // 1836\n    var $search = $(                                                                                               // 1837\n      '<li class=\"select2-search select2-search--inline\">' +                                                       // 1838\n        '<input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\"' +                                       // 1839\n        ' autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\"' +                                             // 1840\n        ' spellcheck=\"false\" role=\"textbox\" aria-autocomplete=\"list\" />' +                                         // 1841\n      '</li>'                                                                                                      // 1842\n    );                                                                                                             // 1843\n                                                                                                                   // 1844\n    this.$searchContainer = $search;                                                                               // 1845\n    this.$search = $search.find('input');                                                                          // 1846\n                                                                                                                   // 1847\n    var $rendered = decorated.call(this);                                                                          // 1848\n                                                                                                                   // 1849\n    this._transferTabIndex();                                                                                      // 1850\n                                                                                                                   // 1851\n    return $rendered;                                                                                              // 1852\n  };                                                                                                               // 1853\n                                                                                                                   // 1854\n  Search.prototype.bind = function (decorated, container, $container) {                                            // 1855\n    var self = this;                                                                                               // 1856\n                                                                                                                   // 1857\n    decorated.call(this, container, $container);                                                                   // 1858\n                                                                                                                   // 1859\n    container.on('open', function () {                                                                             // 1860\n      self.$search.trigger('focus');                                                                               // 1861\n    });                                                                                                            // 1862\n                                                                                                                   // 1863\n    container.on('close', function () {                                                                            // 1864\n      self.$search.val('');                                                                                        // 1865\n      self.$search.removeAttr('aria-activedescendant');                                                            // 1866\n      self.$search.trigger('focus');                                                                               // 1867\n    });                                                                                                            // 1868\n                                                                                                                   // 1869\n    container.on('enable', function () {                                                                           // 1870\n      self.$search.prop('disabled', false);                                                                        // 1871\n                                                                                                                   // 1872\n      self._transferTabIndex();                                                                                    // 1873\n    });                                                                                                            // 1874\n                                                                                                                   // 1875\n    container.on('disable', function () {                                                                          // 1876\n      self.$search.prop('disabled', true);                                                                         // 1877\n    });                                                                                                            // 1878\n                                                                                                                   // 1879\n    container.on('focus', function (evt) {                                                                         // 1880\n      self.$search.trigger('focus');                                                                               // 1881\n    });                                                                                                            // 1882\n                                                                                                                   // 1883\n    container.on('results:focus', function (params) {                                                              // 1884\n      self.$search.attr('aria-activedescendant', params.id);                                                       // 1885\n    });                                                                                                            // 1886\n                                                                                                                   // 1887\n    this.$selection.on('focusin', '.select2-search--inline', function (evt) {                                      // 1888\n      self.trigger('focus', evt);                                                                                  // 1889\n    });                                                                                                            // 1890\n                                                                                                                   // 1891\n    this.$selection.on('focusout', '.select2-search--inline', function (evt) {                                     // 1892\n      self._handleBlur(evt);                                                                                       // 1893\n    });                                                                                                            // 1894\n                                                                                                                   // 1895\n    this.$selection.on('keydown', '.select2-search--inline', function (evt) {                                      // 1896\n      evt.stopPropagation();                                                                                       // 1897\n                                                                                                                   // 1898\n      self.trigger('keypress', evt);                                                                               // 1899\n                                                                                                                   // 1900\n      self._keyUpPrevented = evt.isDefaultPrevented();                                                             // 1901\n                                                                                                                   // 1902\n      var key = evt.which;                                                                                         // 1903\n                                                                                                                   // 1904\n      if (key === KEYS.BACKSPACE && self.$search.val() === '') {                                                   // 1905\n        var $previousChoice = self.$searchContainer                                                                // 1906\n          .prev('.select2-selection__choice');                                                                     // 1907\n                                                                                                                   // 1908\n        if ($previousChoice.length > 0) {                                                                          // 1909\n          var item = $previousChoice.data('data');                                                                 // 1910\n                                                                                                                   // 1911\n          self.searchRemoveChoice(item);                                                                           // 1912\n                                                                                                                   // 1913\n          evt.preventDefault();                                                                                    // 1914\n        }                                                                                                          // 1915\n      }                                                                                                            // 1916\n    });                                                                                                            // 1917\n                                                                                                                   // 1918\n    // Try to detect the IE version should the `documentMode` property that                                        // 1919\n    // is stored on the document. This is only implemented in IE and is                                            // 1920\n    // slightly cleaner than doing a user agent check.                                                             // 1921\n    // This property is not available in Edge, but Edge also doesn't have                                          // 1922\n    // this bug.                                                                                                   // 1923\n    var msie = document.documentMode;                                                                              // 1924\n    var disableInputEvents = msie && msie <= 11;                                                                   // 1925\n                                                                                                                   // 1926\n    // Workaround for browsers which do not support the `input` event                                              // 1927\n    // This will prevent double-triggering of events for browsers which support                                    // 1928\n    // both the `keyup` and `input` events.                                                                        // 1929\n    this.$selection.on(                                                                                            // 1930\n      'input.searchcheck',                                                                                         // 1931\n      '.select2-search--inline',                                                                                   // 1932\n      function (evt) {                                                                                             // 1933\n        // IE will trigger the `input` event when a placeholder is used on a                                       // 1934\n        // search box. To get around this issue, we are forced to ignore all                                       // 1935\n        // `input` events in IE and keep using `keyup`.                                                            // 1936\n        if (disableInputEvents) {                                                                                  // 1937\n          self.$selection.off('input.search input.searchcheck');                                                   // 1938\n          return;                                                                                                  // 1939\n        }                                                                                                          // 1940\n                                                                                                                   // 1941\n        // Unbind the duplicated `keyup` event                                                                     // 1942\n        self.$selection.off('keyup.search');                                                                       // 1943\n      }                                                                                                            // 1944\n    );                                                                                                             // 1945\n                                                                                                                   // 1946\n    this.$selection.on(                                                                                            // 1947\n      'keyup.search input.search',                                                                                 // 1948\n      '.select2-search--inline',                                                                                   // 1949\n      function (evt) {                                                                                             // 1950\n        // IE will trigger the `input` event when a placeholder is used on a                                       // 1951\n        // search box. To get around this issue, we are forced to ignore all                                       // 1952\n        // `input` events in IE and keep using `keyup`.                                                            // 1953\n        if (disableInputEvents && evt.type === 'input') {                                                          // 1954\n          self.$selection.off('input.search input.searchcheck');                                                   // 1955\n          return;                                                                                                  // 1956\n        }                                                                                                          // 1957\n                                                                                                                   // 1958\n        var key = evt.which;                                                                                       // 1959\n                                                                                                                   // 1960\n        // We can freely ignore events from modifier keys                                                          // 1961\n        if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {                                            // 1962\n          return;                                                                                                  // 1963\n        }                                                                                                          // 1964\n                                                                                                                   // 1965\n        // Tabbing will be handled during the `keydown` phase                                                      // 1966\n        if (key == KEYS.TAB) {                                                                                     // 1967\n          return;                                                                                                  // 1968\n        }                                                                                                          // 1969\n                                                                                                                   // 1970\n        self.handleSearch(evt);                                                                                    // 1971\n      }                                                                                                            // 1972\n    );                                                                                                             // 1973\n  };                                                                                                               // 1974\n                                                                                                                   // 1975\n  /**                                                                                                              // 1976\n   * This method will transfer the tabindex attribute from the rendered                                            // 1977\n   * selection to the search box. This allows for the search box to be used as                                     // 1978\n   * the primary focus instead of the selection container.                                                         // 1979\n   *                                                                                                               // 1980\n   * @private                                                                                                      // 1981\n   */                                                                                                              // 1982\n  Search.prototype._transferTabIndex = function (decorated) {                                                      // 1983\n    this.$search.attr('tabindex', this.$selection.attr('tabindex'));                                               // 1984\n    this.$selection.attr('tabindex', '-1');                                                                        // 1985\n  };                                                                                                               // 1986\n                                                                                                                   // 1987\n  Search.prototype.createPlaceholder = function (decorated, placeholder) {                                         // 1988\n    this.$search.attr('placeholder', placeholder.text);                                                            // 1989\n  };                                                                                                               // 1990\n                                                                                                                   // 1991\n  Search.prototype.update = function (decorated, data) {                                                           // 1992\n    var searchHadFocus = this.$search[0] == document.activeElement;                                                // 1993\n                                                                                                                   // 1994\n    this.$search.attr('placeholder', '');                                                                          // 1995\n                                                                                                                   // 1996\n    decorated.call(this, data);                                                                                    // 1997\n                                                                                                                   // 1998\n    this.$selection.find('.select2-selection__rendered')                                                           // 1999\n                   .append(this.$searchContainer);                                                                 // 2000\n                                                                                                                   // 2001\n    this.resizeSearch();                                                                                           // 2002\n    if (searchHadFocus) {                                                                                          // 2003\n      this.$search.focus();                                                                                        // 2004\n    }                                                                                                              // 2005\n  };                                                                                                               // 2006\n                                                                                                                   // 2007\n  Search.prototype.handleSearch = function () {                                                                    // 2008\n    this.resizeSearch();                                                                                           // 2009\n                                                                                                                   // 2010\n    if (!this._keyUpPrevented) {                                                                                   // 2011\n      var input = this.$search.val();                                                                              // 2012\n                                                                                                                   // 2013\n      this.trigger('query', {                                                                                      // 2014\n        term: input                                                                                                // 2015\n      });                                                                                                          // 2016\n    }                                                                                                              // 2017\n                                                                                                                   // 2018\n    this._keyUpPrevented = false;                                                                                  // 2019\n  };                                                                                                               // 2020\n                                                                                                                   // 2021\n  Search.prototype.searchRemoveChoice = function (decorated, item) {                                               // 2022\n    this.trigger('unselect', {                                                                                     // 2023\n      data: item                                                                                                   // 2024\n    });                                                                                                            // 2025\n                                                                                                                   // 2026\n    this.$search.val(item.text);                                                                                   // 2027\n    this.handleSearch();                                                                                           // 2028\n  };                                                                                                               // 2029\n                                                                                                                   // 2030\n  Search.prototype.resizeSearch = function () {                                                                    // 2031\n    this.$search.css('width', '25px');                                                                             // 2032\n                                                                                                                   // 2033\n    var width = '';                                                                                                // 2034\n                                                                                                                   // 2035\n    if (this.$search.attr('placeholder') !== '') {                                                                 // 2036\n      width = this.$selection.find('.select2-selection__rendered').innerWidth();                                   // 2037\n    } else {                                                                                                       // 2038\n      var minimumWidth = this.$search.val().length + 1;                                                            // 2039\n                                                                                                                   // 2040\n      width = (minimumWidth * 0.75) + 'em';                                                                        // 2041\n    }                                                                                                              // 2042\n                                                                                                                   // 2043\n    this.$search.css('width', width);                                                                              // 2044\n  };                                                                                                               // 2045\n                                                                                                                   // 2046\n  return Search;                                                                                                   // 2047\n});                                                                                                                // 2048\n                                                                                                                   // 2049\nS2.define('select2/selection/eventRelay',[                                                                         // 2050\n  'jquery'                                                                                                         // 2051\n], function ($) {                                                                                                  // 2052\n  function EventRelay () { }                                                                                       // 2053\n                                                                                                                   // 2054\n  EventRelay.prototype.bind = function (decorated, container, $container) {                                        // 2055\n    var self = this;                                                                                               // 2056\n    var relayEvents = [                                                                                            // 2057\n      'open', 'opening',                                                                                           // 2058\n      'close', 'closing',                                                                                          // 2059\n      'select', 'selecting',                                                                                       // 2060\n      'unselect', 'unselecting'                                                                                    // 2061\n    ];                                                                                                             // 2062\n                                                                                                                   // 2063\n    var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];                                    // 2064\n                                                                                                                   // 2065\n    decorated.call(this, container, $container);                                                                   // 2066\n                                                                                                                   // 2067\n    container.on('*', function (name, params) {                                                                    // 2068\n      // Ignore events that should not be relayed                                                                  // 2069\n      if ($.inArray(name, relayEvents) === -1) {                                                                   // 2070\n        return;                                                                                                    // 2071\n      }                                                                                                            // 2072\n                                                                                                                   // 2073\n      // The parameters should always be an object                                                                 // 2074\n      params = params || {};                                                                                       // 2075\n                                                                                                                   // 2076\n      // Generate the jQuery event for the Select2 event                                                           // 2077\n      var evt = $.Event('select2:' + name, {                                                                       // 2078\n        params: params                                                                                             // 2079\n      });                                                                                                          // 2080\n                                                                                                                   // 2081\n      self.$element.trigger(evt);                                                                                  // 2082\n                                                                                                                   // 2083\n      // Only handle preventable events if it was one                                                              // 2084\n      if ($.inArray(name, preventableEvents) === -1) {                                                             // 2085\n        return;                                                                                                    // 2086\n      }                                                                                                            // 2087\n                                                                                                                   // 2088\n      params.prevented = evt.isDefaultPrevented();                                                                 // 2089\n    });                                                                                                            // 2090\n  };                                                                                                               // 2091\n                                                                                                                   // 2092\n  return EventRelay;                                                                                               // 2093\n});                                                                                                                // 2094\n                                                                                                                   // 2095\nS2.define('select2/translation',[                                                                                  // 2096\n  'jquery',                                                                                                        // 2097\n  'require'                                                                                                        // 2098\n], function ($, require) {                                                                                         // 2099\n  function Translation (dict) {                                                                                    // 2100\n    this.dict = dict || {};                                                                                        // 2101\n  }                                                                                                                // 2102\n                                                                                                                   // 2103\n  Translation.prototype.all = function () {                                                                        // 2104\n    return this.dict;                                                                                              // 2105\n  };                                                                                                               // 2106\n                                                                                                                   // 2107\n  Translation.prototype.get = function (key) {                                                                     // 2108\n    return this.dict[key];                                                                                         // 2109\n  };                                                                                                               // 2110\n                                                                                                                   // 2111\n  Translation.prototype.extend = function (translation) {                                                          // 2112\n    this.dict = $.extend({}, translation.all(), this.dict);                                                        // 2113\n  };                                                                                                               // 2114\n                                                                                                                   // 2115\n  // Static functions                                                                                              // 2116\n                                                                                                                   // 2117\n  Translation._cache = {};                                                                                         // 2118\n                                                                                                                   // 2119\n  Translation.loadPath = function (path) {                                                                         // 2120\n    if (!(path in Translation._cache)) {                                                                           // 2121\n      var translations = require(path);                                                                            // 2122\n                                                                                                                   // 2123\n      Translation._cache[path] = translations;                                                                     // 2124\n    }                                                                                                              // 2125\n                                                                                                                   // 2126\n    return new Translation(Translation._cache[path]);                                                              // 2127\n  };                                                                                                               // 2128\n                                                                                                                   // 2129\n  return Translation;                                                                                              // 2130\n});                                                                                                                // 2131\n                                                                                                                   // 2132\nS2.define('select2/diacritics',[                                                                                   // 2133\n                                                                                                                   // 2134\n], function () {                                                                                                   // 2135\n  var diacritics = {                                                                                               // 2136\n    '\\u24B6': 'A',                                                                                                 // 2137\n    '\\uFF21': 'A',                                                                                                 // 2138\n    '\\u00C0': 'A',                                                                                                 // 2139\n    '\\u00C1': 'A',                                                                                                 // 2140\n    '\\u00C2': 'A',                                                                                                 // 2141\n    '\\u1EA6': 'A',                                                                                                 // 2142\n    '\\u1EA4': 'A',                                                                                                 // 2143\n    '\\u1EAA': 'A',                                                                                                 // 2144\n    '\\u1EA8': 'A',                                                                                                 // 2145\n    '\\u00C3': 'A',                                                                                                 // 2146\n    '\\u0100': 'A',                                                                                                 // 2147\n    '\\u0102': 'A',                                                                                                 // 2148\n    '\\u1EB0': 'A',                                                                                                 // 2149\n    '\\u1EAE': 'A',                                                                                                 // 2150\n    '\\u1EB4': 'A',                                                                                                 // 2151\n    '\\u1EB2': 'A',                                                                                                 // 2152\n    '\\u0226': 'A',                                                                                                 // 2153\n    '\\u01E0': 'A',                                                                                                 // 2154\n    '\\u00C4': 'A',                                                                                                 // 2155\n    '\\u01DE': 'A',                                                                                                 // 2156\n    '\\u1EA2': 'A',                                                                                                 // 2157\n    '\\u00C5': 'A',                                                                                                 // 2158\n    '\\u01FA': 'A',                                                                                                 // 2159\n    '\\u01CD': 'A',                                                                                                 // 2160\n    '\\u0200': 'A',                                                                                                 // 2161\n    '\\u0202': 'A',                                                                                                 // 2162\n    '\\u1EA0': 'A',                                                                                                 // 2163\n    '\\u1EAC': 'A',                                                                                                 // 2164\n    '\\u1EB6': 'A',                                                                                                 // 2165\n    '\\u1E00': 'A',                                                                                                 // 2166\n    '\\u0104': 'A',                                                                                                 // 2167\n    '\\u023A': 'A',                                                                                                 // 2168\n    '\\u2C6F': 'A',                                                                                                 // 2169\n    '\\uA732': 'AA',                                                                                                // 2170\n    '\\u00C6': 'AE',                                                                                                // 2171\n    '\\u01FC': 'AE',                                                                                                // 2172\n    '\\u01E2': 'AE',                                                                                                // 2173\n    '\\uA734': 'AO',                                                                                                // 2174\n    '\\uA736': 'AU',                                                                                                // 2175\n    '\\uA738': 'AV',                                                                                                // 2176\n    '\\uA73A': 'AV',                                                                                                // 2177\n    '\\uA73C': 'AY',                                                                                                // 2178\n    '\\u24B7': 'B',                                                                                                 // 2179\n    '\\uFF22': 'B',                                                                                                 // 2180\n    '\\u1E02': 'B',                                                                                                 // 2181\n    '\\u1E04': 'B',                                                                                                 // 2182\n    '\\u1E06': 'B',                                                                                                 // 2183\n    '\\u0243': 'B',                                                                                                 // 2184\n    '\\u0182': 'B',                                                                                                 // 2185\n    '\\u0181': 'B',                                                                                                 // 2186\n    '\\u24B8': 'C',                                                                                                 // 2187\n    '\\uFF23': 'C',                                                                                                 // 2188\n    '\\u0106': 'C',                                                                                                 // 2189\n    '\\u0108': 'C',                                                                                                 // 2190\n    '\\u010A': 'C',                                                                                                 // 2191\n    '\\u010C': 'C',                                                                                                 // 2192\n    '\\u00C7': 'C',                                                                                                 // 2193\n    '\\u1E08': 'C',                                                                                                 // 2194\n    '\\u0187': 'C',                                                                                                 // 2195\n    '\\u023B': 'C',                                                                                                 // 2196\n    '\\uA73E': 'C',                                                                                                 // 2197\n    '\\u24B9': 'D',                                                                                                 // 2198\n    '\\uFF24': 'D',                                                                                                 // 2199\n    '\\u1E0A': 'D',                                                                                                 // 2200\n    '\\u010E': 'D',                                                                                                 // 2201\n    '\\u1E0C': 'D',                                                                                                 // 2202\n    '\\u1E10': 'D',                                                                                                 // 2203\n    '\\u1E12': 'D',                                                                                                 // 2204\n    '\\u1E0E': 'D',                                                                                                 // 2205\n    '\\u0110': 'D',                                                                                                 // 2206\n    '\\u018B': 'D',                                                                                                 // 2207\n    '\\u018A': 'D',                                                                                                 // 2208\n    '\\u0189': 'D',                                                                                                 // 2209\n    '\\uA779': 'D',                                                                                                 // 2210\n    '\\u01F1': 'DZ',                                                                                                // 2211\n    '\\u01C4': 'DZ',                                                                                                // 2212\n    '\\u01F2': 'Dz',                                                                                                // 2213\n    '\\u01C5': 'Dz',                                                                                                // 2214\n    '\\u24BA': 'E',                                                                                                 // 2215\n    '\\uFF25': 'E',                                                                                                 // 2216\n    '\\u00C8': 'E',                                                                                                 // 2217\n    '\\u00C9': 'E',                                                                                                 // 2218\n    '\\u00CA': 'E',                                                                                                 // 2219\n    '\\u1EC0': 'E',                                                                                                 // 2220\n    '\\u1EBE': 'E',                                                                                                 // 2221\n    '\\u1EC4': 'E',                                                                                                 // 2222\n    '\\u1EC2': 'E',                                                                                                 // 2223\n    '\\u1EBC': 'E',                                                                                                 // 2224\n    '\\u0112': 'E',                                                                                                 // 2225\n    '\\u1E14': 'E',                                                                                                 // 2226\n    '\\u1E16': 'E',                                                                                                 // 2227\n    '\\u0114': 'E',                                                                                                 // 2228\n    '\\u0116': 'E',                                                                                                 // 2229\n    '\\u00CB': 'E',                                                                                                 // 2230\n    '\\u1EBA': 'E',                                                                                                 // 2231\n    '\\u011A': 'E',                                                                                                 // 2232\n    '\\u0204': 'E',                                                                                                 // 2233\n    '\\u0206': 'E',                                                                                                 // 2234\n    '\\u1EB8': 'E',                                                                                                 // 2235\n    '\\u1EC6': 'E',                                                                                                 // 2236\n    '\\u0228': 'E',                                                                                                 // 2237\n    '\\u1E1C': 'E',                                                                                                 // 2238\n    '\\u0118': 'E',                                                                                                 // 2239\n    '\\u1E18': 'E',                                                                                                 // 2240\n    '\\u1E1A': 'E',                                                                                                 // 2241\n    '\\u0190': 'E',                                                                                                 // 2242\n    '\\u018E': 'E',                                                                                                 // 2243\n    '\\u24BB': 'F',                                                                                                 // 2244\n    '\\uFF26': 'F',                                                                                                 // 2245\n    '\\u1E1E': 'F',                                                                                                 // 2246\n    '\\u0191': 'F',                                                                                                 // 2247\n    '\\uA77B': 'F',                                                                                                 // 2248\n    '\\u24BC': 'G',                                                                                                 // 2249\n    '\\uFF27': 'G',                                                                                                 // 2250\n    '\\u01F4': 'G',                                                                                                 // 2251\n    '\\u011C': 'G',                                                                                                 // 2252\n    '\\u1E20': 'G',                                                                                                 // 2253\n    '\\u011E': 'G',                                                                                                 // 2254\n    '\\u0120': 'G',                                                                                                 // 2255\n    '\\u01E6': 'G',                                                                                                 // 2256\n    '\\u0122': 'G',                                                                                                 // 2257\n    '\\u01E4': 'G',                                                                                                 // 2258\n    '\\u0193': 'G',                                                                                                 // 2259\n    '\\uA7A0': 'G',                                                                                                 // 2260\n    '\\uA77D': 'G',                                                                                                 // 2261\n    '\\uA77E': 'G',                                                                                                 // 2262\n    '\\u24BD': 'H',                                                                                                 // 2263\n    '\\uFF28': 'H',                                                                                                 // 2264\n    '\\u0124': 'H',                                                                                                 // 2265\n    '\\u1E22': 'H',                                                                                                 // 2266\n    '\\u1E26': 'H',                                                                                                 // 2267\n    '\\u021E': 'H',                                                                                                 // 2268\n    '\\u1E24': 'H',                                                                                                 // 2269\n    '\\u1E28': 'H',                                                                                                 // 2270\n    '\\u1E2A': 'H',                                                                                                 // 2271\n    '\\u0126': 'H',                                                                                                 // 2272\n    '\\u2C67': 'H',                                                                                                 // 2273\n    '\\u2C75': 'H',                                                                                                 // 2274\n    '\\uA78D': 'H',                                                                                                 // 2275\n    '\\u24BE': 'I',                                                                                                 // 2276\n    '\\uFF29': 'I',                                                                                                 // 2277\n    '\\u00CC': 'I',                                                                                                 // 2278\n    '\\u00CD': 'I',                                                                                                 // 2279\n    '\\u00CE': 'I',                                                                                                 // 2280\n    '\\u0128': 'I',                                                                                                 // 2281\n    '\\u012A': 'I',                                                                                                 // 2282\n    '\\u012C': 'I',                                                                                                 // 2283\n    '\\u0130': 'I',                                                                                                 // 2284\n    '\\u00CF': 'I',                                                                                                 // 2285\n    '\\u1E2E': 'I',                                                                                                 // 2286\n    '\\u1EC8': 'I',                                                                                                 // 2287\n    '\\u01CF': 'I',                                                                                                 // 2288\n    '\\u0208': 'I',                                                                                                 // 2289\n    '\\u020A': 'I',                                                                                                 // 2290\n    '\\u1ECA': 'I',                                                                                                 // 2291\n    '\\u012E': 'I',                                                                                                 // 2292\n    '\\u1E2C': 'I',                                                                                                 // 2293\n    '\\u0197': 'I',                                                                                                 // 2294\n    '\\u24BF': 'J',                                                                                                 // 2295\n    '\\uFF2A': 'J',                                                                                                 // 2296\n    '\\u0134': 'J',                                                                                                 // 2297\n    '\\u0248': 'J',                                                                                                 // 2298\n    '\\u24C0': 'K',                                                                                                 // 2299\n    '\\uFF2B': 'K',                                                                                                 // 2300\n    '\\u1E30': 'K',                                                                                                 // 2301\n    '\\u01E8': 'K',                                                                                                 // 2302\n    '\\u1E32': 'K',                                                                                                 // 2303\n    '\\u0136': 'K',                                                                                                 // 2304\n    '\\u1E34': 'K',                                                                                                 // 2305\n    '\\u0198': 'K',                                                                                                 // 2306\n    '\\u2C69': 'K',                                                                                                 // 2307\n    '\\uA740': 'K',                                                                                                 // 2308\n    '\\uA742': 'K',                                                                                                 // 2309\n    '\\uA744': 'K',                                                                                                 // 2310\n    '\\uA7A2': 'K',                                                                                                 // 2311\n    '\\u24C1': 'L',                                                                                                 // 2312\n    '\\uFF2C': 'L',                                                                                                 // 2313\n    '\\u013F': 'L',                                                                                                 // 2314\n    '\\u0139': 'L',                                                                                                 // 2315\n    '\\u013D': 'L',                                                                                                 // 2316\n    '\\u1E36': 'L',                                                                                                 // 2317\n    '\\u1E38': 'L',                                                                                                 // 2318\n    '\\u013B': 'L',                                                                                                 // 2319\n    '\\u1E3C': 'L',                                                                                                 // 2320\n    '\\u1E3A': 'L',                                                                                                 // 2321\n    '\\u0141': 'L',                                                                                                 // 2322\n    '\\u023D': 'L',                                                                                                 // 2323\n    '\\u2C62': 'L',                                                                                                 // 2324\n    '\\u2C60': 'L',                                                                                                 // 2325\n    '\\uA748': 'L',                                                                                                 // 2326\n    '\\uA746': 'L',                                                                                                 // 2327\n    '\\uA780': 'L',                                                                                                 // 2328\n    '\\u01C7': 'LJ',                                                                                                // 2329\n    '\\u01C8': 'Lj',                                                                                                // 2330\n    '\\u24C2': 'M',                                                                                                 // 2331\n    '\\uFF2D': 'M',                                                                                                 // 2332\n    '\\u1E3E': 'M',                                                                                                 // 2333\n    '\\u1E40': 'M',                                                                                                 // 2334\n    '\\u1E42': 'M',                                                                                                 // 2335\n    '\\u2C6E': 'M',                                                                                                 // 2336\n    '\\u019C': 'M',                                                                                                 // 2337\n    '\\u24C3': 'N',                                                                                                 // 2338\n    '\\uFF2E': 'N',                                                                                                 // 2339\n    '\\u01F8': 'N',                                                                                                 // 2340\n    '\\u0143': 'N',                                                                                                 // 2341\n    '\\u00D1': 'N',                                                                                                 // 2342\n    '\\u1E44': 'N',                                                                                                 // 2343\n    '\\u0147': 'N',                                                                                                 // 2344\n    '\\u1E46': 'N',                                                                                                 // 2345\n    '\\u0145': 'N',                                                                                                 // 2346\n    '\\u1E4A': 'N',                                                                                                 // 2347\n    '\\u1E48': 'N',                                                                                                 // 2348\n    '\\u0220': 'N',                                                                                                 // 2349\n    '\\u019D': 'N',                                                                                                 // 2350\n    '\\uA790': 'N',                                                                                                 // 2351\n    '\\uA7A4': 'N',                                                                                                 // 2352\n    '\\u01CA': 'NJ',                                                                                                // 2353\n    '\\u01CB': 'Nj',                                                                                                // 2354\n    '\\u24C4': 'O',                                                                                                 // 2355\n    '\\uFF2F': 'O',                                                                                                 // 2356\n    '\\u00D2': 'O',                                                                                                 // 2357\n    '\\u00D3': 'O',                                                                                                 // 2358\n    '\\u00D4': 'O',                                                                                                 // 2359\n    '\\u1ED2': 'O',                                                                                                 // 2360\n    '\\u1ED0': 'O',                                                                                                 // 2361\n    '\\u1ED6': 'O',                                                                                                 // 2362\n    '\\u1ED4': 'O',                                                                                                 // 2363\n    '\\u00D5': 'O',                                                                                                 // 2364\n    '\\u1E4C': 'O',                                                                                                 // 2365\n    '\\u022C': 'O',                                                                                                 // 2366\n    '\\u1E4E': 'O',                                                                                                 // 2367\n    '\\u014C': 'O',                                                                                                 // 2368\n    '\\u1E50': 'O',                                                                                                 // 2369\n    '\\u1E52': 'O',                                                                                                 // 2370\n    '\\u014E': 'O',                                                                                                 // 2371\n    '\\u022E': 'O',                                                                                                 // 2372\n    '\\u0230': 'O',                                                                                                 // 2373\n    '\\u00D6': 'O',                                                                                                 // 2374\n    '\\u022A': 'O',                                                                                                 // 2375\n    '\\u1ECE': 'O',                                                                                                 // 2376\n    '\\u0150': 'O',                                                                                                 // 2377\n    '\\u01D1': 'O',                                                                                                 // 2378\n    '\\u020C': 'O',                                                                                                 // 2379\n    '\\u020E': 'O',                                                                                                 // 2380\n    '\\u01A0': 'O',                                                                                                 // 2381\n    '\\u1EDC': 'O',                                                                                                 // 2382\n    '\\u1EDA': 'O',                                                                                                 // 2383\n    '\\u1EE0': 'O',                                                                                                 // 2384\n    '\\u1EDE': 'O',                                                                                                 // 2385\n    '\\u1EE2': 'O',                                                                                                 // 2386\n    '\\u1ECC': 'O',                                                                                                 // 2387\n    '\\u1ED8': 'O',                                                                                                 // 2388\n    '\\u01EA': 'O',                                                                                                 // 2389\n    '\\u01EC': 'O',                                                                                                 // 2390\n    '\\u00D8': 'O',                                                                                                 // 2391\n    '\\u01FE': 'O',                                                                                                 // 2392\n    '\\u0186': 'O',                                                                                                 // 2393\n    '\\u019F': 'O',                                                                                                 // 2394\n    '\\uA74A': 'O',                                                                                                 // 2395\n    '\\uA74C': 'O',                                                                                                 // 2396\n    '\\u01A2': 'OI',                                                                                                // 2397\n    '\\uA74E': 'OO',                                                                                                // 2398\n    '\\u0222': 'OU',                                                                                                // 2399\n    '\\u24C5': 'P',                                                                                                 // 2400\n    '\\uFF30': 'P',                                                                                                 // 2401\n    '\\u1E54': 'P',                                                                                                 // 2402\n    '\\u1E56': 'P',                                                                                                 // 2403\n    '\\u01A4': 'P',                                                                                                 // 2404\n    '\\u2C63': 'P',                                                                                                 // 2405\n    '\\uA750': 'P',                                                                                                 // 2406\n    '\\uA752': 'P',                                                                                                 // 2407\n    '\\uA754': 'P',                                                                                                 // 2408\n    '\\u24C6': 'Q',                                                                                                 // 2409\n    '\\uFF31': 'Q',                                                                                                 // 2410\n    '\\uA756': 'Q',                                                                                                 // 2411\n    '\\uA758': 'Q',                                                                                                 // 2412\n    '\\u024A': 'Q',                                                                                                 // 2413\n    '\\u24C7': 'R',                                                                                                 // 2414\n    '\\uFF32': 'R',                                                                                                 // 2415\n    '\\u0154': 'R',                                                                                                 // 2416\n    '\\u1E58': 'R',                                                                                                 // 2417\n    '\\u0158': 'R',                                                                                                 // 2418\n    '\\u0210': 'R',                                                                                                 // 2419\n    '\\u0212': 'R',                                                                                                 // 2420\n    '\\u1E5A': 'R',                                                                                                 // 2421\n    '\\u1E5C': 'R',                                                                                                 // 2422\n    '\\u0156': 'R',                                                                                                 // 2423\n    '\\u1E5E': 'R',                                                                                                 // 2424\n    '\\u024C': 'R',                                                                                                 // 2425\n    '\\u2C64': 'R',                                                                                                 // 2426\n    '\\uA75A': 'R',                                                                                                 // 2427\n    '\\uA7A6': 'R',                                                                                                 // 2428\n    '\\uA782': 'R',                                                                                                 // 2429\n    '\\u24C8': 'S',                                                                                                 // 2430\n    '\\uFF33': 'S',                                                                                                 // 2431\n    '\\u1E9E': 'S',                                                                                                 // 2432\n    '\\u015A': 'S',                                                                                                 // 2433\n    '\\u1E64': 'S',                                                                                                 // 2434\n    '\\u015C': 'S',                                                                                                 // 2435\n    '\\u1E60': 'S',                                                                                                 // 2436\n    '\\u0160': 'S',                                                                                                 // 2437\n    '\\u1E66': 'S',                                                                                                 // 2438\n    '\\u1E62': 'S',                                                                                                 // 2439\n    '\\u1E68': 'S',                                                                                                 // 2440\n    '\\u0218': 'S',                                                                                                 // 2441\n    '\\u015E': 'S',                                                                                                 // 2442\n    '\\u2C7E': 'S',                                                                                                 // 2443\n    '\\uA7A8': 'S',                                                                                                 // 2444\n    '\\uA784': 'S',                                                                                                 // 2445\n    '\\u24C9': 'T',                                                                                                 // 2446\n    '\\uFF34': 'T',                                                                                                 // 2447\n    '\\u1E6A': 'T',                                                                                                 // 2448\n    '\\u0164': 'T',                                                                                                 // 2449\n    '\\u1E6C': 'T',                                                                                                 // 2450\n    '\\u021A': 'T',                                                                                                 // 2451\n    '\\u0162': 'T',                                                                                                 // 2452\n    '\\u1E70': 'T',                                                                                                 // 2453\n    '\\u1E6E': 'T',                                                                                                 // 2454\n    '\\u0166': 'T',                                                                                                 // 2455\n    '\\u01AC': 'T',                                                                                                 // 2456\n    '\\u01AE': 'T',                                                                                                 // 2457\n    '\\u023E': 'T',                                                                                                 // 2458\n    '\\uA786': 'T',                                                                                                 // 2459\n    '\\uA728': 'TZ',                                                                                                // 2460\n    '\\u24CA': 'U',                                                                                                 // 2461\n    '\\uFF35': 'U',                                                                                                 // 2462\n    '\\u00D9': 'U',                                                                                                 // 2463\n    '\\u00DA': 'U',                                                                                                 // 2464\n    '\\u00DB': 'U',                                                                                                 // 2465\n    '\\u0168': 'U',                                                                                                 // 2466\n    '\\u1E78': 'U',                                                                                                 // 2467\n    '\\u016A': 'U',                                                                                                 // 2468\n    '\\u1E7A': 'U',                                                                                                 // 2469\n    '\\u016C': 'U',                                                                                                 // 2470\n    '\\u00DC': 'U',                                                                                                 // 2471\n    '\\u01DB': 'U',                                                                                                 // 2472\n    '\\u01D7': 'U',                                                                                                 // 2473\n    '\\u01D5': 'U',                                                                                                 // 2474\n    '\\u01D9': 'U',                                                                                                 // 2475\n    '\\u1EE6': 'U',                                                                                                 // 2476\n    '\\u016E': 'U',                                                                                                 // 2477\n    '\\u0170': 'U',                                                                                                 // 2478\n    '\\u01D3': 'U',                                                                                                 // 2479\n    '\\u0214': 'U',                                                                                                 // 2480\n    '\\u0216': 'U',                                                                                                 // 2481\n    '\\u01AF': 'U',                                                                                                 // 2482\n    '\\u1EEA': 'U',                                                                                                 // 2483\n    '\\u1EE8': 'U',                                                                                                 // 2484\n    '\\u1EEE': 'U',                                                                                                 // 2485\n    '\\u1EEC': 'U',                                                                                                 // 2486\n    '\\u1EF0': 'U',                                                                                                 // 2487\n    '\\u1EE4': 'U',                                                                                                 // 2488\n    '\\u1E72': 'U',                                                                                                 // 2489\n    '\\u0172': 'U',                                                                                                 // 2490\n    '\\u1E76': 'U',                                                                                                 // 2491\n    '\\u1E74': 'U',                                                                                                 // 2492\n    '\\u0244': 'U',                                                                                                 // 2493\n    '\\u24CB': 'V',                                                                                                 // 2494\n    '\\uFF36': 'V',                                                                                                 // 2495\n    '\\u1E7C': 'V',                                                                                                 // 2496\n    '\\u1E7E': 'V',                                                                                                 // 2497\n    '\\u01B2': 'V',                                                                                                 // 2498\n    '\\uA75E': 'V',                                                                                                 // 2499\n    '\\u0245': 'V',                                                                                                 // 2500\n    '\\uA760': 'VY',                                                                                                // 2501\n    '\\u24CC': 'W',                                                                                                 // 2502\n    '\\uFF37': 'W',                                                                                                 // 2503\n    '\\u1E80': 'W',                                                                                                 // 2504\n    '\\u1E82': 'W',                                                                                                 // 2505\n    '\\u0174': 'W',                                                                                                 // 2506\n    '\\u1E86': 'W',                                                                                                 // 2507\n    '\\u1E84': 'W',                                                                                                 // 2508\n    '\\u1E88': 'W',                                                                                                 // 2509\n    '\\u2C72': 'W',                                                                                                 // 2510\n    '\\u24CD': 'X',                                                                                                 // 2511\n    '\\uFF38': 'X',                                                                                                 // 2512\n    '\\u1E8A': 'X',                                                                                                 // 2513\n    '\\u1E8C': 'X',                                                                                                 // 2514\n    '\\u24CE': 'Y',                                                                                                 // 2515\n    '\\uFF39': 'Y',                                                                                                 // 2516\n    '\\u1EF2': 'Y',                                                                                                 // 2517\n    '\\u00DD': 'Y',                                                                                                 // 2518\n    '\\u0176': 'Y',                                                                                                 // 2519\n    '\\u1EF8': 'Y',                                                                                                 // 2520\n    '\\u0232': 'Y',                                                                                                 // 2521\n    '\\u1E8E': 'Y',                                                                                                 // 2522\n    '\\u0178': 'Y',                                                                                                 // 2523\n    '\\u1EF6': 'Y',                                                                                                 // 2524\n    '\\u1EF4': 'Y',                                                                                                 // 2525\n    '\\u01B3': 'Y',                                                                                                 // 2526\n    '\\u024E': 'Y',                                                                                                 // 2527\n    '\\u1EFE': 'Y',                                                                                                 // 2528\n    '\\u24CF': 'Z',                                                                                                 // 2529\n    '\\uFF3A': 'Z',                                                                                                 // 2530\n    '\\u0179': 'Z',                                                                                                 // 2531\n    '\\u1E90': 'Z',                                                                                                 // 2532\n    '\\u017B': 'Z',                                                                                                 // 2533\n    '\\u017D': 'Z',                                                                                                 // 2534\n    '\\u1E92': 'Z',                                                                                                 // 2535\n    '\\u1E94': 'Z',                                                                                                 // 2536\n    '\\u01B5': 'Z',                                                                                                 // 2537\n    '\\u0224': 'Z',                                                                                                 // 2538\n    '\\u2C7F': 'Z',                                                                                                 // 2539\n    '\\u2C6B': 'Z',                                                                                                 // 2540\n    '\\uA762': 'Z',                                                                                                 // 2541\n    '\\u24D0': 'a',                                                                                                 // 2542\n    '\\uFF41': 'a',                                                                                                 // 2543\n    '\\u1E9A': 'a',                                                                                                 // 2544\n    '\\u00E0': 'a',                                                                                                 // 2545\n    '\\u00E1': 'a',                                                                                                 // 2546\n    '\\u00E2': 'a',                                                                                                 // 2547\n    '\\u1EA7': 'a',                                                                                                 // 2548\n    '\\u1EA5': 'a',                                                                                                 // 2549\n    '\\u1EAB': 'a',                                                                                                 // 2550\n    '\\u1EA9': 'a',                                                                                                 // 2551\n    '\\u00E3': 'a',                                                                                                 // 2552\n    '\\u0101': 'a',                                                                                                 // 2553\n    '\\u0103': 'a',                                                                                                 // 2554\n    '\\u1EB1': 'a',                                                                                                 // 2555\n    '\\u1EAF': 'a',                                                                                                 // 2556\n    '\\u1EB5': 'a',                                                                                                 // 2557\n    '\\u1EB3': 'a',                                                                                                 // 2558\n    '\\u0227': 'a',                                                                                                 // 2559\n    '\\u01E1': 'a',                                                                                                 // 2560\n    '\\u00E4': 'a',                                                                                                 // 2561\n    '\\u01DF': 'a',                                                                                                 // 2562\n    '\\u1EA3': 'a',                                                                                                 // 2563\n    '\\u00E5': 'a',                                                                                                 // 2564\n    '\\u01FB': 'a',                                                                                                 // 2565\n    '\\u01CE': 'a',                                                                                                 // 2566\n    '\\u0201': 'a',                                                                                                 // 2567\n    '\\u0203': 'a',                                                                                                 // 2568\n    '\\u1EA1': 'a',                                                                                                 // 2569\n    '\\u1EAD': 'a',                                                                                                 // 2570\n    '\\u1EB7': 'a',                                                                                                 // 2571\n    '\\u1E01': 'a',                                                                                                 // 2572\n    '\\u0105': 'a',                                                                                                 // 2573\n    '\\u2C65': 'a',                                                                                                 // 2574\n    '\\u0250': 'a',                                                                                                 // 2575\n    '\\uA733': 'aa',                                                                                                // 2576\n    '\\u00E6': 'ae',                                                                                                // 2577\n    '\\u01FD': 'ae',                                                                                                // 2578\n    '\\u01E3': 'ae',                                                                                                // 2579\n    '\\uA735': 'ao',                                                                                                // 2580\n    '\\uA737': 'au',                                                                                                // 2581\n    '\\uA739': 'av',                                                                                                // 2582\n    '\\uA73B': 'av',                                                                                                // 2583\n    '\\uA73D': 'ay',                                                                                                // 2584\n    '\\u24D1': 'b',                                                                                                 // 2585\n    '\\uFF42': 'b',                                                                                                 // 2586\n    '\\u1E03': 'b',                                                                                                 // 2587\n    '\\u1E05': 'b',                                                                                                 // 2588\n    '\\u1E07': 'b',                                                                                                 // 2589\n    '\\u0180': 'b',                                                                                                 // 2590\n    '\\u0183': 'b',                                                                                                 // 2591\n    '\\u0253': 'b',                                                                                                 // 2592\n    '\\u24D2': 'c',                                                                                                 // 2593\n    '\\uFF43': 'c',                                                                                                 // 2594\n    '\\u0107': 'c',                                                                                                 // 2595\n    '\\u0109': 'c',                                                                                                 // 2596\n    '\\u010B': 'c',                                                                                                 // 2597\n    '\\u010D': 'c',                                                                                                 // 2598\n    '\\u00E7': 'c',                                                                                                 // 2599\n    '\\u1E09': 'c',                                                                                                 // 2600\n    '\\u0188': 'c',                                                                                                 // 2601\n    '\\u023C': 'c',                                                                                                 // 2602\n    '\\uA73F': 'c',                                                                                                 // 2603\n    '\\u2184': 'c',                                                                                                 // 2604\n    '\\u24D3': 'd',                                                                                                 // 2605\n    '\\uFF44': 'd',                                                                                                 // 2606\n    '\\u1E0B': 'd',                                                                                                 // 2607\n    '\\u010F': 'd',                                                                                                 // 2608\n    '\\u1E0D': 'd',                                                                                                 // 2609\n    '\\u1E11': 'd',                                                                                                 // 2610\n    '\\u1E13': 'd',                                                                                                 // 2611\n    '\\u1E0F': 'd',                                                                                                 // 2612\n    '\\u0111': 'd',                                                                                                 // 2613\n    '\\u018C': 'd',                                                                                                 // 2614\n    '\\u0256': 'd',                                                                                                 // 2615\n    '\\u0257': 'd',                                                                                                 // 2616\n    '\\uA77A': 'd',                                                                                                 // 2617\n    '\\u01F3': 'dz',                                                                                                // 2618\n    '\\u01C6': 'dz',                                                                                                // 2619\n    '\\u24D4': 'e',                                                                                                 // 2620\n    '\\uFF45': 'e',                                                                                                 // 2621\n    '\\u00E8': 'e',                                                                                                 // 2622\n    '\\u00E9': 'e',                                                                                                 // 2623\n    '\\u00EA': 'e',                                                                                                 // 2624\n    '\\u1EC1': 'e',                                                                                                 // 2625\n    '\\u1EBF': 'e',                                                                                                 // 2626\n    '\\u1EC5': 'e',                                                                                                 // 2627\n    '\\u1EC3': 'e',                                                                                                 // 2628\n    '\\u1EBD': 'e',                                                                                                 // 2629\n    '\\u0113': 'e',                                                                                                 // 2630\n    '\\u1E15': 'e',                                                                                                 // 2631\n    '\\u1E17': 'e',                                                                                                 // 2632\n    '\\u0115': 'e',                                                                                                 // 2633\n    '\\u0117': 'e',                                                                                                 // 2634\n    '\\u00EB': 'e',                                                                                                 // 2635\n    '\\u1EBB': 'e',                                                                                                 // 2636\n    '\\u011B': 'e',                                                                                                 // 2637\n    '\\u0205': 'e',                                                                                                 // 2638\n    '\\u0207': 'e',                                                                                                 // 2639\n    '\\u1EB9': 'e',                                                                                                 // 2640\n    '\\u1EC7': 'e',                                                                                                 // 2641\n    '\\u0229': 'e',                                                                                                 // 2642\n    '\\u1E1D': 'e',                                                                                                 // 2643\n    '\\u0119': 'e',                                                                                                 // 2644\n    '\\u1E19': 'e',                                                                                                 // 2645\n    '\\u1E1B': 'e',                                                                                                 // 2646\n    '\\u0247': 'e',                                                                                                 // 2647\n    '\\u025B': 'e',                                                                                                 // 2648\n    '\\u01DD': 'e',                                                                                                 // 2649\n    '\\u24D5': 'f',                                                                                                 // 2650\n    '\\uFF46': 'f',                                                                                                 // 2651\n    '\\u1E1F': 'f',                                                                                                 // 2652\n    '\\u0192': 'f',                                                                                                 // 2653\n    '\\uA77C': 'f',                                                                                                 // 2654\n    '\\u24D6': 'g',                                                                                                 // 2655\n    '\\uFF47': 'g',                                                                                                 // 2656\n    '\\u01F5': 'g',                                                                                                 // 2657\n    '\\u011D': 'g',                                                                                                 // 2658\n    '\\u1E21': 'g',                                                                                                 // 2659\n    '\\u011F': 'g',                                                                                                 // 2660\n    '\\u0121': 'g',                                                                                                 // 2661\n    '\\u01E7': 'g',                                                                                                 // 2662\n    '\\u0123': 'g',                                                                                                 // 2663\n    '\\u01E5': 'g',                                                                                                 // 2664\n    '\\u0260': 'g',                                                                                                 // 2665\n    '\\uA7A1': 'g',                                                                                                 // 2666\n    '\\u1D79': 'g',                                                                                                 // 2667\n    '\\uA77F': 'g',                                                                                                 // 2668\n    '\\u24D7': 'h',                                                                                                 // 2669\n    '\\uFF48': 'h',                                                                                                 // 2670\n    '\\u0125': 'h',                                                                                                 // 2671\n    '\\u1E23': 'h',                                                                                                 // 2672\n    '\\u1E27': 'h',                                                                                                 // 2673\n    '\\u021F': 'h',                                                                                                 // 2674\n    '\\u1E25': 'h',                                                                                                 // 2675\n    '\\u1E29': 'h',                                                                                                 // 2676\n    '\\u1E2B': 'h',                                                                                                 // 2677\n    '\\u1E96': 'h',                                                                                                 // 2678\n    '\\u0127': 'h',                                                                                                 // 2679\n    '\\u2C68': 'h',                                                                                                 // 2680\n    '\\u2C76': 'h',                                                                                                 // 2681\n    '\\u0265': 'h',                                                                                                 // 2682\n    '\\u0195': 'hv',                                                                                                // 2683\n    '\\u24D8': 'i',                                                                                                 // 2684\n    '\\uFF49': 'i',                                                                                                 // 2685\n    '\\u00EC': 'i',                                                                                                 // 2686\n    '\\u00ED': 'i',                                                                                                 // 2687\n    '\\u00EE': 'i',                                                                                                 // 2688\n    '\\u0129': 'i',                                                                                                 // 2689\n    '\\u012B': 'i',                                                                                                 // 2690\n    '\\u012D': 'i',                                                                                                 // 2691\n    '\\u00EF': 'i',                                                                                                 // 2692\n    '\\u1E2F': 'i',                                                                                                 // 2693\n    '\\u1EC9': 'i',                                                                                                 // 2694\n    '\\u01D0': 'i',                                                                                                 // 2695\n    '\\u0209': 'i',                                                                                                 // 2696\n    '\\u020B': 'i',                                                                                                 // 2697\n    '\\u1ECB': 'i',                                                                                                 // 2698\n    '\\u012F': 'i',                                                                                                 // 2699\n    '\\u1E2D': 'i',                                                                                                 // 2700\n    '\\u0268': 'i',                                                                                                 // 2701\n    '\\u0131': 'i',                                                                                                 // 2702\n    '\\u24D9': 'j',                                                                                                 // 2703\n    '\\uFF4A': 'j',                                                                                                 // 2704\n    '\\u0135': 'j',                                                                                                 // 2705\n    '\\u01F0': 'j',                                                                                                 // 2706\n    '\\u0249': 'j',                                                                                                 // 2707\n    '\\u24DA': 'k',                                                                                                 // 2708\n    '\\uFF4B': 'k',                                                                                                 // 2709\n    '\\u1E31': 'k',                                                                                                 // 2710\n    '\\u01E9': 'k',                                                                                                 // 2711\n    '\\u1E33': 'k',                                                                                                 // 2712\n    '\\u0137': 'k',                                                                                                 // 2713\n    '\\u1E35': 'k',                                                                                                 // 2714\n    '\\u0199': 'k',                                                                                                 // 2715\n    '\\u2C6A': 'k',                                                                                                 // 2716\n    '\\uA741': 'k',                                                                                                 // 2717\n    '\\uA743': 'k',                                                                                                 // 2718\n    '\\uA745': 'k',                                                                                                 // 2719\n    '\\uA7A3': 'k',                                                                                                 // 2720\n    '\\u24DB': 'l',                                                                                                 // 2721\n    '\\uFF4C': 'l',                                                                                                 // 2722\n    '\\u0140': 'l',                                                                                                 // 2723\n    '\\u013A': 'l',                                                                                                 // 2724\n    '\\u013E': 'l',                                                                                                 // 2725\n    '\\u1E37': 'l',                                                                                                 // 2726\n    '\\u1E39': 'l',                                                                                                 // 2727\n    '\\u013C': 'l',                                                                                                 // 2728\n    '\\u1E3D': 'l',                                                                                                 // 2729\n    '\\u1E3B': 'l',                                                                                                 // 2730\n    '\\u017F': 'l',                                                                                                 // 2731\n    '\\u0142': 'l',                                                                                                 // 2732\n    '\\u019A': 'l',                                                                                                 // 2733\n    '\\u026B': 'l',                                                                                                 // 2734\n    '\\u2C61': 'l',                                                                                                 // 2735\n    '\\uA749': 'l',                                                                                                 // 2736\n    '\\uA781': 'l',                                                                                                 // 2737\n    '\\uA747': 'l',                                                                                                 // 2738\n    '\\u01C9': 'lj',                                                                                                // 2739\n    '\\u24DC': 'm',                                                                                                 // 2740\n    '\\uFF4D': 'm',                                                                                                 // 2741\n    '\\u1E3F': 'm',                                                                                                 // 2742\n    '\\u1E41': 'm',                                                                                                 // 2743\n    '\\u1E43': 'm',                                                                                                 // 2744\n    '\\u0271': 'm',                                                                                                 // 2745\n    '\\u026F': 'm',                                                                                                 // 2746\n    '\\u24DD': 'n',                                                                                                 // 2747\n    '\\uFF4E': 'n',                                                                                                 // 2748\n    '\\u01F9': 'n',                                                                                                 // 2749\n    '\\u0144': 'n',                                                                                                 // 2750\n    '\\u00F1': 'n',                                                                                                 // 2751\n    '\\u1E45': 'n',                                                                                                 // 2752\n    '\\u0148': 'n',                                                                                                 // 2753\n    '\\u1E47': 'n',                                                                                                 // 2754\n    '\\u0146': 'n',                                                                                                 // 2755\n    '\\u1E4B': 'n',                                                                                                 // 2756\n    '\\u1E49': 'n',                                                                                                 // 2757\n    '\\u019E': 'n',                                                                                                 // 2758\n    '\\u0272': 'n',                                                                                                 // 2759\n    '\\u0149': 'n',                                                                                                 // 2760\n    '\\uA791': 'n',                                                                                                 // 2761\n    '\\uA7A5': 'n',                                                                                                 // 2762\n    '\\u01CC': 'nj',                                                                                                // 2763\n    '\\u24DE': 'o',                                                                                                 // 2764\n    '\\uFF4F': 'o',                                                                                                 // 2765\n    '\\u00F2': 'o',                                                                                                 // 2766\n    '\\u00F3': 'o',                                                                                                 // 2767\n    '\\u00F4': 'o',                                                                                                 // 2768\n    '\\u1ED3': 'o',                                                                                                 // 2769\n    '\\u1ED1': 'o',                                                                                                 // 2770\n    '\\u1ED7': 'o',                                                                                                 // 2771\n    '\\u1ED5': 'o',                                                                                                 // 2772\n    '\\u00F5': 'o',                                                                                                 // 2773\n    '\\u1E4D': 'o',                                                                                                 // 2774\n    '\\u022D': 'o',                                                                                                 // 2775\n    '\\u1E4F': 'o',                                                                                                 // 2776\n    '\\u014D': 'o',                                                                                                 // 2777\n    '\\u1E51': 'o',                                                                                                 // 2778\n    '\\u1E53': 'o',                                                                                                 // 2779\n    '\\u014F': 'o',                                                                                                 // 2780\n    '\\u022F': 'o',                                                                                                 // 2781\n    '\\u0231': 'o',                                                                                                 // 2782\n    '\\u00F6': 'o',                                                                                                 // 2783\n    '\\u022B': 'o',                                                                                                 // 2784\n    '\\u1ECF': 'o',                                                                                                 // 2785\n    '\\u0151': 'o',                                                                                                 // 2786\n    '\\u01D2': 'o',                                                                                                 // 2787\n    '\\u020D': 'o',                                                                                                 // 2788\n    '\\u020F': 'o',                                                                                                 // 2789\n    '\\u01A1': 'o',                                                                                                 // 2790\n    '\\u1EDD': 'o',                                                                                                 // 2791\n    '\\u1EDB': 'o',                                                                                                 // 2792\n    '\\u1EE1': 'o',                                                                                                 // 2793\n    '\\u1EDF': 'o',                                                                                                 // 2794\n    '\\u1EE3': 'o',                                                                                                 // 2795\n    '\\u1ECD': 'o',                                                                                                 // 2796\n    '\\u1ED9': 'o',                                                                                                 // 2797\n    '\\u01EB': 'o',                                                                                                 // 2798\n    '\\u01ED': 'o',                                                                                                 // 2799\n    '\\u00F8': 'o',                                                                                                 // 2800\n    '\\u01FF': 'o',                                                                                                 // 2801\n    '\\u0254': 'o',                                                                                                 // 2802\n    '\\uA74B': 'o',                                                                                                 // 2803\n    '\\uA74D': 'o',                                                                                                 // 2804\n    '\\u0275': 'o',                                                                                                 // 2805\n    '\\u01A3': 'oi',                                                                                                // 2806\n    '\\u0223': 'ou',                                                                                                // 2807\n    '\\uA74F': 'oo',                                                                                                // 2808\n    '\\u24DF': 'p',                                                                                                 // 2809\n    '\\uFF50': 'p',                                                                                                 // 2810\n    '\\u1E55': 'p',                                                                                                 // 2811\n    '\\u1E57': 'p',                                                                                                 // 2812\n    '\\u01A5': 'p',                                                                                                 // 2813\n    '\\u1D7D': 'p',                                                                                                 // 2814\n    '\\uA751': 'p',                                                                                                 // 2815\n    '\\uA753': 'p',                                                                                                 // 2816\n    '\\uA755': 'p',                                                                                                 // 2817\n    '\\u24E0': 'q',                                                                                                 // 2818\n    '\\uFF51': 'q',                                                                                                 // 2819\n    '\\u024B': 'q',                                                                                                 // 2820\n    '\\uA757': 'q',                                                                                                 // 2821\n    '\\uA759': 'q',                                                                                                 // 2822\n    '\\u24E1': 'r',                                                                                                 // 2823\n    '\\uFF52': 'r',                                                                                                 // 2824\n    '\\u0155': 'r',                                                                                                 // 2825\n    '\\u1E59': 'r',                                                                                                 // 2826\n    '\\u0159': 'r',                                                                                                 // 2827\n    '\\u0211': 'r',                                                                                                 // 2828\n    '\\u0213': 'r',                                                                                                 // 2829\n    '\\u1E5B': 'r',                                                                                                 // 2830\n    '\\u1E5D': 'r',                                                                                                 // 2831\n    '\\u0157': 'r',                                                                                                 // 2832\n    '\\u1E5F': 'r',                                                                                                 // 2833\n    '\\u024D': 'r',                                                                                                 // 2834\n    '\\u027D': 'r',                                                                                                 // 2835\n    '\\uA75B': 'r',                                                                                                 // 2836\n    '\\uA7A7': 'r',                                                                                                 // 2837\n    '\\uA783': 'r',                                                                                                 // 2838\n    '\\u24E2': 's',                                                                                                 // 2839\n    '\\uFF53': 's',                                                                                                 // 2840\n    '\\u00DF': 's',                                                                                                 // 2841\n    '\\u015B': 's',                                                                                                 // 2842\n    '\\u1E65': 's',                                                                                                 // 2843\n    '\\u015D': 's',                                                                                                 // 2844\n    '\\u1E61': 's',                                                                                                 // 2845\n    '\\u0161': 's',                                                                                                 // 2846\n    '\\u1E67': 's',                                                                                                 // 2847\n    '\\u1E63': 's',                                                                                                 // 2848\n    '\\u1E69': 's',                                                                                                 // 2849\n    '\\u0219': 's',                                                                                                 // 2850\n    '\\u015F': 's',                                                                                                 // 2851\n    '\\u023F': 's',                                                                                                 // 2852\n    '\\uA7A9': 's',                                                                                                 // 2853\n    '\\uA785': 's',                                                                                                 // 2854\n    '\\u1E9B': 's',                                                                                                 // 2855\n    '\\u24E3': 't',                                                                                                 // 2856\n    '\\uFF54': 't',                                                                                                 // 2857\n    '\\u1E6B': 't',                                                                                                 // 2858\n    '\\u1E97': 't',                                                                                                 // 2859\n    '\\u0165': 't',                                                                                                 // 2860\n    '\\u1E6D': 't',                                                                                                 // 2861\n    '\\u021B': 't',                                                                                                 // 2862\n    '\\u0163': 't',                                                                                                 // 2863\n    '\\u1E71': 't',                                                                                                 // 2864\n    '\\u1E6F': 't',                                                                                                 // 2865\n    '\\u0167': 't',                                                                                                 // 2866\n    '\\u01AD': 't',                                                                                                 // 2867\n    '\\u0288': 't',                                                                                                 // 2868\n    '\\u2C66': 't',                                                                                                 // 2869\n    '\\uA787': 't',                                                                                                 // 2870\n    '\\uA729': 'tz',                                                                                                // 2871\n    '\\u24E4': 'u',                                                                                                 // 2872\n    '\\uFF55': 'u',                                                                                                 // 2873\n    '\\u00F9': 'u',                                                                                                 // 2874\n    '\\u00FA': 'u',                                                                                                 // 2875\n    '\\u00FB': 'u',                                                                                                 // 2876\n    '\\u0169': 'u',                                                                                                 // 2877\n    '\\u1E79': 'u',                                                                                                 // 2878\n    '\\u016B': 'u',                                                                                                 // 2879\n    '\\u1E7B': 'u',                                                                                                 // 2880\n    '\\u016D': 'u',                                                                                                 // 2881\n    '\\u00FC': 'u',                                                                                                 // 2882\n    '\\u01DC': 'u',                                                                                                 // 2883\n    '\\u01D8': 'u',                                                                                                 // 2884\n    '\\u01D6': 'u',                                                                                                 // 2885\n    '\\u01DA': 'u',                                                                                                 // 2886\n    '\\u1EE7': 'u',                                                                                                 // 2887\n    '\\u016F': 'u',                                                                                                 // 2888\n    '\\u0171': 'u',                                                                                                 // 2889\n    '\\u01D4': 'u',                                                                                                 // 2890\n    '\\u0215': 'u',                                                                                                 // 2891\n    '\\u0217': 'u',                                                                                                 // 2892\n    '\\u01B0': 'u',                                                                                                 // 2893\n    '\\u1EEB': 'u',                                                                                                 // 2894\n    '\\u1EE9': 'u',                                                                                                 // 2895\n    '\\u1EEF': 'u',                                                                                                 // 2896\n    '\\u1EED': 'u',                                                                                                 // 2897\n    '\\u1EF1': 'u',                                                                                                 // 2898\n    '\\u1EE5': 'u',                                                                                                 // 2899\n    '\\u1E73': 'u',                                                                                                 // 2900\n    '\\u0173': 'u',                                                                                                 // 2901\n    '\\u1E77': 'u',                                                                                                 // 2902\n    '\\u1E75': 'u',                                                                                                 // 2903\n    '\\u0289': 'u',                                                                                                 // 2904\n    '\\u24E5': 'v',                                                                                                 // 2905\n    '\\uFF56': 'v',                                                                                                 // 2906\n    '\\u1E7D': 'v',                                                                                                 // 2907\n    '\\u1E7F': 'v',                                                                                                 // 2908\n    '\\u028B': 'v',                                                                                                 // 2909\n    '\\uA75F': 'v',                                                                                                 // 2910\n    '\\u028C': 'v',                                                                                                 // 2911\n    '\\uA761': 'vy',                                                                                                // 2912\n    '\\u24E6': 'w',                                                                                                 // 2913\n    '\\uFF57': 'w',                                                                                                 // 2914\n    '\\u1E81': 'w',                                                                                                 // 2915\n    '\\u1E83': 'w',                                                                                                 // 2916\n    '\\u0175': 'w',                                                                                                 // 2917\n    '\\u1E87': 'w',                                                                                                 // 2918\n    '\\u1E85': 'w',                                                                                                 // 2919\n    '\\u1E98': 'w',                                                                                                 // 2920\n    '\\u1E89': 'w',                                                                                                 // 2921\n    '\\u2C73': 'w',                                                                                                 // 2922\n    '\\u24E7': 'x',                                                                                                 // 2923\n    '\\uFF58': 'x',                                                                                                 // 2924\n    '\\u1E8B': 'x',                                                                                                 // 2925\n    '\\u1E8D': 'x',                                                                                                 // 2926\n    '\\u24E8': 'y',                                                                                                 // 2927\n    '\\uFF59': 'y',                                                                                                 // 2928\n    '\\u1EF3': 'y',                                                                                                 // 2929\n    '\\u00FD': 'y',                                                                                                 // 2930\n    '\\u0177': 'y',                                                                                                 // 2931\n    '\\u1EF9': 'y',                                                                                                 // 2932\n    '\\u0233': 'y',                                                                                                 // 2933\n    '\\u1E8F': 'y',                                                                                                 // 2934\n    '\\u00FF': 'y',                                                                                                 // 2935\n    '\\u1EF7': 'y',                                                                                                 // 2936\n    '\\u1E99': 'y',                                                                                                 // 2937\n    '\\u1EF5': 'y',                                                                                                 // 2938\n    '\\u01B4': 'y',                                                                                                 // 2939\n    '\\u024F': 'y',                                                                                                 // 2940\n    '\\u1EFF': 'y',                                                                                                 // 2941\n    '\\u24E9': 'z',                                                                                                 // 2942\n    '\\uFF5A': 'z',                                                                                                 // 2943\n    '\\u017A': 'z',                                                                                                 // 2944\n    '\\u1E91': 'z',                                                                                                 // 2945\n    '\\u017C': 'z',                                                                                                 // 2946\n    '\\u017E': 'z',                                                                                                 // 2947\n    '\\u1E93': 'z',                                                                                                 // 2948\n    '\\u1E95': 'z',                                                                                                 // 2949\n    '\\u01B6': 'z',                                                                                                 // 2950\n    '\\u0225': 'z',                                                                                                 // 2951\n    '\\u0240': 'z',                                                                                                 // 2952\n    '\\u2C6C': 'z',                                                                                                 // 2953\n    '\\uA763': 'z',                                                                                                 // 2954\n    '\\u0386': '\\u0391',                                                                                            // 2955\n    '\\u0388': '\\u0395',                                                                                            // 2956\n    '\\u0389': '\\u0397',                                                                                            // 2957\n    '\\u038A': '\\u0399',                                                                                            // 2958\n    '\\u03AA': '\\u0399',                                                                                            // 2959\n    '\\u038C': '\\u039F',                                                                                            // 2960\n    '\\u038E': '\\u03A5',                                                                                            // 2961\n    '\\u03AB': '\\u03A5',                                                                                            // 2962\n    '\\u038F': '\\u03A9',                                                                                            // 2963\n    '\\u03AC': '\\u03B1',                                                                                            // 2964\n    '\\u03AD': '\\u03B5',                                                                                            // 2965\n    '\\u03AE': '\\u03B7',                                                                                            // 2966\n    '\\u03AF': '\\u03B9',                                                                                            // 2967\n    '\\u03CA': '\\u03B9',                                                                                            // 2968\n    '\\u0390': '\\u03B9',                                                                                            // 2969\n    '\\u03CC': '\\u03BF',                                                                                            // 2970\n    '\\u03CD': '\\u03C5',                                                                                            // 2971\n    '\\u03CB': '\\u03C5',                                                                                            // 2972\n    '\\u03B0': '\\u03C5',                                                                                            // 2973\n    '\\u03C9': '\\u03C9',                                                                                            // 2974\n    '\\u03C2': '\\u03C3'                                                                                             // 2975\n  };                                                                                                               // 2976\n                                                                                                                   // 2977\n  return diacritics;                                                                                               // 2978\n});                                                                                                                // 2979\n                                                                                                                   // 2980\nS2.define('select2/data/base',[                                                                                    // 2981\n  '../utils'                                                                                                       // 2982\n], function (Utils) {                                                                                              // 2983\n  function BaseAdapter ($element, options) {                                                                       // 2984\n    BaseAdapter.__super__.constructor.call(this);                                                                  // 2985\n  }                                                                                                                // 2986\n                                                                                                                   // 2987\n  Utils.Extend(BaseAdapter, Utils.Observable);                                                                     // 2988\n                                                                                                                   // 2989\n  BaseAdapter.prototype.current = function (callback) {                                                            // 2990\n    throw new Error('The `current` method must be defined in child classes.');                                     // 2991\n  };                                                                                                               // 2992\n                                                                                                                   // 2993\n  BaseAdapter.prototype.query = function (params, callback) {                                                      // 2994\n    throw new Error('The `query` method must be defined in child classes.');                                       // 2995\n  };                                                                                                               // 2996\n                                                                                                                   // 2997\n  BaseAdapter.prototype.bind = function (container, $container) {                                                  // 2998\n    // Can be implemented in subclasses                                                                            // 2999\n  };                                                                                                               // 3000\n                                                                                                                   // 3001\n  BaseAdapter.prototype.destroy = function () {                                                                    // 3002\n    // Can be implemented in subclasses                                                                            // 3003\n  };                                                                                                               // 3004\n                                                                                                                   // 3005\n  BaseAdapter.prototype.generateResultId = function (container, data) {                                            // 3006\n    var id = container.id + '-result-';                                                                            // 3007\n                                                                                                                   // 3008\n    id += Utils.generateChars(4);                                                                                  // 3009\n                                                                                                                   // 3010\n    if (data.id != null) {                                                                                         // 3011\n      id += '-' + data.id.toString();                                                                              // 3012\n    } else {                                                                                                       // 3013\n      id += '-' + Utils.generateChars(4);                                                                          // 3014\n    }                                                                                                              // 3015\n    return id;                                                                                                     // 3016\n  };                                                                                                               // 3017\n                                                                                                                   // 3018\n  return BaseAdapter;                                                                                              // 3019\n});                                                                                                                // 3020\n                                                                                                                   // 3021\nS2.define('select2/data/select',[                                                                                  // 3022\n  './base',                                                                                                        // 3023\n  '../utils',                                                                                                      // 3024\n  'jquery'                                                                                                         // 3025\n], function (BaseAdapter, Utils, $) {                                                                              // 3026\n  function SelectAdapter ($element, options) {                                                                     // 3027\n    this.$element = $element;                                                                                      // 3028\n    this.options = options;                                                                                        // 3029\n                                                                                                                   // 3030\n    SelectAdapter.__super__.constructor.call(this);                                                                // 3031\n  }                                                                                                                // 3032\n                                                                                                                   // 3033\n  Utils.Extend(SelectAdapter, BaseAdapter);                                                                        // 3034\n                                                                                                                   // 3035\n  SelectAdapter.prototype.current = function (callback) {                                                          // 3036\n    var data = [];                                                                                                 // 3037\n    var self = this;                                                                                               // 3038\n                                                                                                                   // 3039\n    this.$element.find(':selected').each(function () {                                                             // 3040\n      var $option = $(this);                                                                                       // 3041\n                                                                                                                   // 3042\n      var option = self.item($option);                                                                             // 3043\n                                                                                                                   // 3044\n      data.push(option);                                                                                           // 3045\n    });                                                                                                            // 3046\n                                                                                                                   // 3047\n    callback(data);                                                                                                // 3048\n  };                                                                                                               // 3049\n                                                                                                                   // 3050\n  SelectAdapter.prototype.select = function (data) {                                                               // 3051\n    var self = this;                                                                                               // 3052\n                                                                                                                   // 3053\n    data.selected = true;                                                                                          // 3054\n                                                                                                                   // 3055\n    // If data.element is a DOM node, use it instead                                                               // 3056\n    if ($(data.element).is('option')) {                                                                            // 3057\n      data.element.selected = true;                                                                                // 3058\n                                                                                                                   // 3059\n      this.$element.trigger('change');                                                                             // 3060\n                                                                                                                   // 3061\n      return;                                                                                                      // 3062\n    }                                                                                                              // 3063\n                                                                                                                   // 3064\n    if (this.$element.prop('multiple')) {                                                                          // 3065\n      this.current(function (currentData) {                                                                        // 3066\n        var val = [];                                                                                              // 3067\n                                                                                                                   // 3068\n        data = [data];                                                                                             // 3069\n        data.push.apply(data, currentData);                                                                        // 3070\n                                                                                                                   // 3071\n        for (var d = 0; d < data.length; d++) {                                                                    // 3072\n          var id = data[d].id;                                                                                     // 3073\n                                                                                                                   // 3074\n          if ($.inArray(id, val) === -1) {                                                                         // 3075\n            val.push(id);                                                                                          // 3076\n          }                                                                                                        // 3077\n        }                                                                                                          // 3078\n                                                                                                                   // 3079\n        self.$element.val(val);                                                                                    // 3080\n        self.$element.trigger('change');                                                                           // 3081\n      });                                                                                                          // 3082\n    } else {                                                                                                       // 3083\n      var val = data.id;                                                                                           // 3084\n                                                                                                                   // 3085\n      this.$element.val(val);                                                                                      // 3086\n      this.$element.trigger('change');                                                                             // 3087\n    }                                                                                                              // 3088\n  };                                                                                                               // 3089\n                                                                                                                   // 3090\n  SelectAdapter.prototype.unselect = function (data) {                                                             // 3091\n    var self = this;                                                                                               // 3092\n                                                                                                                   // 3093\n    if (!this.$element.prop('multiple')) {                                                                         // 3094\n      return;                                                                                                      // 3095\n    }                                                                                                              // 3096\n                                                                                                                   // 3097\n    data.selected = false;                                                                                         // 3098\n                                                                                                                   // 3099\n    if ($(data.element).is('option')) {                                                                            // 3100\n      data.element.selected = false;                                                                               // 3101\n                                                                                                                   // 3102\n      this.$element.trigger('change');                                                                             // 3103\n                                                                                                                   // 3104\n      return;                                                                                                      // 3105\n    }                                                                                                              // 3106\n                                                                                                                   // 3107\n    this.current(function (currentData) {                                                                          // 3108\n      var val = [];                                                                                                // 3109\n                                                                                                                   // 3110\n      for (var d = 0; d < currentData.length; d++) {                                                               // 3111\n        var id = currentData[d].id;                                                                                // 3112\n                                                                                                                   // 3113\n        if (id !== data.id && $.inArray(id, val) === -1) {                                                         // 3114\n          val.push(id);                                                                                            // 3115\n        }                                                                                                          // 3116\n      }                                                                                                            // 3117\n                                                                                                                   // 3118\n      self.$element.val(val);                                                                                      // 3119\n                                                                                                                   // 3120\n      self.$element.trigger('change');                                                                             // 3121\n    });                                                                                                            // 3122\n  };                                                                                                               // 3123\n                                                                                                                   // 3124\n  SelectAdapter.prototype.bind = function (container, $container) {                                                // 3125\n    var self = this;                                                                                               // 3126\n                                                                                                                   // 3127\n    this.container = container;                                                                                    // 3128\n                                                                                                                   // 3129\n    container.on('select', function (params) {                                                                     // 3130\n      self.select(params.data);                                                                                    // 3131\n    });                                                                                                            // 3132\n                                                                                                                   // 3133\n    container.on('unselect', function (params) {                                                                   // 3134\n      self.unselect(params.data);                                                                                  // 3135\n    });                                                                                                            // 3136\n  };                                                                                                               // 3137\n                                                                                                                   // 3138\n  SelectAdapter.prototype.destroy = function () {                                                                  // 3139\n    // Remove anything added to child elements                                                                     // 3140\n    this.$element.find('*').each(function () {                                                                     // 3141\n      // Remove any custom data set by Select2                                                                     // 3142\n      $.removeData(this, 'data');                                                                                  // 3143\n    });                                                                                                            // 3144\n  };                                                                                                               // 3145\n                                                                                                                   // 3146\n  SelectAdapter.prototype.query = function (params, callback) {                                                    // 3147\n    var data = [];                                                                                                 // 3148\n    var self = this;                                                                                               // 3149\n                                                                                                                   // 3150\n    var $options = this.$element.children();                                                                       // 3151\n                                                                                                                   // 3152\n    $options.each(function () {                                                                                    // 3153\n      var $option = $(this);                                                                                       // 3154\n                                                                                                                   // 3155\n      if (!$option.is('option') && !$option.is('optgroup')) {                                                      // 3156\n        return;                                                                                                    // 3157\n      }                                                                                                            // 3158\n                                                                                                                   // 3159\n      var option = self.item($option);                                                                             // 3160\n                                                                                                                   // 3161\n      var matches = self.matches(params, option);                                                                  // 3162\n                                                                                                                   // 3163\n      if (matches !== null) {                                                                                      // 3164\n        data.push(matches);                                                                                        // 3165\n      }                                                                                                            // 3166\n    });                                                                                                            // 3167\n                                                                                                                   // 3168\n    callback({                                                                                                     // 3169\n      results: data                                                                                                // 3170\n    });                                                                                                            // 3171\n  };                                                                                                               // 3172\n                                                                                                                   // 3173\n  SelectAdapter.prototype.addOptions = function ($options) {                                                       // 3174\n    Utils.appendMany(this.$element, $options);                                                                     // 3175\n  };                                                                                                               // 3176\n                                                                                                                   // 3177\n  SelectAdapter.prototype.option = function (data) {                                                               // 3178\n    var option;                                                                                                    // 3179\n                                                                                                                   // 3180\n    if (data.children) {                                                                                           // 3181\n      option = document.createElement('optgroup');                                                                 // 3182\n      option.label = data.text;                                                                                    // 3183\n    } else {                                                                                                       // 3184\n      option = document.createElement('option');                                                                   // 3185\n                                                                                                                   // 3186\n      if (option.textContent !== undefined) {                                                                      // 3187\n        option.textContent = data.text;                                                                            // 3188\n      } else {                                                                                                     // 3189\n        option.innerText = data.text;                                                                              // 3190\n      }                                                                                                            // 3191\n    }                                                                                                              // 3192\n                                                                                                                   // 3193\n    if (data.id) {                                                                                                 // 3194\n      option.value = data.id;                                                                                      // 3195\n    }                                                                                                              // 3196\n                                                                                                                   // 3197\n    if (data.disabled) {                                                                                           // 3198\n      option.disabled = true;                                                                                      // 3199\n    }                                                                                                              // 3200\n                                                                                                                   // 3201\n    if (data.selected) {                                                                                           // 3202\n      option.selected = true;                                                                                      // 3203\n    }                                                                                                              // 3204\n                                                                                                                   // 3205\n    if (data.title) {                                                                                              // 3206\n      option.title = data.title;                                                                                   // 3207\n    }                                                                                                              // 3208\n                                                                                                                   // 3209\n    var $option = $(option);                                                                                       // 3210\n                                                                                                                   // 3211\n    var normalizedData = this._normalizeItem(data);                                                                // 3212\n    normalizedData.element = option;                                                                               // 3213\n                                                                                                                   // 3214\n    // Override the option's data with the combined data                                                           // 3215\n    $.data(option, 'data', normalizedData);                                                                        // 3216\n                                                                                                                   // 3217\n    return $option;                                                                                                // 3218\n  };                                                                                                               // 3219\n                                                                                                                   // 3220\n  SelectAdapter.prototype.item = function ($option) {                                                              // 3221\n    var data = {};                                                                                                 // 3222\n                                                                                                                   // 3223\n    data = $.data($option[0], 'data');                                                                             // 3224\n                                                                                                                   // 3225\n    if (data != null) {                                                                                            // 3226\n      return data;                                                                                                 // 3227\n    }                                                                                                              // 3228\n                                                                                                                   // 3229\n    if ($option.is('option')) {                                                                                    // 3230\n      data = {                                                                                                     // 3231\n        id: $option.val(),                                                                                         // 3232\n        text: $option.text(),                                                                                      // 3233\n        disabled: $option.prop('disabled'),                                                                        // 3234\n        selected: $option.prop('selected'),                                                                        // 3235\n        title: $option.prop('title')                                                                               // 3236\n      };                                                                                                           // 3237\n    } else if ($option.is('optgroup')) {                                                                           // 3238\n      data = {                                                                                                     // 3239\n        text: $option.prop('label'),                                                                               // 3240\n        children: [],                                                                                              // 3241\n        title: $option.prop('title')                                                                               // 3242\n      };                                                                                                           // 3243\n                                                                                                                   // 3244\n      var $children = $option.children('option');                                                                  // 3245\n      var children = [];                                                                                           // 3246\n                                                                                                                   // 3247\n      for (var c = 0; c < $children.length; c++) {                                                                 // 3248\n        var $child = $($children[c]);                                                                              // 3249\n                                                                                                                   // 3250\n        var child = this.item($child);                                                                             // 3251\n                                                                                                                   // 3252\n        children.push(child);                                                                                      // 3253\n      }                                                                                                            // 3254\n                                                                                                                   // 3255\n      data.children = children;                                                                                    // 3256\n    }                                                                                                              // 3257\n                                                                                                                   // 3258\n    data = this._normalizeItem(data);                                                                              // 3259\n    data.element = $option[0];                                                                                     // 3260\n                                                                                                                   // 3261\n    $.data($option[0], 'data', data);                                                                              // 3262\n                                                                                                                   // 3263\n    return data;                                                                                                   // 3264\n  };                                                                                                               // 3265\n                                                                                                                   // 3266\n  SelectAdapter.prototype._normalizeItem = function (item) {                                                       // 3267\n    if (!$.isPlainObject(item)) {                                                                                  // 3268\n      item = {                                                                                                     // 3269\n        id: item,                                                                                                  // 3270\n        text: item                                                                                                 // 3271\n      };                                                                                                           // 3272\n    }                                                                                                              // 3273\n                                                                                                                   // 3274\n    item = $.extend({}, {                                                                                          // 3275\n      text: ''                                                                                                     // 3276\n    }, item);                                                                                                      // 3277\n                                                                                                                   // 3278\n    var defaults = {                                                                                               // 3279\n      selected: false,                                                                                             // 3280\n      disabled: false                                                                                              // 3281\n    };                                                                                                             // 3282\n                                                                                                                   // 3283\n    if (item.id != null) {                                                                                         // 3284\n      item.id = item.id.toString();                                                                                // 3285\n    }                                                                                                              // 3286\n                                                                                                                   // 3287\n    if (item.text != null) {                                                                                       // 3288\n      item.text = item.text.toString();                                                                            // 3289\n    }                                                                                                              // 3290\n                                                                                                                   // 3291\n    if (item._resultId == null && item.id && this.container != null) {                                             // 3292\n      item._resultId = this.generateResultId(this.container, item);                                                // 3293\n    }                                                                                                              // 3294\n                                                                                                                   // 3295\n    return $.extend({}, defaults, item);                                                                           // 3296\n  };                                                                                                               // 3297\n                                                                                                                   // 3298\n  SelectAdapter.prototype.matches = function (params, data) {                                                      // 3299\n    var matcher = this.options.get('matcher');                                                                     // 3300\n                                                                                                                   // 3301\n    return matcher(params, data);                                                                                  // 3302\n  };                                                                                                               // 3303\n                                                                                                                   // 3304\n  return SelectAdapter;                                                                                            // 3305\n});                                                                                                                // 3306\n                                                                                                                   // 3307\nS2.define('select2/data/array',[                                                                                   // 3308\n  './select',                                                                                                      // 3309\n  '../utils',                                                                                                      // 3310\n  'jquery'                                                                                                         // 3311\n], function (SelectAdapter, Utils, $) {                                                                            // 3312\n  function ArrayAdapter ($element, options) {                                                                      // 3313\n    var data = options.get('data') || [];                                                                          // 3314\n                                                                                                                   // 3315\n    ArrayAdapter.__super__.constructor.call(this, $element, options);                                              // 3316\n                                                                                                                   // 3317\n    this.addOptions(this.convertToOptions(data));                                                                  // 3318\n  }                                                                                                                // 3319\n                                                                                                                   // 3320\n  Utils.Extend(ArrayAdapter, SelectAdapter);                                                                       // 3321\n                                                                                                                   // 3322\n  ArrayAdapter.prototype.select = function (data) {                                                                // 3323\n    var $option = this.$element.find('option').filter(function (i, elm) {                                          // 3324\n      return elm.value == data.id.toString();                                                                      // 3325\n    });                                                                                                            // 3326\n                                                                                                                   // 3327\n    if ($option.length === 0) {                                                                                    // 3328\n      $option = this.option(data);                                                                                 // 3329\n                                                                                                                   // 3330\n      this.addOptions($option);                                                                                    // 3331\n    }                                                                                                              // 3332\n                                                                                                                   // 3333\n    ArrayAdapter.__super__.select.call(this, data);                                                                // 3334\n  };                                                                                                               // 3335\n                                                                                                                   // 3336\n  ArrayAdapter.prototype.convertToOptions = function (data) {                                                      // 3337\n    var self = this;                                                                                               // 3338\n                                                                                                                   // 3339\n    var $existing = this.$element.find('option');                                                                  // 3340\n    var existingIds = $existing.map(function () {                                                                  // 3341\n      return self.item($(this)).id;                                                                                // 3342\n    }).get();                                                                                                      // 3343\n                                                                                                                   // 3344\n    var $options = [];                                                                                             // 3345\n                                                                                                                   // 3346\n    // Filter out all items except for the one passed in the argument                                              // 3347\n    function onlyItem (item) {                                                                                     // 3348\n      return function () {                                                                                         // 3349\n        return $(this).val() == item.id;                                                                           // 3350\n      };                                                                                                           // 3351\n    }                                                                                                              // 3352\n                                                                                                                   // 3353\n    for (var d = 0; d < data.length; d++) {                                                                        // 3354\n      var item = this._normalizeItem(data[d]);                                                                     // 3355\n                                                                                                                   // 3356\n      // Skip items which were pre-loaded, only merge the data                                                     // 3357\n      if ($.inArray(item.id, existingIds) >= 0) {                                                                  // 3358\n        var $existingOption = $existing.filter(onlyItem(item));                                                    // 3359\n                                                                                                                   // 3360\n        var existingData = this.item($existingOption);                                                             // 3361\n        var newData = $.extend(true, {}, item, existingData);                                                      // 3362\n                                                                                                                   // 3363\n        var $newOption = this.option(newData);                                                                     // 3364\n                                                                                                                   // 3365\n        $existingOption.replaceWith($newOption);                                                                   // 3366\n                                                                                                                   // 3367\n        continue;                                                                                                  // 3368\n      }                                                                                                            // 3369\n                                                                                                                   // 3370\n      var $option = this.option(item);                                                                             // 3371\n                                                                                                                   // 3372\n      if (item.children) {                                                                                         // 3373\n        var $children = this.convertToOptions(item.children);                                                      // 3374\n                                                                                                                   // 3375\n        Utils.appendMany($option, $children);                                                                      // 3376\n      }                                                                                                            // 3377\n                                                                                                                   // 3378\n      $options.push($option);                                                                                      // 3379\n    }                                                                                                              // 3380\n                                                                                                                   // 3381\n    return $options;                                                                                               // 3382\n  };                                                                                                               // 3383\n                                                                                                                   // 3384\n  return ArrayAdapter;                                                                                             // 3385\n});                                                                                                                // 3386\n                                                                                                                   // 3387\nS2.define('select2/data/ajax',[                                                                                    // 3388\n  './array',                                                                                                       // 3389\n  '../utils',                                                                                                      // 3390\n  'jquery'                                                                                                         // 3391\n], function (ArrayAdapter, Utils, $) {                                                                             // 3392\n  function AjaxAdapter ($element, options) {                                                                       // 3393\n    this.ajaxOptions = this._applyDefaults(options.get('ajax'));                                                   // 3394\n                                                                                                                   // 3395\n    if (this.ajaxOptions.processResults != null) {                                                                 // 3396\n      this.processResults = this.ajaxOptions.processResults;                                                       // 3397\n    }                                                                                                              // 3398\n                                                                                                                   // 3399\n    AjaxAdapter.__super__.constructor.call(this, $element, options);                                               // 3400\n  }                                                                                                                // 3401\n                                                                                                                   // 3402\n  Utils.Extend(AjaxAdapter, ArrayAdapter);                                                                         // 3403\n                                                                                                                   // 3404\n  AjaxAdapter.prototype._applyDefaults = function (options) {                                                      // 3405\n    var defaults = {                                                                                               // 3406\n      data: function (params) {                                                                                    // 3407\n        return $.extend({}, params, {                                                                              // 3408\n          q: params.term                                                                                           // 3409\n        });                                                                                                        // 3410\n      },                                                                                                           // 3411\n      transport: function (params, success, failure) {                                                             // 3412\n        var $request = $.ajax(params);                                                                             // 3413\n                                                                                                                   // 3414\n        $request.then(success);                                                                                    // 3415\n        $request.fail(failure);                                                                                    // 3416\n                                                                                                                   // 3417\n        return $request;                                                                                           // 3418\n      }                                                                                                            // 3419\n    };                                                                                                             // 3420\n                                                                                                                   // 3421\n    return $.extend({}, defaults, options, true);                                                                  // 3422\n  };                                                                                                               // 3423\n                                                                                                                   // 3424\n  AjaxAdapter.prototype.processResults = function (results) {                                                      // 3425\n    return results;                                                                                                // 3426\n  };                                                                                                               // 3427\n                                                                                                                   // 3428\n  AjaxAdapter.prototype.query = function (params, callback) {                                                      // 3429\n    var matches = [];                                                                                              // 3430\n    var self = this;                                                                                               // 3431\n                                                                                                                   // 3432\n    if (this._request != null) {                                                                                   // 3433\n      // JSONP requests cannot always be aborted                                                                   // 3434\n      if ($.isFunction(this._request.abort)) {                                                                     // 3435\n        this._request.abort();                                                                                     // 3436\n      }                                                                                                            // 3437\n                                                                                                                   // 3438\n      this._request = null;                                                                                        // 3439\n    }                                                                                                              // 3440\n                                                                                                                   // 3441\n    var options = $.extend({                                                                                       // 3442\n      type: 'GET'                                                                                                  // 3443\n    }, this.ajaxOptions);                                                                                          // 3444\n                                                                                                                   // 3445\n    if (typeof options.url === 'function') {                                                                       // 3446\n      options.url = options.url.call(this.$element, params);                                                       // 3447\n    }                                                                                                              // 3448\n                                                                                                                   // 3449\n    if (typeof options.data === 'function') {                                                                      // 3450\n      options.data = options.data.call(this.$element, params);                                                     // 3451\n    }                                                                                                              // 3452\n                                                                                                                   // 3453\n    function request () {                                                                                          // 3454\n      var $request = options.transport(options, function (data) {                                                  // 3455\n        var results = self.processResults(data, params);                                                           // 3456\n                                                                                                                   // 3457\n        if (self.options.get('debug') && window.console && console.error) {                                        // 3458\n          // Check to make sure that the response included a `results` key.                                        // 3459\n          if (!results || !results.results || !$.isArray(results.results)) {                                       // 3460\n            console.error(                                                                                         // 3461\n              'Select2: The AJAX results did not return an array in the ' +                                        // 3462\n              '`results` key of the response.'                                                                     // 3463\n            );                                                                                                     // 3464\n          }                                                                                                        // 3465\n        }                                                                                                          // 3466\n                                                                                                                   // 3467\n        callback(results);                                                                                         // 3468\n      }, function () {                                                                                             // 3469\n        // Attempt to detect if a request was aborted                                                              // 3470\n        // Only works if the transport exposes a status property                                                   // 3471\n        if ($request.status && $request.status === '0') {                                                          // 3472\n          return;                                                                                                  // 3473\n        }                                                                                                          // 3474\n                                                                                                                   // 3475\n        self.trigger('results:message', {                                                                          // 3476\n          message: 'errorLoading'                                                                                  // 3477\n        });                                                                                                        // 3478\n      });                                                                                                          // 3479\n                                                                                                                   // 3480\n      self._request = $request;                                                                                    // 3481\n    }                                                                                                              // 3482\n                                                                                                                   // 3483\n    if (this.ajaxOptions.delay && params.term != null) {                                                           // 3484\n      if (this._queryTimeout) {                                                                                    // 3485\n        window.clearTimeout(this._queryTimeout);                                                                   // 3486\n      }                                                                                                            // 3487\n                                                                                                                   // 3488\n      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);                                     // 3489\n    } else {                                                                                                       // 3490\n      request();                                                                                                   // 3491\n    }                                                                                                              // 3492\n  };                                                                                                               // 3493\n                                                                                                                   // 3494\n  return AjaxAdapter;                                                                                              // 3495\n});                                                                                                                // 3496\n                                                                                                                   // 3497\nS2.define('select2/data/tags',[                                                                                    // 3498\n  'jquery'                                                                                                         // 3499\n], function ($) {                                                                                                  // 3500\n  function Tags (decorated, $element, options) {                                                                   // 3501\n    var tags = options.get('tags');                                                                                // 3502\n                                                                                                                   // 3503\n    var createTag = options.get('createTag');                                                                      // 3504\n                                                                                                                   // 3505\n    if (createTag !== undefined) {                                                                                 // 3506\n      this.createTag = createTag;                                                                                  // 3507\n    }                                                                                                              // 3508\n                                                                                                                   // 3509\n    var insertTag = options.get('insertTag');                                                                      // 3510\n                                                                                                                   // 3511\n    if (insertTag !== undefined) {                                                                                 // 3512\n        this.insertTag = insertTag;                                                                                // 3513\n    }                                                                                                              // 3514\n                                                                                                                   // 3515\n    decorated.call(this, $element, options);                                                                       // 3516\n                                                                                                                   // 3517\n    if ($.isArray(tags)) {                                                                                         // 3518\n      for (var t = 0; t < tags.length; t++) {                                                                      // 3519\n        var tag = tags[t];                                                                                         // 3520\n        var item = this._normalizeItem(tag);                                                                       // 3521\n                                                                                                                   // 3522\n        var $option = this.option(item);                                                                           // 3523\n                                                                                                                   // 3524\n        this.$element.append($option);                                                                             // 3525\n      }                                                                                                            // 3526\n    }                                                                                                              // 3527\n  }                                                                                                                // 3528\n                                                                                                                   // 3529\n  Tags.prototype.query = function (decorated, params, callback) {                                                  // 3530\n    var self = this;                                                                                               // 3531\n                                                                                                                   // 3532\n    this._removeOldTags();                                                                                         // 3533\n                                                                                                                   // 3534\n    if (params.term == null || params.page != null) {                                                              // 3535\n      decorated.call(this, params, callback);                                                                      // 3536\n      return;                                                                                                      // 3537\n    }                                                                                                              // 3538\n                                                                                                                   // 3539\n    function wrapper (obj, child) {                                                                                // 3540\n      var data = obj.results;                                                                                      // 3541\n                                                                                                                   // 3542\n      for (var i = 0; i < data.length; i++) {                                                                      // 3543\n        var option = data[i];                                                                                      // 3544\n                                                                                                                   // 3545\n        var checkChildren = (                                                                                      // 3546\n          option.children != null &&                                                                               // 3547\n          !wrapper({                                                                                               // 3548\n            results: option.children                                                                               // 3549\n          }, true)                                                                                                 // 3550\n        );                                                                                                         // 3551\n                                                                                                                   // 3552\n        var checkText = option.text === params.term;                                                               // 3553\n                                                                                                                   // 3554\n        if (checkText || checkChildren) {                                                                          // 3555\n          if (child) {                                                                                             // 3556\n            return false;                                                                                          // 3557\n          }                                                                                                        // 3558\n                                                                                                                   // 3559\n          obj.data = data;                                                                                         // 3560\n          callback(obj);                                                                                           // 3561\n                                                                                                                   // 3562\n          return;                                                                                                  // 3563\n        }                                                                                                          // 3564\n      }                                                                                                            // 3565\n                                                                                                                   // 3566\n      if (child) {                                                                                                 // 3567\n        return true;                                                                                               // 3568\n      }                                                                                                            // 3569\n                                                                                                                   // 3570\n      var tag = self.createTag(params);                                                                            // 3571\n                                                                                                                   // 3572\n      if (tag != null) {                                                                                           // 3573\n        var $option = self.option(tag);                                                                            // 3574\n        $option.attr('data-select2-tag', true);                                                                    // 3575\n                                                                                                                   // 3576\n        self.addOptions([$option]);                                                                                // 3577\n                                                                                                                   // 3578\n        self.insertTag(data, tag);                                                                                 // 3579\n      }                                                                                                            // 3580\n                                                                                                                   // 3581\n      obj.results = data;                                                                                          // 3582\n                                                                                                                   // 3583\n      callback(obj);                                                                                               // 3584\n    }                                                                                                              // 3585\n                                                                                                                   // 3586\n    decorated.call(this, params, wrapper);                                                                         // 3587\n  };                                                                                                               // 3588\n                                                                                                                   // 3589\n  Tags.prototype.createTag = function (decorated, params) {                                                        // 3590\n    var term = $.trim(params.term);                                                                                // 3591\n                                                                                                                   // 3592\n    if (term === '') {                                                                                             // 3593\n      return null;                                                                                                 // 3594\n    }                                                                                                              // 3595\n                                                                                                                   // 3596\n    return {                                                                                                       // 3597\n      id: term,                                                                                                    // 3598\n      text: term                                                                                                   // 3599\n    };                                                                                                             // 3600\n  };                                                                                                               // 3601\n                                                                                                                   // 3602\n  Tags.prototype.insertTag = function (_, data, tag) {                                                             // 3603\n    data.unshift(tag);                                                                                             // 3604\n  };                                                                                                               // 3605\n                                                                                                                   // 3606\n  Tags.prototype._removeOldTags = function (_) {                                                                   // 3607\n    var tag = this._lastTag;                                                                                       // 3608\n                                                                                                                   // 3609\n    var $options = this.$element.find('option[data-select2-tag]');                                                 // 3610\n                                                                                                                   // 3611\n    $options.each(function () {                                                                                    // 3612\n      if (this.selected) {                                                                                         // 3613\n        return;                                                                                                    // 3614\n      }                                                                                                            // 3615\n                                                                                                                   // 3616\n      $(this).remove();                                                                                            // 3617\n    });                                                                                                            // 3618\n  };                                                                                                               // 3619\n                                                                                                                   // 3620\n  return Tags;                                                                                                     // 3621\n});                                                                                                                // 3622\n                                                                                                                   // 3623\nS2.define('select2/data/tokenizer',[                                                                               // 3624\n  'jquery'                                                                                                         // 3625\n], function ($) {                                                                                                  // 3626\n  function Tokenizer (decorated, $element, options) {                                                              // 3627\n    var tokenizer = options.get('tokenizer');                                                                      // 3628\n                                                                                                                   // 3629\n    if (tokenizer !== undefined) {                                                                                 // 3630\n      this.tokenizer = tokenizer;                                                                                  // 3631\n    }                                                                                                              // 3632\n                                                                                                                   // 3633\n    decorated.call(this, $element, options);                                                                       // 3634\n  }                                                                                                                // 3635\n                                                                                                                   // 3636\n  Tokenizer.prototype.bind = function (decorated, container, $container) {                                         // 3637\n    decorated.call(this, container, $container);                                                                   // 3638\n                                                                                                                   // 3639\n    this.$search =  container.dropdown.$search || container.selection.$search ||                                   // 3640\n      $container.find('.select2-search__field');                                                                   // 3641\n  };                                                                                                               // 3642\n                                                                                                                   // 3643\n  Tokenizer.prototype.query = function (decorated, params, callback) {                                             // 3644\n    var self = this;                                                                                               // 3645\n                                                                                                                   // 3646\n    function createAndSelect (data) {                                                                              // 3647\n      // Normalize the data object so we can use it for checks                                                     // 3648\n      var item = self._normalizeItem(data);                                                                        // 3649\n                                                                                                                   // 3650\n      // Check if the data object already exists as a tag                                                          // 3651\n      // Select it if it doesn't                                                                                   // 3652\n      var $existingOptions = self.$element.find('option').filter(function () {                                     // 3653\n        return $(this).val() === item.id;                                                                          // 3654\n      });                                                                                                          // 3655\n                                                                                                                   // 3656\n      // If an existing option wasn't found for it, create the option                                              // 3657\n      if (!$existingOptions.length) {                                                                              // 3658\n        var $option = self.option(item);                                                                           // 3659\n        $option.attr('data-select2-tag', true);                                                                    // 3660\n                                                                                                                   // 3661\n        self._removeOldTags();                                                                                     // 3662\n        self.addOptions([$option]);                                                                                // 3663\n      }                                                                                                            // 3664\n                                                                                                                   // 3665\n      // Select the item, now that we know there is an option for it                                               // 3666\n      select(item);                                                                                                // 3667\n    }                                                                                                              // 3668\n                                                                                                                   // 3669\n    function select (data) {                                                                                       // 3670\n      self.trigger('select', {                                                                                     // 3671\n        data: data                                                                                                 // 3672\n      });                                                                                                          // 3673\n    }                                                                                                              // 3674\n                                                                                                                   // 3675\n    params.term = params.term || '';                                                                               // 3676\n                                                                                                                   // 3677\n    var tokenData = this.tokenizer(params, this.options, createAndSelect);                                         // 3678\n                                                                                                                   // 3679\n    if (tokenData.term !== params.term) {                                                                          // 3680\n      // Replace the search term if we have the search box                                                         // 3681\n      if (this.$search.length) {                                                                                   // 3682\n        this.$search.val(tokenData.term);                                                                          // 3683\n        this.$search.focus();                                                                                      // 3684\n      }                                                                                                            // 3685\n                                                                                                                   // 3686\n      params.term = tokenData.term;                                                                                // 3687\n    }                                                                                                              // 3688\n                                                                                                                   // 3689\n    decorated.call(this, params, callback);                                                                        // 3690\n  };                                                                                                               // 3691\n                                                                                                                   // 3692\n  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {                                        // 3693\n    var separators = options.get('tokenSeparators') || [];                                                         // 3694\n    var term = params.term;                                                                                        // 3695\n    var i = 0;                                                                                                     // 3696\n                                                                                                                   // 3697\n    var createTag = this.createTag || function (params) {                                                          // 3698\n      return {                                                                                                     // 3699\n        id: params.term,                                                                                           // 3700\n        text: params.term                                                                                          // 3701\n      };                                                                                                           // 3702\n    };                                                                                                             // 3703\n                                                                                                                   // 3704\n    while (i < term.length) {                                                                                      // 3705\n      var termChar = term[i];                                                                                      // 3706\n                                                                                                                   // 3707\n      if ($.inArray(termChar, separators) === -1) {                                                                // 3708\n        i++;                                                                                                       // 3709\n                                                                                                                   // 3710\n        continue;                                                                                                  // 3711\n      }                                                                                                            // 3712\n                                                                                                                   // 3713\n      var part = term.substr(0, i);                                                                                // 3714\n      var partParams = $.extend({}, params, {                                                                      // 3715\n        term: part                                                                                                 // 3716\n      });                                                                                                          // 3717\n                                                                                                                   // 3718\n      var data = createTag(partParams);                                                                            // 3719\n                                                                                                                   // 3720\n      if (data == null) {                                                                                          // 3721\n        i++;                                                                                                       // 3722\n        continue;                                                                                                  // 3723\n      }                                                                                                            // 3724\n                                                                                                                   // 3725\n      callback(data);                                                                                              // 3726\n                                                                                                                   // 3727\n      // Reset the term to not include the tokenized portion                                                       // 3728\n      term = term.substr(i + 1) || '';                                                                             // 3729\n      i = 0;                                                                                                       // 3730\n    }                                                                                                              // 3731\n                                                                                                                   // 3732\n    return {                                                                                                       // 3733\n      term: term                                                                                                   // 3734\n    };                                                                                                             // 3735\n  };                                                                                                               // 3736\n                                                                                                                   // 3737\n  return Tokenizer;                                                                                                // 3738\n});                                                                                                                // 3739\n                                                                                                                   // 3740\nS2.define('select2/data/minimumInputLength',[                                                                      // 3741\n                                                                                                                   // 3742\n], function () {                                                                                                   // 3743\n  function MinimumInputLength (decorated, $e, options) {                                                           // 3744\n    this.minimumInputLength = options.get('minimumInputLength');                                                   // 3745\n                                                                                                                   // 3746\n    decorated.call(this, $e, options);                                                                             // 3747\n  }                                                                                                                // 3748\n                                                                                                                   // 3749\n  MinimumInputLength.prototype.query = function (decorated, params, callback) {                                    // 3750\n    params.term = params.term || '';                                                                               // 3751\n                                                                                                                   // 3752\n    if (params.term.length < this.minimumInputLength) {                                                            // 3753\n      this.trigger('results:message', {                                                                            // 3754\n        message: 'inputTooShort',                                                                                  // 3755\n        args: {                                                                                                    // 3756\n          minimum: this.minimumInputLength,                                                                        // 3757\n          input: params.term,                                                                                      // 3758\n          params: params                                                                                           // 3759\n        }                                                                                                          // 3760\n      });                                                                                                          // 3761\n                                                                                                                   // 3762\n      return;                                                                                                      // 3763\n    }                                                                                                              // 3764\n                                                                                                                   // 3765\n    decorated.call(this, params, callback);                                                                        // 3766\n  };                                                                                                               // 3767\n                                                                                                                   // 3768\n  return MinimumInputLength;                                                                                       // 3769\n});                                                                                                                // 3770\n                                                                                                                   // 3771\nS2.define('select2/data/maximumInputLength',[                                                                      // 3772\n                                                                                                                   // 3773\n], function () {                                                                                                   // 3774\n  function MaximumInputLength (decorated, $e, options) {                                                           // 3775\n    this.maximumInputLength = options.get('maximumInputLength');                                                   // 3776\n                                                                                                                   // 3777\n    decorated.call(this, $e, options);                                                                             // 3778\n  }                                                                                                                // 3779\n                                                                                                                   // 3780\n  MaximumInputLength.prototype.query = function (decorated, params, callback) {                                    // 3781\n    params.term = params.term || '';                                                                               // 3782\n                                                                                                                   // 3783\n    if (this.maximumInputLength > 0 &&                                                                             // 3784\n        params.term.length > this.maximumInputLength) {                                                            // 3785\n      this.trigger('results:message', {                                                                            // 3786\n        message: 'inputTooLong',                                                                                   // 3787\n        args: {                                                                                                    // 3788\n          maximum: this.maximumInputLength,                                                                        // 3789\n          input: params.term,                                                                                      // 3790\n          params: params                                                                                           // 3791\n        }                                                                                                          // 3792\n      });                                                                                                          // 3793\n                                                                                                                   // 3794\n      return;                                                                                                      // 3795\n    }                                                                                                              // 3796\n                                                                                                                   // 3797\n    decorated.call(this, params, callback);                                                                        // 3798\n  };                                                                                                               // 3799\n                                                                                                                   // 3800\n  return MaximumInputLength;                                                                                       // 3801\n});                                                                                                                // 3802\n                                                                                                                   // 3803\nS2.define('select2/data/maximumSelectionLength',[                                                                  // 3804\n                                                                                                                   // 3805\n], function (){                                                                                                    // 3806\n  function MaximumSelectionLength (decorated, $e, options) {                                                       // 3807\n    this.maximumSelectionLength = options.get('maximumSelectionLength');                                           // 3808\n                                                                                                                   // 3809\n    decorated.call(this, $e, options);                                                                             // 3810\n  }                                                                                                                // 3811\n                                                                                                                   // 3812\n  MaximumSelectionLength.prototype.query =                                                                         // 3813\n    function (decorated, params, callback) {                                                                       // 3814\n      var self = this;                                                                                             // 3815\n                                                                                                                   // 3816\n      this.current(function (currentData) {                                                                        // 3817\n        var count = currentData != null ? currentData.length : 0;                                                  // 3818\n        if (self.maximumSelectionLength > 0 &&                                                                     // 3819\n          count >= self.maximumSelectionLength) {                                                                  // 3820\n          self.trigger('results:message', {                                                                        // 3821\n            message: 'maximumSelected',                                                                            // 3822\n            args: {                                                                                                // 3823\n              maximum: self.maximumSelectionLength                                                                 // 3824\n            }                                                                                                      // 3825\n          });                                                                                                      // 3826\n          return;                                                                                                  // 3827\n        }                                                                                                          // 3828\n        decorated.call(self, params, callback);                                                                    // 3829\n      });                                                                                                          // 3830\n  };                                                                                                               // 3831\n                                                                                                                   // 3832\n  return MaximumSelectionLength;                                                                                   // 3833\n});                                                                                                                // 3834\n                                                                                                                   // 3835\nS2.define('select2/dropdown',[                                                                                     // 3836\n  'jquery',                                                                                                        // 3837\n  './utils'                                                                                                        // 3838\n], function ($, Utils) {                                                                                           // 3839\n  function Dropdown ($element, options) {                                                                          // 3840\n    this.$element = $element;                                                                                      // 3841\n    this.options = options;                                                                                        // 3842\n                                                                                                                   // 3843\n    Dropdown.__super__.constructor.call(this);                                                                     // 3844\n  }                                                                                                                // 3845\n                                                                                                                   // 3846\n  Utils.Extend(Dropdown, Utils.Observable);                                                                        // 3847\n                                                                                                                   // 3848\n  Dropdown.prototype.render = function () {                                                                        // 3849\n    var $dropdown = $(                                                                                             // 3850\n      '<span class=\"select2-dropdown\">' +                                                                          // 3851\n        '<span class=\"select2-results\"></span>' +                                                                  // 3852\n      '</span>'                                                                                                    // 3853\n    );                                                                                                             // 3854\n                                                                                                                   // 3855\n    $dropdown.attr('dir', this.options.get('dir'));                                                                // 3856\n                                                                                                                   // 3857\n    this.$dropdown = $dropdown;                                                                                    // 3858\n                                                                                                                   // 3859\n    return $dropdown;                                                                                              // 3860\n  };                                                                                                               // 3861\n                                                                                                                   // 3862\n  Dropdown.prototype.bind = function () {                                                                          // 3863\n    // Should be implemented in subclasses                                                                         // 3864\n  };                                                                                                               // 3865\n                                                                                                                   // 3866\n  Dropdown.prototype.position = function ($dropdown, $container) {                                                 // 3867\n    // Should be implmented in subclasses                                                                          // 3868\n  };                                                                                                               // 3869\n                                                                                                                   // 3870\n  Dropdown.prototype.destroy = function () {                                                                       // 3871\n    // Remove the dropdown from the DOM                                                                            // 3872\n    this.$dropdown.remove();                                                                                       // 3873\n  };                                                                                                               // 3874\n                                                                                                                   // 3875\n  return Dropdown;                                                                                                 // 3876\n});                                                                                                                // 3877\n                                                                                                                   // 3878\nS2.define('select2/dropdown/search',[                                                                              // 3879\n  'jquery',                                                                                                        // 3880\n  '../utils'                                                                                                       // 3881\n], function ($, Utils) {                                                                                           // 3882\n  function Search () { }                                                                                           // 3883\n                                                                                                                   // 3884\n  Search.prototype.render = function (decorated) {                                                                 // 3885\n    var $rendered = decorated.call(this);                                                                          // 3886\n                                                                                                                   // 3887\n    var $search = $(                                                                                               // 3888\n      '<span class=\"select2-search select2-search--dropdown\">' +                                                   // 3889\n        '<input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\"' +                                       // 3890\n        ' autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\"' +                                             // 3891\n        ' spellcheck=\"false\" role=\"textbox\" />' +                                                                  // 3892\n      '</span>'                                                                                                    // 3893\n    );                                                                                                             // 3894\n                                                                                                                   // 3895\n    this.$searchContainer = $search;                                                                               // 3896\n    this.$search = $search.find('input');                                                                          // 3897\n                                                                                                                   // 3898\n    $rendered.prepend($search);                                                                                    // 3899\n                                                                                                                   // 3900\n    return $rendered;                                                                                              // 3901\n  };                                                                                                               // 3902\n                                                                                                                   // 3903\n  Search.prototype.bind = function (decorated, container, $container) {                                            // 3904\n    var self = this;                                                                                               // 3905\n                                                                                                                   // 3906\n    decorated.call(this, container, $container);                                                                   // 3907\n                                                                                                                   // 3908\n    this.$search.on('keydown', function (evt) {                                                                    // 3909\n      self.trigger('keypress', evt);                                                                               // 3910\n                                                                                                                   // 3911\n      self._keyUpPrevented = evt.isDefaultPrevented();                                                             // 3912\n    });                                                                                                            // 3913\n                                                                                                                   // 3914\n    // Workaround for browsers which do not support the `input` event                                              // 3915\n    // This will prevent double-triggering of events for browsers which support                                    // 3916\n    // both the `keyup` and `input` events.                                                                        // 3917\n    this.$search.on('input', function (evt) {                                                                      // 3918\n      // Unbind the duplicated `keyup` event                                                                       // 3919\n      $(this).off('keyup');                                                                                        // 3920\n    });                                                                                                            // 3921\n                                                                                                                   // 3922\n    this.$search.on('keyup input', function (evt) {                                                                // 3923\n      self.handleSearch(evt);                                                                                      // 3924\n    });                                                                                                            // 3925\n                                                                                                                   // 3926\n    container.on('open', function () {                                                                             // 3927\n      self.$search.attr('tabindex', 0);                                                                            // 3928\n                                                                                                                   // 3929\n      self.$search.focus();                                                                                        // 3930\n                                                                                                                   // 3931\n      window.setTimeout(function () {                                                                              // 3932\n        self.$search.focus();                                                                                      // 3933\n      }, 0);                                                                                                       // 3934\n    });                                                                                                            // 3935\n                                                                                                                   // 3936\n    container.on('close', function () {                                                                            // 3937\n      self.$search.attr('tabindex', -1);                                                                           // 3938\n                                                                                                                   // 3939\n      self.$search.val('');                                                                                        // 3940\n    });                                                                                                            // 3941\n                                                                                                                   // 3942\n    container.on('focus', function () {                                                                            // 3943\n      if (container.isOpen()) {                                                                                    // 3944\n        self.$search.focus();                                                                                      // 3945\n      }                                                                                                            // 3946\n    });                                                                                                            // 3947\n                                                                                                                   // 3948\n    container.on('results:all', function (params) {                                                                // 3949\n      if (params.query.term == null || params.query.term === '') {                                                 // 3950\n        var showSearch = self.showSearch(params);                                                                  // 3951\n                                                                                                                   // 3952\n        if (showSearch) {                                                                                          // 3953\n          self.$searchContainer.removeClass('select2-search--hide');                                               // 3954\n        } else {                                                                                                   // 3955\n          self.$searchContainer.addClass('select2-search--hide');                                                  // 3956\n        }                                                                                                          // 3957\n      }                                                                                                            // 3958\n    });                                                                                                            // 3959\n  };                                                                                                               // 3960\n                                                                                                                   // 3961\n  Search.prototype.handleSearch = function (evt) {                                                                 // 3962\n    if (!this._keyUpPrevented) {                                                                                   // 3963\n      var input = this.$search.val();                                                                              // 3964\n                                                                                                                   // 3965\n      this.trigger('query', {                                                                                      // 3966\n        term: input                                                                                                // 3967\n      });                                                                                                          // 3968\n    }                                                                                                              // 3969\n                                                                                                                   // 3970\n    this._keyUpPrevented = false;                                                                                  // 3971\n  };                                                                                                               // 3972\n                                                                                                                   // 3973\n  Search.prototype.showSearch = function (_, params) {                                                             // 3974\n    return true;                                                                                                   // 3975\n  };                                                                                                               // 3976\n                                                                                                                   // 3977\n  return Search;                                                                                                   // 3978\n});                                                                                                                // 3979\n                                                                                                                   // 3980\nS2.define('select2/dropdown/hidePlaceholder',[                                                                     // 3981\n                                                                                                                   // 3982\n], function () {                                                                                                   // 3983\n  function HidePlaceholder (decorated, $element, options, dataAdapter) {                                           // 3984\n    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));                                      // 3985\n                                                                                                                   // 3986\n    decorated.call(this, $element, options, dataAdapter);                                                          // 3987\n  }                                                                                                                // 3988\n                                                                                                                   // 3989\n  HidePlaceholder.prototype.append = function (decorated, data) {                                                  // 3990\n    data.results = this.removePlaceholder(data.results);                                                           // 3991\n                                                                                                                   // 3992\n    decorated.call(this, data);                                                                                    // 3993\n  };                                                                                                               // 3994\n                                                                                                                   // 3995\n  HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {                                     // 3996\n    if (typeof placeholder === 'string') {                                                                         // 3997\n      placeholder = {                                                                                              // 3998\n        id: '',                                                                                                    // 3999\n        text: placeholder                                                                                          // 4000\n      };                                                                                                           // 4001\n    }                                                                                                              // 4002\n                                                                                                                   // 4003\n    return placeholder;                                                                                            // 4004\n  };                                                                                                               // 4005\n                                                                                                                   // 4006\n  HidePlaceholder.prototype.removePlaceholder = function (_, data) {                                               // 4007\n    var modifiedData = data.slice(0);                                                                              // 4008\n                                                                                                                   // 4009\n    for (var d = data.length - 1; d >= 0; d--) {                                                                   // 4010\n      var item = data[d];                                                                                          // 4011\n                                                                                                                   // 4012\n      if (this.placeholder.id === item.id) {                                                                       // 4013\n        modifiedData.splice(d, 1);                                                                                 // 4014\n      }                                                                                                            // 4015\n    }                                                                                                              // 4016\n                                                                                                                   // 4017\n    return modifiedData;                                                                                           // 4018\n  };                                                                                                               // 4019\n                                                                                                                   // 4020\n  return HidePlaceholder;                                                                                          // 4021\n});                                                                                                                // 4022\n                                                                                                                   // 4023\nS2.define('select2/dropdown/infiniteScroll',[                                                                      // 4024\n  'jquery'                                                                                                         // 4025\n], function ($) {                                                                                                  // 4026\n  function InfiniteScroll (decorated, $element, options, dataAdapter) {                                            // 4027\n    this.lastParams = {};                                                                                          // 4028\n                                                                                                                   // 4029\n    decorated.call(this, $element, options, dataAdapter);                                                          // 4030\n                                                                                                                   // 4031\n    this.$loadingMore = this.createLoadingMore();                                                                  // 4032\n    this.loading = false;                                                                                          // 4033\n  }                                                                                                                // 4034\n                                                                                                                   // 4035\n  InfiniteScroll.prototype.append = function (decorated, data) {                                                   // 4036\n    this.$loadingMore.remove();                                                                                    // 4037\n    this.loading = false;                                                                                          // 4038\n                                                                                                                   // 4039\n    decorated.call(this, data);                                                                                    // 4040\n                                                                                                                   // 4041\n    if (this.showLoadingMore(data)) {                                                                              // 4042\n      this.$results.append(this.$loadingMore);                                                                     // 4043\n    }                                                                                                              // 4044\n  };                                                                                                               // 4045\n                                                                                                                   // 4046\n  InfiniteScroll.prototype.bind = function (decorated, container, $container) {                                    // 4047\n    var self = this;                                                                                               // 4048\n                                                                                                                   // 4049\n    decorated.call(this, container, $container);                                                                   // 4050\n                                                                                                                   // 4051\n    container.on('query', function (params) {                                                                      // 4052\n      self.lastParams = params;                                                                                    // 4053\n      self.loading = true;                                                                                         // 4054\n    });                                                                                                            // 4055\n                                                                                                                   // 4056\n    container.on('query:append', function (params) {                                                               // 4057\n      self.lastParams = params;                                                                                    // 4058\n      self.loading = true;                                                                                         // 4059\n    });                                                                                                            // 4060\n                                                                                                                   // 4061\n    this.$results.on('scroll', function () {                                                                       // 4062\n      var isLoadMoreVisible = $.contains(                                                                          // 4063\n        document.documentElement,                                                                                  // 4064\n        self.$loadingMore[0]                                                                                       // 4065\n      );                                                                                                           // 4066\n                                                                                                                   // 4067\n      if (self.loading || !isLoadMoreVisible) {                                                                    // 4068\n        return;                                                                                                    // 4069\n      }                                                                                                            // 4070\n                                                                                                                   // 4071\n      var currentOffset = self.$results.offset().top +                                                             // 4072\n        self.$results.outerHeight(false);                                                                          // 4073\n      var loadingMoreOffset = self.$loadingMore.offset().top +                                                     // 4074\n        self.$loadingMore.outerHeight(false);                                                                      // 4075\n                                                                                                                   // 4076\n      if (currentOffset + 50 >= loadingMoreOffset) {                                                               // 4077\n        self.loadMore();                                                                                           // 4078\n      }                                                                                                            // 4079\n    });                                                                                                            // 4080\n  };                                                                                                               // 4081\n                                                                                                                   // 4082\n  InfiniteScroll.prototype.loadMore = function () {                                                                // 4083\n    this.loading = true;                                                                                           // 4084\n                                                                                                                   // 4085\n    var params = $.extend({}, {page: 1}, this.lastParams);                                                         // 4086\n                                                                                                                   // 4087\n    params.page++;                                                                                                 // 4088\n                                                                                                                   // 4089\n    this.trigger('query:append', params);                                                                          // 4090\n  };                                                                                                               // 4091\n                                                                                                                   // 4092\n  InfiniteScroll.prototype.showLoadingMore = function (_, data) {                                                  // 4093\n    return data.pagination && data.pagination.more;                                                                // 4094\n  };                                                                                                               // 4095\n                                                                                                                   // 4096\n  InfiniteScroll.prototype.createLoadingMore = function () {                                                       // 4097\n    var $option = $(                                                                                               // 4098\n      '<li ' +                                                                                                     // 4099\n      'class=\"select2-results__option select2-results__option--load-more\"' +                                       // 4100\n      'role=\"treeitem\" aria-disabled=\"true\"></li>'                                                                 // 4101\n    );                                                                                                             // 4102\n                                                                                                                   // 4103\n    var message = this.options.get('translations').get('loadingMore');                                             // 4104\n                                                                                                                   // 4105\n    $option.html(message(this.lastParams));                                                                        // 4106\n                                                                                                                   // 4107\n    return $option;                                                                                                // 4108\n  };                                                                                                               // 4109\n                                                                                                                   // 4110\n  return InfiniteScroll;                                                                                           // 4111\n});                                                                                                                // 4112\n                                                                                                                   // 4113\nS2.define('select2/dropdown/attachBody',[                                                                          // 4114\n  'jquery',                                                                                                        // 4115\n  '../utils'                                                                                                       // 4116\n], function ($, Utils) {                                                                                           // 4117\n  function AttachBody (decorated, $element, options) {                                                             // 4118\n    this.$dropdownParent = options.get('dropdownParent') || $(document.body);                                      // 4119\n                                                                                                                   // 4120\n    decorated.call(this, $element, options);                                                                       // 4121\n  }                                                                                                                // 4122\n                                                                                                                   // 4123\n  AttachBody.prototype.bind = function (decorated, container, $container) {                                        // 4124\n    var self = this;                                                                                               // 4125\n                                                                                                                   // 4126\n    var setupResultsEvents = false;                                                                                // 4127\n                                                                                                                   // 4128\n    decorated.call(this, container, $container);                                                                   // 4129\n                                                                                                                   // 4130\n    container.on('open', function () {                                                                             // 4131\n      self._showDropdown();                                                                                        // 4132\n      self._attachPositioningHandler(container);                                                                   // 4133\n                                                                                                                   // 4134\n      if (!setupResultsEvents) {                                                                                   // 4135\n        setupResultsEvents = true;                                                                                 // 4136\n                                                                                                                   // 4137\n        container.on('results:all', function () {                                                                  // 4138\n          self._positionDropdown();                                                                                // 4139\n          self._resizeDropdown();                                                                                  // 4140\n        });                                                                                                        // 4141\n                                                                                                                   // 4142\n        container.on('results:append', function () {                                                               // 4143\n          self._positionDropdown();                                                                                // 4144\n          self._resizeDropdown();                                                                                  // 4145\n        });                                                                                                        // 4146\n      }                                                                                                            // 4147\n    });                                                                                                            // 4148\n                                                                                                                   // 4149\n    container.on('close', function () {                                                                            // 4150\n      self._hideDropdown();                                                                                        // 4151\n      self._detachPositioningHandler(container);                                                                   // 4152\n    });                                                                                                            // 4153\n                                                                                                                   // 4154\n    this.$dropdownContainer.on('mousedown', function (evt) {                                                       // 4155\n      evt.stopPropagation();                                                                                       // 4156\n    });                                                                                                            // 4157\n  };                                                                                                               // 4158\n                                                                                                                   // 4159\n  AttachBody.prototype.destroy = function (decorated) {                                                            // 4160\n    decorated.call(this);                                                                                          // 4161\n                                                                                                                   // 4162\n    this.$dropdownContainer.remove();                                                                              // 4163\n  };                                                                                                               // 4164\n                                                                                                                   // 4165\n  AttachBody.prototype.position = function (decorated, $dropdown, $container) {                                    // 4166\n    // Clone all of the container classes                                                                          // 4167\n    $dropdown.attr('class', $container.attr('class'));                                                             // 4168\n                                                                                                                   // 4169\n    $dropdown.removeClass('select2');                                                                              // 4170\n    $dropdown.addClass('select2-container--open');                                                                 // 4171\n                                                                                                                   // 4172\n    $dropdown.css({                                                                                                // 4173\n      position: 'absolute',                                                                                        // 4174\n      top: -999999                                                                                                 // 4175\n    });                                                                                                            // 4176\n                                                                                                                   // 4177\n    this.$container = $container;                                                                                  // 4178\n  };                                                                                                               // 4179\n                                                                                                                   // 4180\n  AttachBody.prototype.render = function (decorated) {                                                             // 4181\n    var $container = $('<span></span>');                                                                           // 4182\n                                                                                                                   // 4183\n    var $dropdown = decorated.call(this);                                                                          // 4184\n    $container.append($dropdown);                                                                                  // 4185\n                                                                                                                   // 4186\n    this.$dropdownContainer = $container;                                                                          // 4187\n                                                                                                                   // 4188\n    return $container;                                                                                             // 4189\n  };                                                                                                               // 4190\n                                                                                                                   // 4191\n  AttachBody.prototype._hideDropdown = function (decorated) {                                                      // 4192\n    this.$dropdownContainer.detach();                                                                              // 4193\n  };                                                                                                               // 4194\n                                                                                                                   // 4195\n  AttachBody.prototype._attachPositioningHandler =                                                                 // 4196\n      function (decorated, container) {                                                                            // 4197\n    var self = this;                                                                                               // 4198\n                                                                                                                   // 4199\n    var scrollEvent = 'scroll.select2.' + container.id;                                                            // 4200\n    var resizeEvent = 'resize.select2.' + container.id;                                                            // 4201\n    var orientationEvent = 'orientationchange.select2.' + container.id;                                            // 4202\n                                                                                                                   // 4203\n    var $watchers = this.$container.parents().filter(Utils.hasScroll);                                             // 4204\n    $watchers.each(function () {                                                                                   // 4205\n      $(this).data('select2-scroll-position', {                                                                    // 4206\n        x: $(this).scrollLeft(),                                                                                   // 4207\n        y: $(this).scrollTop()                                                                                     // 4208\n      });                                                                                                          // 4209\n    });                                                                                                            // 4210\n                                                                                                                   // 4211\n    $watchers.on(scrollEvent, function (ev) {                                                                      // 4212\n      var position = $(this).data('select2-scroll-position');                                                      // 4213\n      $(this).scrollTop(position.y);                                                                               // 4214\n    });                                                                                                            // 4215\n                                                                                                                   // 4216\n    $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,                                         // 4217\n      function (e) {                                                                                               // 4218\n      self._positionDropdown();                                                                                    // 4219\n      self._resizeDropdown();                                                                                      // 4220\n    });                                                                                                            // 4221\n  };                                                                                                               // 4222\n                                                                                                                   // 4223\n  AttachBody.prototype._detachPositioningHandler =                                                                 // 4224\n      function (decorated, container) {                                                                            // 4225\n    var scrollEvent = 'scroll.select2.' + container.id;                                                            // 4226\n    var resizeEvent = 'resize.select2.' + container.id;                                                            // 4227\n    var orientationEvent = 'orientationchange.select2.' + container.id;                                            // 4228\n                                                                                                                   // 4229\n    var $watchers = this.$container.parents().filter(Utils.hasScroll);                                             // 4230\n    $watchers.off(scrollEvent);                                                                                    // 4231\n                                                                                                                   // 4232\n    $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);                                       // 4233\n  };                                                                                                               // 4234\n                                                                                                                   // 4235\n  AttachBody.prototype._positionDropdown = function () {                                                           // 4236\n    var $window = $(window);                                                                                       // 4237\n                                                                                                                   // 4238\n    var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');                                     // 4239\n    var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');                                     // 4240\n                                                                                                                   // 4241\n    var newDirection = null;                                                                                       // 4242\n                                                                                                                   // 4243\n    var offset = this.$container.offset();                                                                         // 4244\n                                                                                                                   // 4245\n    offset.bottom = offset.top + this.$container.outerHeight(false);                                               // 4246\n                                                                                                                   // 4247\n    var container = {                                                                                              // 4248\n      height: this.$container.outerHeight(false)                                                                   // 4249\n    };                                                                                                             // 4250\n                                                                                                                   // 4251\n    container.top = offset.top;                                                                                    // 4252\n    container.bottom = offset.top + container.height;                                                              // 4253\n                                                                                                                   // 4254\n    var dropdown = {                                                                                               // 4255\n      height: this.$dropdown.outerHeight(false)                                                                    // 4256\n    };                                                                                                             // 4257\n                                                                                                                   // 4258\n    var viewport = {                                                                                               // 4259\n      top: $window.scrollTop(),                                                                                    // 4260\n      bottom: $window.scrollTop() + $window.height()                                                               // 4261\n    };                                                                                                             // 4262\n                                                                                                                   // 4263\n    var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);                                           // 4264\n    var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);                                     // 4265\n                                                                                                                   // 4266\n    var css = {                                                                                                    // 4267\n      left: offset.left,                                                                                           // 4268\n      top: container.bottom                                                                                        // 4269\n    };                                                                                                             // 4270\n                                                                                                                   // 4271\n    // Determine what the parent element is to use for calciulating the offset                                     // 4272\n    var $offsetParent = this.$dropdownParent;                                                                      // 4273\n                                                                                                                   // 4274\n    // For statically positoned elements, we need to get the element                                               // 4275\n    // that is determining the offset                                                                              // 4276\n    if ($offsetParent.css('position') === 'static') {                                                              // 4277\n      $offsetParent = $offsetParent.offsetParent();                                                                // 4278\n    }                                                                                                              // 4279\n                                                                                                                   // 4280\n    var parentOffset = $offsetParent.offset();                                                                     // 4281\n                                                                                                                   // 4282\n    css.top -= parentOffset.top;                                                                                   // 4283\n    css.left -= parentOffset.left;                                                                                 // 4284\n                                                                                                                   // 4285\n    if (!isCurrentlyAbove && !isCurrentlyBelow) {                                                                  // 4286\n      newDirection = 'below';                                                                                      // 4287\n    }                                                                                                              // 4288\n                                                                                                                   // 4289\n    if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {                                                // 4290\n      newDirection = 'above';                                                                                      // 4291\n    } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {                                          // 4292\n      newDirection = 'below';                                                                                      // 4293\n    }                                                                                                              // 4294\n                                                                                                                   // 4295\n    if (newDirection == 'above' ||                                                                                 // 4296\n      (isCurrentlyAbove && newDirection !== 'below')) {                                                            // 4297\n      css.top = container.top - parentOffset.top - dropdown.height;                                                // 4298\n    }                                                                                                              // 4299\n                                                                                                                   // 4300\n    if (newDirection != null) {                                                                                    // 4301\n      this.$dropdown                                                                                               // 4302\n        .removeClass('select2-dropdown--below select2-dropdown--above')                                            // 4303\n        .addClass('select2-dropdown--' + newDirection);                                                            // 4304\n      this.$container                                                                                              // 4305\n        .removeClass('select2-container--below select2-container--above')                                          // 4306\n        .addClass('select2-container--' + newDirection);                                                           // 4307\n    }                                                                                                              // 4308\n                                                                                                                   // 4309\n    this.$dropdownContainer.css(css);                                                                              // 4310\n  };                                                                                                               // 4311\n                                                                                                                   // 4312\n  AttachBody.prototype._resizeDropdown = function () {                                                             // 4313\n    var css = {                                                                                                    // 4314\n      width: this.$container.outerWidth(false) + 'px'                                                              // 4315\n    };                                                                                                             // 4316\n                                                                                                                   // 4317\n    if (this.options.get('dropdownAutoWidth')) {                                                                   // 4318\n      css.minWidth = css.width;                                                                                    // 4319\n      css.position = 'relative';                                                                                   // 4320\n      css.width = 'auto';                                                                                          // 4321\n    }                                                                                                              // 4322\n                                                                                                                   // 4323\n    this.$dropdown.css(css);                                                                                       // 4324\n  };                                                                                                               // 4325\n                                                                                                                   // 4326\n  AttachBody.prototype._showDropdown = function (decorated) {                                                      // 4327\n    this.$dropdownContainer.appendTo(this.$dropdownParent);                                                        // 4328\n                                                                                                                   // 4329\n    this._positionDropdown();                                                                                      // 4330\n    this._resizeDropdown();                                                                                        // 4331\n  };                                                                                                               // 4332\n                                                                                                                   // 4333\n  return AttachBody;                                                                                               // 4334\n});                                                                                                                // 4335\n                                                                                                                   // 4336\nS2.define('select2/dropdown/minimumResultsForSearch',[                                                             // 4337\n                                                                                                                   // 4338\n], function () {                                                                                                   // 4339\n  function countResults (data) {                                                                                   // 4340\n    var count = 0;                                                                                                 // 4341\n                                                                                                                   // 4342\n    for (var d = 0; d < data.length; d++) {                                                                        // 4343\n      var item = data[d];                                                                                          // 4344\n                                                                                                                   // 4345\n      if (item.children) {                                                                                         // 4346\n        count += countResults(item.children);                                                                      // 4347\n      } else {                                                                                                     // 4348\n        count++;                                                                                                   // 4349\n      }                                                                                                            // 4350\n    }                                                                                                              // 4351\n                                                                                                                   // 4352\n    return count;                                                                                                  // 4353\n  }                                                                                                                // 4354\n                                                                                                                   // 4355\n  function MinimumResultsForSearch (decorated, $element, options, dataAdapter) {                                   // 4356\n    this.minimumResultsForSearch = options.get('minimumResultsForSearch');                                         // 4357\n                                                                                                                   // 4358\n    if (this.minimumResultsForSearch < 0) {                                                                        // 4359\n      this.minimumResultsForSearch = Infinity;                                                                     // 4360\n    }                                                                                                              // 4361\n                                                                                                                   // 4362\n    decorated.call(this, $element, options, dataAdapter);                                                          // 4363\n  }                                                                                                                // 4364\n                                                                                                                   // 4365\n  MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {                                    // 4366\n    if (countResults(params.data.results) < this.minimumResultsForSearch) {                                        // 4367\n      return false;                                                                                                // 4368\n    }                                                                                                              // 4369\n                                                                                                                   // 4370\n    return decorated.call(this, params);                                                                           // 4371\n  };                                                                                                               // 4372\n                                                                                                                   // 4373\n  return MinimumResultsForSearch;                                                                                  // 4374\n});                                                                                                                // 4375\n                                                                                                                   // 4376\nS2.define('select2/dropdown/selectOnClose',[                                                                       // 4377\n                                                                                                                   // 4378\n], function () {                                                                                                   // 4379\n  function SelectOnClose () { }                                                                                    // 4380\n                                                                                                                   // 4381\n  SelectOnClose.prototype.bind = function (decorated, container, $container) {                                     // 4382\n    var self = this;                                                                                               // 4383\n                                                                                                                   // 4384\n    decorated.call(this, container, $container);                                                                   // 4385\n                                                                                                                   // 4386\n    container.on('close', function (params) {                                                                      // 4387\n      self._handleSelectOnClose(params);                                                                           // 4388\n    });                                                                                                            // 4389\n  };                                                                                                               // 4390\n                                                                                                                   // 4391\n  SelectOnClose.prototype._handleSelectOnClose = function (_, params) {                                            // 4392\n    if (params && params.originalSelect2Event != null) {                                                           // 4393\n      var event = params.originalSelect2Event;                                                                     // 4394\n                                                                                                                   // 4395\n      // Don't select an item if the close event was triggered from a select or                                    // 4396\n      // unselect event                                                                                            // 4397\n      if (event._type === 'select' || event._type === 'unselect') {                                                // 4398\n        return;                                                                                                    // 4399\n      }                                                                                                            // 4400\n    }                                                                                                              // 4401\n                                                                                                                   // 4402\n    var $highlightedResults = this.getHighlightedResults();                                                        // 4403\n                                                                                                                   // 4404\n    // Only select highlighted results                                                                             // 4405\n    if ($highlightedResults.length < 1) {                                                                          // 4406\n      return;                                                                                                      // 4407\n    }                                                                                                              // 4408\n                                                                                                                   // 4409\n    var data = $highlightedResults.data('data');                                                                   // 4410\n                                                                                                                   // 4411\n    // Don't re-select already selected resulte                                                                    // 4412\n    if (                                                                                                           // 4413\n      (data.element != null && data.element.selected) ||                                                           // 4414\n      (data.element == null && data.selected)                                                                      // 4415\n    ) {                                                                                                            // 4416\n      return;                                                                                                      // 4417\n    }                                                                                                              // 4418\n                                                                                                                   // 4419\n    this.trigger('select', {                                                                                       // 4420\n        data: data                                                                                                 // 4421\n    });                                                                                                            // 4422\n  };                                                                                                               // 4423\n                                                                                                                   // 4424\n  return SelectOnClose;                                                                                            // 4425\n});                                                                                                                // 4426\n                                                                                                                   // 4427\nS2.define('select2/dropdown/closeOnSelect',[                                                                       // 4428\n                                                                                                                   // 4429\n], function () {                                                                                                   // 4430\n  function CloseOnSelect () { }                                                                                    // 4431\n                                                                                                                   // 4432\n  CloseOnSelect.prototype.bind = function (decorated, container, $container) {                                     // 4433\n    var self = this;                                                                                               // 4434\n                                                                                                                   // 4435\n    decorated.call(this, container, $container);                                                                   // 4436\n                                                                                                                   // 4437\n    container.on('select', function (evt) {                                                                        // 4438\n      self._selectTriggered(evt);                                                                                  // 4439\n    });                                                                                                            // 4440\n                                                                                                                   // 4441\n    container.on('unselect', function (evt) {                                                                      // 4442\n      self._selectTriggered(evt);                                                                                  // 4443\n    });                                                                                                            // 4444\n  };                                                                                                               // 4445\n                                                                                                                   // 4446\n  CloseOnSelect.prototype._selectTriggered = function (_, evt) {                                                   // 4447\n    var originalEvent = evt.originalEvent;                                                                         // 4448\n                                                                                                                   // 4449\n    // Don't close if the control key is being held                                                                // 4450\n    if (originalEvent && originalEvent.ctrlKey) {                                                                  // 4451\n      return;                                                                                                      // 4452\n    }                                                                                                              // 4453\n                                                                                                                   // 4454\n    this.trigger('close', {                                                                                        // 4455\n      originalEvent: originalEvent,                                                                                // 4456\n      originalSelect2Event: evt                                                                                    // 4457\n    });                                                                                                            // 4458\n  };                                                                                                               // 4459\n                                                                                                                   // 4460\n  return CloseOnSelect;                                                                                            // 4461\n});                                                                                                                // 4462\n                                                                                                                   // 4463\nS2.define('select2/i18n/en',[],function () {                                                                       // 4464\n  // English                                                                                                       // 4465\n  return {                                                                                                         // 4466\n    errorLoading: function () {                                                                                    // 4467\n      return 'The results could not be loaded.';                                                                   // 4468\n    },                                                                                                             // 4469\n    inputTooLong: function (args) {                                                                                // 4470\n      var overChars = args.input.length - args.maximum;                                                            // 4471\n                                                                                                                   // 4472\n      var message = 'Please delete ' + overChars + ' character';                                                   // 4473\n                                                                                                                   // 4474\n      if (overChars != 1) {                                                                                        // 4475\n        message += 's';                                                                                            // 4476\n      }                                                                                                            // 4477\n                                                                                                                   // 4478\n      return message;                                                                                              // 4479\n    },                                                                                                             // 4480\n    inputTooShort: function (args) {                                                                               // 4481\n      var remainingChars = args.minimum - args.input.length;                                                       // 4482\n                                                                                                                   // 4483\n      var message = 'Please enter ' + remainingChars + ' or more characters';                                      // 4484\n                                                                                                                   // 4485\n      return message;                                                                                              // 4486\n    },                                                                                                             // 4487\n    loadingMore: function () {                                                                                     // 4488\n      return 'Loading more results…';                                                                              // 4489\n    },                                                                                                             // 4490\n    maximumSelected: function (args) {                                                                             // 4491\n      var message = 'You can only select ' + args.maximum + ' item';                                               // 4492\n                                                                                                                   // 4493\n      if (args.maximum != 1) {                                                                                     // 4494\n        message += 's';                                                                                            // 4495\n      }                                                                                                            // 4496\n                                                                                                                   // 4497\n      return message;                                                                                              // 4498\n    },                                                                                                             // 4499\n    noResults: function () {                                                                                       // 4500\n      return 'No results found';                                                                                   // 4501\n    },                                                                                                             // 4502\n    searching: function () {                                                                                       // 4503\n      return 'Searching…';                                                                                         // 4504\n    }                                                                                                              // 4505\n  };                                                                                                               // 4506\n});                                                                                                                // 4507\n                                                                                                                   // 4508\nS2.define('select2/defaults',[                                                                                     // 4509\n  'jquery',                                                                                                        // 4510\n  'require',                                                                                                       // 4511\n                                                                                                                   // 4512\n  './results',                                                                                                     // 4513\n                                                                                                                   // 4514\n  './selection/single',                                                                                            // 4515\n  './selection/multiple',                                                                                          // 4516\n  './selection/placeholder',                                                                                       // 4517\n  './selection/allowClear',                                                                                        // 4518\n  './selection/search',                                                                                            // 4519\n  './selection/eventRelay',                                                                                        // 4520\n                                                                                                                   // 4521\n  './utils',                                                                                                       // 4522\n  './translation',                                                                                                 // 4523\n  './diacritics',                                                                                                  // 4524\n                                                                                                                   // 4525\n  './data/select',                                                                                                 // 4526\n  './data/array',                                                                                                  // 4527\n  './data/ajax',                                                                                                   // 4528\n  './data/tags',                                                                                                   // 4529\n  './data/tokenizer',                                                                                              // 4530\n  './data/minimumInputLength',                                                                                     // 4531\n  './data/maximumInputLength',                                                                                     // 4532\n  './data/maximumSelectionLength',                                                                                 // 4533\n                                                                                                                   // 4534\n  './dropdown',                                                                                                    // 4535\n  './dropdown/search',                                                                                             // 4536\n  './dropdown/hidePlaceholder',                                                                                    // 4537\n  './dropdown/infiniteScroll',                                                                                     // 4538\n  './dropdown/attachBody',                                                                                         // 4539\n  './dropdown/minimumResultsForSearch',                                                                            // 4540\n  './dropdown/selectOnClose',                                                                                      // 4541\n  './dropdown/closeOnSelect',                                                                                      // 4542\n                                                                                                                   // 4543\n  './i18n/en'                                                                                                      // 4544\n], function ($, require,                                                                                           // 4545\n                                                                                                                   // 4546\n             ResultsList,                                                                                          // 4547\n                                                                                                                   // 4548\n             SingleSelection, MultipleSelection, Placeholder, AllowClear,                                          // 4549\n             SelectionSearch, EventRelay,                                                                          // 4550\n                                                                                                                   // 4551\n             Utils, Translation, DIACRITICS,                                                                       // 4552\n                                                                                                                   // 4553\n             SelectData, ArrayData, AjaxData, Tags, Tokenizer,                                                     // 4554\n             MinimumInputLength, MaximumInputLength, MaximumSelectionLength,                                       // 4555\n                                                                                                                   // 4556\n             Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,                                            // 4557\n             AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,                                    // 4558\n                                                                                                                   // 4559\n             EnglishTranslation) {                                                                                 // 4560\n  function Defaults () {                                                                                           // 4561\n    this.reset();                                                                                                  // 4562\n  }                                                                                                                // 4563\n                                                                                                                   // 4564\n  Defaults.prototype.apply = function (options) {                                                                  // 4565\n    options = $.extend(true, {}, this.defaults, options);                                                          // 4566\n                                                                                                                   // 4567\n    if (options.dataAdapter == null) {                                                                             // 4568\n      if (options.ajax != null) {                                                                                  // 4569\n        options.dataAdapter = AjaxData;                                                                            // 4570\n      } else if (options.data != null) {                                                                           // 4571\n        options.dataAdapter = ArrayData;                                                                           // 4572\n      } else {                                                                                                     // 4573\n        options.dataAdapter = SelectData;                                                                          // 4574\n      }                                                                                                            // 4575\n                                                                                                                   // 4576\n      if (options.minimumInputLength > 0) {                                                                        // 4577\n        options.dataAdapter = Utils.Decorate(                                                                      // 4578\n          options.dataAdapter,                                                                                     // 4579\n          MinimumInputLength                                                                                       // 4580\n        );                                                                                                         // 4581\n      }                                                                                                            // 4582\n                                                                                                                   // 4583\n      if (options.maximumInputLength > 0) {                                                                        // 4584\n        options.dataAdapter = Utils.Decorate(                                                                      // 4585\n          options.dataAdapter,                                                                                     // 4586\n          MaximumInputLength                                                                                       // 4587\n        );                                                                                                         // 4588\n      }                                                                                                            // 4589\n                                                                                                                   // 4590\n      if (options.maximumSelectionLength > 0) {                                                                    // 4591\n        options.dataAdapter = Utils.Decorate(                                                                      // 4592\n          options.dataAdapter,                                                                                     // 4593\n          MaximumSelectionLength                                                                                   // 4594\n        );                                                                                                         // 4595\n      }                                                                                                            // 4596\n                                                                                                                   // 4597\n      if (options.tags) {                                                                                          // 4598\n        options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);                                           // 4599\n      }                                                                                                            // 4600\n                                                                                                                   // 4601\n      if (options.tokenSeparators != null || options.tokenizer != null) {                                          // 4602\n        options.dataAdapter = Utils.Decorate(                                                                      // 4603\n          options.dataAdapter,                                                                                     // 4604\n          Tokenizer                                                                                                // 4605\n        );                                                                                                         // 4606\n      }                                                                                                            // 4607\n                                                                                                                   // 4608\n      if (options.query != null) {                                                                                 // 4609\n        var Query = require(options.amdBase + 'compat/query');                                                     // 4610\n                                                                                                                   // 4611\n        options.dataAdapter = Utils.Decorate(                                                                      // 4612\n          options.dataAdapter,                                                                                     // 4613\n          Query                                                                                                    // 4614\n        );                                                                                                         // 4615\n      }                                                                                                            // 4616\n                                                                                                                   // 4617\n      if (options.initSelection != null) {                                                                         // 4618\n        var InitSelection = require(options.amdBase + 'compat/initSelection');                                     // 4619\n                                                                                                                   // 4620\n        options.dataAdapter = Utils.Decorate(                                                                      // 4621\n          options.dataAdapter,                                                                                     // 4622\n          InitSelection                                                                                            // 4623\n        );                                                                                                         // 4624\n      }                                                                                                            // 4625\n    }                                                                                                              // 4626\n                                                                                                                   // 4627\n    if (options.resultsAdapter == null) {                                                                          // 4628\n      options.resultsAdapter = ResultsList;                                                                        // 4629\n                                                                                                                   // 4630\n      if (options.ajax != null) {                                                                                  // 4631\n        options.resultsAdapter = Utils.Decorate(                                                                   // 4632\n          options.resultsAdapter,                                                                                  // 4633\n          InfiniteScroll                                                                                           // 4634\n        );                                                                                                         // 4635\n      }                                                                                                            // 4636\n                                                                                                                   // 4637\n      if (options.placeholder != null) {                                                                           // 4638\n        options.resultsAdapter = Utils.Decorate(                                                                   // 4639\n          options.resultsAdapter,                                                                                  // 4640\n          HidePlaceholder                                                                                          // 4641\n        );                                                                                                         // 4642\n      }                                                                                                            // 4643\n                                                                                                                   // 4644\n      if (options.selectOnClose) {                                                                                 // 4645\n        options.resultsAdapter = Utils.Decorate(                                                                   // 4646\n          options.resultsAdapter,                                                                                  // 4647\n          SelectOnClose                                                                                            // 4648\n        );                                                                                                         // 4649\n      }                                                                                                            // 4650\n    }                                                                                                              // 4651\n                                                                                                                   // 4652\n    if (options.dropdownAdapter == null) {                                                                         // 4653\n      if (options.multiple) {                                                                                      // 4654\n        options.dropdownAdapter = Dropdown;                                                                        // 4655\n      } else {                                                                                                     // 4656\n        var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);                                         // 4657\n                                                                                                                   // 4658\n        options.dropdownAdapter = SearchableDropdown;                                                              // 4659\n      }                                                                                                            // 4660\n                                                                                                                   // 4661\n      if (options.minimumResultsForSearch !== 0) {                                                                 // 4662\n        options.dropdownAdapter = Utils.Decorate(                                                                  // 4663\n          options.dropdownAdapter,                                                                                 // 4664\n          MinimumResultsForSearch                                                                                  // 4665\n        );                                                                                                         // 4666\n      }                                                                                                            // 4667\n                                                                                                                   // 4668\n      if (options.closeOnSelect) {                                                                                 // 4669\n        options.dropdownAdapter = Utils.Decorate(                                                                  // 4670\n          options.dropdownAdapter,                                                                                 // 4671\n          CloseOnSelect                                                                                            // 4672\n        );                                                                                                         // 4673\n      }                                                                                                            // 4674\n                                                                                                                   // 4675\n      if (                                                                                                         // 4676\n        options.dropdownCssClass != null ||                                                                        // 4677\n        options.dropdownCss != null ||                                                                             // 4678\n        options.adaptDropdownCssClass != null                                                                      // 4679\n      ) {                                                                                                          // 4680\n        var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');                                         // 4681\n                                                                                                                   // 4682\n        options.dropdownAdapter = Utils.Decorate(                                                                  // 4683\n          options.dropdownAdapter,                                                                                 // 4684\n          DropdownCSS                                                                                              // 4685\n        );                                                                                                         // 4686\n      }                                                                                                            // 4687\n                                                                                                                   // 4688\n      options.dropdownAdapter = Utils.Decorate(                                                                    // 4689\n        options.dropdownAdapter,                                                                                   // 4690\n        AttachBody                                                                                                 // 4691\n      );                                                                                                           // 4692\n    }                                                                                                              // 4693\n                                                                                                                   // 4694\n    if (options.selectionAdapter == null) {                                                                        // 4695\n      if (options.multiple) {                                                                                      // 4696\n        options.selectionAdapter = MultipleSelection;                                                              // 4697\n      } else {                                                                                                     // 4698\n        options.selectionAdapter = SingleSelection;                                                                // 4699\n      }                                                                                                            // 4700\n                                                                                                                   // 4701\n      // Add the placeholder mixin if a placeholder was specified                                                  // 4702\n      if (options.placeholder != null) {                                                                           // 4703\n        options.selectionAdapter = Utils.Decorate(                                                                 // 4704\n          options.selectionAdapter,                                                                                // 4705\n          Placeholder                                                                                              // 4706\n        );                                                                                                         // 4707\n      }                                                                                                            // 4708\n                                                                                                                   // 4709\n      if (options.allowClear) {                                                                                    // 4710\n        options.selectionAdapter = Utils.Decorate(                                                                 // 4711\n          options.selectionAdapter,                                                                                // 4712\n          AllowClear                                                                                               // 4713\n        );                                                                                                         // 4714\n      }                                                                                                            // 4715\n                                                                                                                   // 4716\n      if (options.multiple) {                                                                                      // 4717\n        options.selectionAdapter = Utils.Decorate(                                                                 // 4718\n          options.selectionAdapter,                                                                                // 4719\n          SelectionSearch                                                                                          // 4720\n        );                                                                                                         // 4721\n      }                                                                                                            // 4722\n                                                                                                                   // 4723\n      if (                                                                                                         // 4724\n        options.containerCssClass != null ||                                                                       // 4725\n        options.containerCss != null ||                                                                            // 4726\n        options.adaptContainerCssClass != null                                                                     // 4727\n      ) {                                                                                                          // 4728\n        var ContainerCSS = require(options.amdBase + 'compat/containerCss');                                       // 4729\n                                                                                                                   // 4730\n        options.selectionAdapter = Utils.Decorate(                                                                 // 4731\n          options.selectionAdapter,                                                                                // 4732\n          ContainerCSS                                                                                             // 4733\n        );                                                                                                         // 4734\n      }                                                                                                            // 4735\n                                                                                                                   // 4736\n      options.selectionAdapter = Utils.Decorate(                                                                   // 4737\n        options.selectionAdapter,                                                                                  // 4738\n        EventRelay                                                                                                 // 4739\n      );                                                                                                           // 4740\n    }                                                                                                              // 4741\n                                                                                                                   // 4742\n    if (typeof options.language === 'string') {                                                                    // 4743\n      // Check if the language is specified with a region                                                          // 4744\n      if (options.language.indexOf('-') > 0) {                                                                     // 4745\n        // Extract the region information if it is included                                                        // 4746\n        var languageParts = options.language.split('-');                                                           // 4747\n        var baseLanguage = languageParts[0];                                                                       // 4748\n                                                                                                                   // 4749\n        options.language = [options.language, baseLanguage];                                                       // 4750\n      } else {                                                                                                     // 4751\n        options.language = [options.language];                                                                     // 4752\n      }                                                                                                            // 4753\n    }                                                                                                              // 4754\n                                                                                                                   // 4755\n    if ($.isArray(options.language)) {                                                                             // 4756\n      var languages = new Translation();                                                                           // 4757\n      options.language.push('en');                                                                                 // 4758\n                                                                                                                   // 4759\n      var languageNames = options.language;                                                                        // 4760\n                                                                                                                   // 4761\n      for (var l = 0; l < languageNames.length; l++) {                                                             // 4762\n        var name = languageNames[l];                                                                               // 4763\n        var language = {};                                                                                         // 4764\n                                                                                                                   // 4765\n        try {                                                                                                      // 4766\n          // Try to load it with the original name                                                                 // 4767\n          language = Translation.loadPath(name);                                                                   // 4768\n        } catch (e) {                                                                                              // 4769\n          try {                                                                                                    // 4770\n            // If we couldn't load it, check if it wasn't the full path                                            // 4771\n            name = this.defaults.amdLanguageBase + name;                                                           // 4772\n            language = Translation.loadPath(name);                                                                 // 4773\n          } catch (ex) {                                                                                           // 4774\n            // The translation could not be loaded at all. Sometimes this is                                       // 4775\n            // because of a configuration problem, other times this can be                                         // 4776\n            // because of how Select2 helps load all possible translation files.                                   // 4777\n            if (options.debug && window.console && console.warn) {                                                 // 4778\n              console.warn(                                                                                        // 4779\n                'Select2: The language file for \"' + name + '\" could not be ' +                                    // 4780\n                'automatically loaded. A fallback will be used instead.'                                           // 4781\n              );                                                                                                   // 4782\n            }                                                                                                      // 4783\n                                                                                                                   // 4784\n            continue;                                                                                              // 4785\n          }                                                                                                        // 4786\n        }                                                                                                          // 4787\n                                                                                                                   // 4788\n        languages.extend(language);                                                                                // 4789\n      }                                                                                                            // 4790\n                                                                                                                   // 4791\n      options.translations = languages;                                                                            // 4792\n    } else {                                                                                                       // 4793\n      var baseTranslation = Translation.loadPath(                                                                  // 4794\n        this.defaults.amdLanguageBase + 'en'                                                                       // 4795\n      );                                                                                                           // 4796\n      var customTranslation = new Translation(options.language);                                                   // 4797\n                                                                                                                   // 4798\n      customTranslation.extend(baseTranslation);                                                                   // 4799\n                                                                                                                   // 4800\n      options.translations = customTranslation;                                                                    // 4801\n    }                                                                                                              // 4802\n                                                                                                                   // 4803\n    return options;                                                                                                // 4804\n  };                                                                                                               // 4805\n                                                                                                                   // 4806\n  Defaults.prototype.reset = function () {                                                                         // 4807\n    function stripDiacritics (text) {                                                                              // 4808\n      // Used 'uni range + named function' from http://jsperf.com/diacritics/18                                    // 4809\n      function match(a) {                                                                                          // 4810\n        return DIACRITICS[a] || a;                                                                                 // 4811\n      }                                                                                                            // 4812\n                                                                                                                   // 4813\n      return text.replace(/[^\\u0000-\\u007E]/g, match);                                                             // 4814\n    }                                                                                                              // 4815\n                                                                                                                   // 4816\n    function matcher (params, data) {                                                                              // 4817\n      // Always return the object if there is nothing to compare                                                   // 4818\n      if ($.trim(params.term) === '') {                                                                            // 4819\n        return data;                                                                                               // 4820\n      }                                                                                                            // 4821\n                                                                                                                   // 4822\n      // Do a recursive check for options with children                                                            // 4823\n      if (data.children && data.children.length > 0) {                                                             // 4824\n        // Clone the data object if there are children                                                             // 4825\n        // This is required as we modify the object to remove any non-matches                                      // 4826\n        var match = $.extend(true, {}, data);                                                                      // 4827\n                                                                                                                   // 4828\n        // Check each child of the option                                                                          // 4829\n        for (var c = data.children.length - 1; c >= 0; c--) {                                                      // 4830\n          var child = data.children[c];                                                                            // 4831\n                                                                                                                   // 4832\n          var matches = matcher(params, child);                                                                    // 4833\n                                                                                                                   // 4834\n          // If there wasn't a match, remove the object in the array                                               // 4835\n          if (matches == null) {                                                                                   // 4836\n            match.children.splice(c, 1);                                                                           // 4837\n          }                                                                                                        // 4838\n        }                                                                                                          // 4839\n                                                                                                                   // 4840\n        // If any children matched, return the new object                                                          // 4841\n        if (match.children.length > 0) {                                                                           // 4842\n          return match;                                                                                            // 4843\n        }                                                                                                          // 4844\n                                                                                                                   // 4845\n        // If there were no matching children, check just the plain object                                         // 4846\n        return matcher(params, match);                                                                             // 4847\n      }                                                                                                            // 4848\n                                                                                                                   // 4849\n      var original = stripDiacritics(data.text).toUpperCase();                                                     // 4850\n      var term = stripDiacritics(params.term).toUpperCase();                                                       // 4851\n                                                                                                                   // 4852\n      // Check if the text contains the term                                                                       // 4853\n      if (original.indexOf(term) > -1) {                                                                           // 4854\n        return data;                                                                                               // 4855\n      }                                                                                                            // 4856\n                                                                                                                   // 4857\n      // If it doesn't contain the term, don't return anything                                                     // 4858\n      return null;                                                                                                 // 4859\n    }                                                                                                              // 4860\n                                                                                                                   // 4861\n    this.defaults = {                                                                                              // 4862\n      amdBase: './',                                                                                               // 4863\n      amdLanguageBase: './i18n/',                                                                                  // 4864\n      closeOnSelect: true,                                                                                         // 4865\n      debug: false,                                                                                                // 4866\n      dropdownAutoWidth: false,                                                                                    // 4867\n      escapeMarkup: Utils.escapeMarkup,                                                                            // 4868\n      language: EnglishTranslation,                                                                                // 4869\n      matcher: matcher,                                                                                            // 4870\n      minimumInputLength: 0,                                                                                       // 4871\n      maximumInputLength: 0,                                                                                       // 4872\n      maximumSelectionLength: 0,                                                                                   // 4873\n      minimumResultsForSearch: 0,                                                                                  // 4874\n      selectOnClose: false,                                                                                        // 4875\n      sorter: function (data) {                                                                                    // 4876\n        return data;                                                                                               // 4877\n      },                                                                                                           // 4878\n      templateResult: function (result) {                                                                          // 4879\n        return result.text;                                                                                        // 4880\n      },                                                                                                           // 4881\n      templateSelection: function (selection) {                                                                    // 4882\n        return selection.text;                                                                                     // 4883\n      },                                                                                                           // 4884\n      theme: 'default',                                                                                            // 4885\n      width: 'resolve'                                                                                             // 4886\n    };                                                                                                             // 4887\n  };                                                                                                               // 4888\n                                                                                                                   // 4889\n  Defaults.prototype.set = function (key, value) {                                                                 // 4890\n    var camelKey = $.camelCase(key);                                                                               // 4891\n                                                                                                                   // 4892\n    var data = {};                                                                                                 // 4893\n    data[camelKey] = value;                                                                                        // 4894\n                                                                                                                   // 4895\n    var convertedData = Utils._convertData(data);                                                                  // 4896\n                                                                                                                   // 4897\n    $.extend(this.defaults, convertedData);                                                                        // 4898\n  };                                                                                                               // 4899\n                                                                                                                   // 4900\n  var defaults = new Defaults();                                                                                   // 4901\n                                                                                                                   // 4902\n  return defaults;                                                                                                 // 4903\n});                                                                                                                // 4904\n                                                                                                                   // 4905\nS2.define('select2/options',[                                                                                      // 4906\n  'require',                                                                                                       // 4907\n  'jquery',                                                                                                        // 4908\n  './defaults',                                                                                                    // 4909\n  './utils'                                                                                                        // 4910\n], function (require, $, Defaults, Utils) {                                                                        // 4911\n  function Options (options, $element) {                                                                           // 4912\n    this.options = options;                                                                                        // 4913\n                                                                                                                   // 4914\n    if ($element != null) {                                                                                        // 4915\n      this.fromElement($element);                                                                                  // 4916\n    }                                                                                                              // 4917\n                                                                                                                   // 4918\n    this.options = Defaults.apply(this.options);                                                                   // 4919\n                                                                                                                   // 4920\n    if ($element && $element.is('input')) {                                                                        // 4921\n      var InputCompat = require(this.get('amdBase') + 'compat/inputData');                                         // 4922\n                                                                                                                   // 4923\n      this.options.dataAdapter = Utils.Decorate(                                                                   // 4924\n        this.options.dataAdapter,                                                                                  // 4925\n        InputCompat                                                                                                // 4926\n      );                                                                                                           // 4927\n    }                                                                                                              // 4928\n  }                                                                                                                // 4929\n                                                                                                                   // 4930\n  Options.prototype.fromElement = function ($e) {                                                                  // 4931\n    var excludedData = ['select2'];                                                                                // 4932\n                                                                                                                   // 4933\n    if (this.options.multiple == null) {                                                                           // 4934\n      this.options.multiple = $e.prop('multiple');                                                                 // 4935\n    }                                                                                                              // 4936\n                                                                                                                   // 4937\n    if (this.options.disabled == null) {                                                                           // 4938\n      this.options.disabled = $e.prop('disabled');                                                                 // 4939\n    }                                                                                                              // 4940\n                                                                                                                   // 4941\n    if (this.options.language == null) {                                                                           // 4942\n      if ($e.prop('lang')) {                                                                                       // 4943\n        this.options.language = $e.prop('lang').toLowerCase();                                                     // 4944\n      } else if ($e.closest('[lang]').prop('lang')) {                                                              // 4945\n        this.options.language = $e.closest('[lang]').prop('lang');                                                 // 4946\n      }                                                                                                            // 4947\n    }                                                                                                              // 4948\n                                                                                                                   // 4949\n    if (this.options.dir == null) {                                                                                // 4950\n      if ($e.prop('dir')) {                                                                                        // 4951\n        this.options.dir = $e.prop('dir');                                                                         // 4952\n      } else if ($e.closest('[dir]').prop('dir')) {                                                                // 4953\n        this.options.dir = $e.closest('[dir]').prop('dir');                                                        // 4954\n      } else {                                                                                                     // 4955\n        this.options.dir = 'ltr';                                                                                  // 4956\n      }                                                                                                            // 4957\n    }                                                                                                              // 4958\n                                                                                                                   // 4959\n    $e.prop('disabled', this.options.disabled);                                                                    // 4960\n    $e.prop('multiple', this.options.multiple);                                                                    // 4961\n                                                                                                                   // 4962\n    if ($e.data('select2Tags')) {                                                                                  // 4963\n      if (this.options.debug && window.console && console.warn) {                                                  // 4964\n        console.warn(                                                                                              // 4965\n          'Select2: The `data-select2-tags` attribute has been changed to ' +                                      // 4966\n          'use the `data-data` and `data-tags=\"true\"` attributes and will be ' +                                   // 4967\n          'removed in future versions of Select2.'                                                                 // 4968\n        );                                                                                                         // 4969\n      }                                                                                                            // 4970\n                                                                                                                   // 4971\n      $e.data('data', $e.data('select2Tags'));                                                                     // 4972\n      $e.data('tags', true);                                                                                       // 4973\n    }                                                                                                              // 4974\n                                                                                                                   // 4975\n    if ($e.data('ajaxUrl')) {                                                                                      // 4976\n      if (this.options.debug && window.console && console.warn) {                                                  // 4977\n        console.warn(                                                                                              // 4978\n          'Select2: The `data-ajax-url` attribute has been changed to ' +                                          // 4979\n          '`data-ajax--url` and support for the old attribute will be removed' +                                   // 4980\n          ' in future versions of Select2.'                                                                        // 4981\n        );                                                                                                         // 4982\n      }                                                                                                            // 4983\n                                                                                                                   // 4984\n      $e.attr('ajax--url', $e.data('ajaxUrl'));                                                                    // 4985\n      $e.data('ajax--url', $e.data('ajaxUrl'));                                                                    // 4986\n    }                                                                                                              // 4987\n                                                                                                                   // 4988\n    var dataset = {};                                                                                              // 4989\n                                                                                                                   // 4990\n    // Prefer the element's `dataset` attribute if it exists                                                       // 4991\n    // jQuery 1.x does not correctly handle data attributes with multiple dashes                                   // 4992\n    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {                                        // 4993\n      dataset = $.extend(true, {}, $e[0].dataset, $e.data());                                                      // 4994\n    } else {                                                                                                       // 4995\n      dataset = $e.data();                                                                                         // 4996\n    }                                                                                                              // 4997\n                                                                                                                   // 4998\n    var data = $.extend(true, {}, dataset);                                                                        // 4999\n                                                                                                                   // 5000\n    data = Utils._convertData(data);                                                                               // 5001\n                                                                                                                   // 5002\n    for (var key in data) {                                                                                        // 5003\n      if ($.inArray(key, excludedData) > -1) {                                                                     // 5004\n        continue;                                                                                                  // 5005\n      }                                                                                                            // 5006\n                                                                                                                   // 5007\n      if ($.isPlainObject(this.options[key])) {                                                                    // 5008\n        $.extend(this.options[key], data[key]);                                                                    // 5009\n      } else {                                                                                                     // 5010\n        this.options[key] = data[key];                                                                             // 5011\n      }                                                                                                            // 5012\n    }                                                                                                              // 5013\n                                                                                                                   // 5014\n    return this;                                                                                                   // 5015\n  };                                                                                                               // 5016\n                                                                                                                   // 5017\n  Options.prototype.get = function (key) {                                                                         // 5018\n    return this.options[key];                                                                                      // 5019\n  };                                                                                                               // 5020\n                                                                                                                   // 5021\n  Options.prototype.set = function (key, val) {                                                                    // 5022\n    this.options[key] = val;                                                                                       // 5023\n  };                                                                                                               // 5024\n                                                                                                                   // 5025\n  return Options;                                                                                                  // 5026\n});                                                                                                                // 5027\n                                                                                                                   // 5028\nS2.define('select2/core',[                                                                                         // 5029\n  'jquery',                                                                                                        // 5030\n  './options',                                                                                                     // 5031\n  './utils',                                                                                                       // 5032\n  './keys'                                                                                                         // 5033\n], function ($, Options, Utils, KEYS) {                                                                            // 5034\n  var Select2 = function ($element, options) {                                                                     // 5035\n    if ($element.data('select2') != null) {                                                                        // 5036\n      $element.data('select2').destroy();                                                                          // 5037\n    }                                                                                                              // 5038\n                                                                                                                   // 5039\n    this.$element = $element;                                                                                      // 5040\n                                                                                                                   // 5041\n    this.id = this._generateId($element);                                                                          // 5042\n                                                                                                                   // 5043\n    options = options || {};                                                                                       // 5044\n                                                                                                                   // 5045\n    this.options = new Options(options, $element);                                                                 // 5046\n                                                                                                                   // 5047\n    Select2.__super__.constructor.call(this);                                                                      // 5048\n                                                                                                                   // 5049\n    // Set up the tabindex                                                                                         // 5050\n                                                                                                                   // 5051\n    var tabindex = $element.attr('tabindex') || 0;                                                                 // 5052\n    $element.data('old-tabindex', tabindex);                                                                       // 5053\n    $element.attr('tabindex', '-1');                                                                               // 5054\n                                                                                                                   // 5055\n    // Set up containers and adapters                                                                              // 5056\n                                                                                                                   // 5057\n    var DataAdapter = this.options.get('dataAdapter');                                                             // 5058\n    this.dataAdapter = new DataAdapter($element, this.options);                                                    // 5059\n                                                                                                                   // 5060\n    var $container = this.render();                                                                                // 5061\n                                                                                                                   // 5062\n    this._placeContainer($container);                                                                              // 5063\n                                                                                                                   // 5064\n    var SelectionAdapter = this.options.get('selectionAdapter');                                                   // 5065\n    this.selection = new SelectionAdapter($element, this.options);                                                 // 5066\n    this.$selection = this.selection.render();                                                                     // 5067\n                                                                                                                   // 5068\n    this.selection.position(this.$selection, $container);                                                          // 5069\n                                                                                                                   // 5070\n    var DropdownAdapter = this.options.get('dropdownAdapter');                                                     // 5071\n    this.dropdown = new DropdownAdapter($element, this.options);                                                   // 5072\n    this.$dropdown = this.dropdown.render();                                                                       // 5073\n                                                                                                                   // 5074\n    this.dropdown.position(this.$dropdown, $container);                                                            // 5075\n                                                                                                                   // 5076\n    var ResultsAdapter = this.options.get('resultsAdapter');                                                       // 5077\n    this.results = new ResultsAdapter($element, this.options, this.dataAdapter);                                   // 5078\n    this.$results = this.results.render();                                                                         // 5079\n                                                                                                                   // 5080\n    this.results.position(this.$results, this.$dropdown);                                                          // 5081\n                                                                                                                   // 5082\n    // Bind events                                                                                                 // 5083\n                                                                                                                   // 5084\n    var self = this;                                                                                               // 5085\n                                                                                                                   // 5086\n    // Bind the container to all of the adapters                                                                   // 5087\n    this._bindAdapters();                                                                                          // 5088\n                                                                                                                   // 5089\n    // Register any DOM event handlers                                                                             // 5090\n    this._registerDomEvents();                                                                                     // 5091\n                                                                                                                   // 5092\n    // Register any internal event handlers                                                                        // 5093\n    this._registerDataEvents();                                                                                    // 5094\n    this._registerSelectionEvents();                                                                               // 5095\n    this._registerDropdownEvents();                                                                                // 5096\n    this._registerResultsEvents();                                                                                 // 5097\n    this._registerEvents();                                                                                        // 5098\n                                                                                                                   // 5099\n    // Set the initial state                                                                                       // 5100\n    this.dataAdapter.current(function (initialData) {                                                              // 5101\n      self.trigger('selection:update', {                                                                           // 5102\n        data: initialData                                                                                          // 5103\n      });                                                                                                          // 5104\n    });                                                                                                            // 5105\n                                                                                                                   // 5106\n    // Hide the original select                                                                                    // 5107\n    $element.addClass('select2-hidden-accessible');                                                                // 5108\n    $element.attr('aria-hidden', 'true');                                                                          // 5109\n                                                                                                                   // 5110\n    // Synchronize any monitored attributes                                                                        // 5111\n    this._syncAttributes();                                                                                        // 5112\n                                                                                                                   // 5113\n    $element.data('select2', this);                                                                                // 5114\n  };                                                                                                               // 5115\n                                                                                                                   // 5116\n  Utils.Extend(Select2, Utils.Observable);                                                                         // 5117\n                                                                                                                   // 5118\n  Select2.prototype._generateId = function ($element) {                                                            // 5119\n    var id = '';                                                                                                   // 5120\n                                                                                                                   // 5121\n    if ($element.attr('id') != null) {                                                                             // 5122\n      id = $element.attr('id');                                                                                    // 5123\n    } else if ($element.attr('name') != null) {                                                                    // 5124\n      id = $element.attr('name') + '-' + Utils.generateChars(2);                                                   // 5125\n    } else {                                                                                                       // 5126\n      id = Utils.generateChars(4);                                                                                 // 5127\n    }                                                                                                              // 5128\n                                                                                                                   // 5129\n    id = id.replace(/(:|\\.|\\[|\\]|,)/g, '');                                                                        // 5130\n    id = 'select2-' + id;                                                                                          // 5131\n                                                                                                                   // 5132\n    return id;                                                                                                     // 5133\n  };                                                                                                               // 5134\n                                                                                                                   // 5135\n  Select2.prototype._placeContainer = function ($container) {                                                      // 5136\n    $container.insertAfter(this.$element);                                                                         // 5137\n                                                                                                                   // 5138\n    var width = this._resolveWidth(this.$element, this.options.get('width'));                                      // 5139\n                                                                                                                   // 5140\n    if (width != null) {                                                                                           // 5141\n      $container.css('width', width);                                                                              // 5142\n    }                                                                                                              // 5143\n  };                                                                                                               // 5144\n                                                                                                                   // 5145\n  Select2.prototype._resolveWidth = function ($element, method) {                                                  // 5146\n    var WIDTH = /^width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;                                   // 5147\n                                                                                                                   // 5148\n    if (method == 'resolve') {                                                                                     // 5149\n      var styleWidth = this._resolveWidth($element, 'style');                                                      // 5150\n                                                                                                                   // 5151\n      if (styleWidth != null) {                                                                                    // 5152\n        return styleWidth;                                                                                         // 5153\n      }                                                                                                            // 5154\n                                                                                                                   // 5155\n      return this._resolveWidth($element, 'element');                                                              // 5156\n    }                                                                                                              // 5157\n                                                                                                                   // 5158\n    if (method == 'element') {                                                                                     // 5159\n      var elementWidth = $element.outerWidth(false);                                                               // 5160\n                                                                                                                   // 5161\n      if (elementWidth <= 0) {                                                                                     // 5162\n        return 'auto';                                                                                             // 5163\n      }                                                                                                            // 5164\n                                                                                                                   // 5165\n      return elementWidth + 'px';                                                                                  // 5166\n    }                                                                                                              // 5167\n                                                                                                                   // 5168\n    if (method == 'style') {                                                                                       // 5169\n      var style = $element.attr('style');                                                                          // 5170\n                                                                                                                   // 5171\n      if (typeof(style) !== 'string') {                                                                            // 5172\n        return null;                                                                                               // 5173\n      }                                                                                                            // 5174\n                                                                                                                   // 5175\n      var attrs = style.split(';');                                                                                // 5176\n                                                                                                                   // 5177\n      for (var i = 0, l = attrs.length; i < l; i = i + 1) {                                                        // 5178\n        var attr = attrs[i].replace(/\\s/g, '');                                                                    // 5179\n        var matches = attr.match(WIDTH);                                                                           // 5180\n                                                                                                                   // 5181\n        if (matches !== null && matches.length >= 1) {                                                             // 5182\n          return matches[1];                                                                                       // 5183\n        }                                                                                                          // 5184\n      }                                                                                                            // 5185\n                                                                                                                   // 5186\n      return null;                                                                                                 // 5187\n    }                                                                                                              // 5188\n                                                                                                                   // 5189\n    return method;                                                                                                 // 5190\n  };                                                                                                               // 5191\n                                                                                                                   // 5192\n  Select2.prototype._bindAdapters = function () {                                                                  // 5193\n    this.dataAdapter.bind(this, this.$container);                                                                  // 5194\n    this.selection.bind(this, this.$container);                                                                    // 5195\n                                                                                                                   // 5196\n    this.dropdown.bind(this, this.$container);                                                                     // 5197\n    this.results.bind(this, this.$container);                                                                      // 5198\n  };                                                                                                               // 5199\n                                                                                                                   // 5200\n  Select2.prototype._registerDomEvents = function () {                                                             // 5201\n    var self = this;                                                                                               // 5202\n                                                                                                                   // 5203\n    this.$element.on('change.select2', function () {                                                               // 5204\n      self.dataAdapter.current(function (data) {                                                                   // 5205\n        self.trigger('selection:update', {                                                                         // 5206\n          data: data                                                                                               // 5207\n        });                                                                                                        // 5208\n      });                                                                                                          // 5209\n    });                                                                                                            // 5210\n                                                                                                                   // 5211\n    this.$element.on('focus.select2', function (evt) {                                                             // 5212\n      self.trigger('focus', evt);                                                                                  // 5213\n    });                                                                                                            // 5214\n                                                                                                                   // 5215\n    this._syncA = Utils.bind(this._syncAttributes, this);                                                          // 5216\n    this._syncS = Utils.bind(this._syncSubtree, this);                                                             // 5217\n                                                                                                                   // 5218\n    if (this.$element[0].attachEvent) {                                                                            // 5219\n      this.$element[0].attachEvent('onpropertychange', this._syncA);                                               // 5220\n    }                                                                                                              // 5221\n                                                                                                                   // 5222\n    var observer = window.MutationObserver ||                                                                      // 5223\n      window.WebKitMutationObserver ||                                                                             // 5224\n      window.MozMutationObserver                                                                                   // 5225\n    ;                                                                                                              // 5226\n                                                                                                                   // 5227\n    if (observer != null) {                                                                                        // 5228\n      this._observer = new observer(function (mutations) {                                                         // 5229\n        $.each(mutations, self._syncA);                                                                            // 5230\n        $.each(mutations, self._syncS);                                                                            // 5231\n      });                                                                                                          // 5232\n      this._observer.observe(this.$element[0], {                                                                   // 5233\n        attributes: true,                                                                                          // 5234\n        childList: true,                                                                                           // 5235\n        subtree: false                                                                                             // 5236\n      });                                                                                                          // 5237\n    } else if (this.$element[0].addEventListener) {                                                                // 5238\n      this.$element[0].addEventListener(                                                                           // 5239\n        'DOMAttrModified',                                                                                         // 5240\n        self._syncA,                                                                                               // 5241\n        false                                                                                                      // 5242\n      );                                                                                                           // 5243\n      this.$element[0].addEventListener(                                                                           // 5244\n        'DOMNodeInserted',                                                                                         // 5245\n        self._syncS,                                                                                               // 5246\n        false                                                                                                      // 5247\n      );                                                                                                           // 5248\n      this.$element[0].addEventListener(                                                                           // 5249\n        'DOMNodeRemoved',                                                                                          // 5250\n        self._syncS,                                                                                               // 5251\n        false                                                                                                      // 5252\n      );                                                                                                           // 5253\n    }                                                                                                              // 5254\n  };                                                                                                               // 5255\n                                                                                                                   // 5256\n  Select2.prototype._registerDataEvents = function () {                                                            // 5257\n    var self = this;                                                                                               // 5258\n                                                                                                                   // 5259\n    this.dataAdapter.on('*', function (name, params) {                                                             // 5260\n      self.trigger(name, params);                                                                                  // 5261\n    });                                                                                                            // 5262\n  };                                                                                                               // 5263\n                                                                                                                   // 5264\n  Select2.prototype._registerSelectionEvents = function () {                                                       // 5265\n    var self = this;                                                                                               // 5266\n    var nonRelayEvents = ['toggle', 'focus'];                                                                      // 5267\n                                                                                                                   // 5268\n    this.selection.on('toggle', function () {                                                                      // 5269\n      self.toggleDropdown();                                                                                       // 5270\n    });                                                                                                            // 5271\n                                                                                                                   // 5272\n    this.selection.on('focus', function (params) {                                                                 // 5273\n      self.focus(params);                                                                                          // 5274\n    });                                                                                                            // 5275\n                                                                                                                   // 5276\n    this.selection.on('*', function (name, params) {                                                               // 5277\n      if ($.inArray(name, nonRelayEvents) !== -1) {                                                                // 5278\n        return;                                                                                                    // 5279\n      }                                                                                                            // 5280\n                                                                                                                   // 5281\n      self.trigger(name, params);                                                                                  // 5282\n    });                                                                                                            // 5283\n  };                                                                                                               // 5284\n                                                                                                                   // 5285\n  Select2.prototype._registerDropdownEvents = function () {                                                        // 5286\n    var self = this;                                                                                               // 5287\n                                                                                                                   // 5288\n    this.dropdown.on('*', function (name, params) {                                                                // 5289\n      self.trigger(name, params);                                                                                  // 5290\n    });                                                                                                            // 5291\n  };                                                                                                               // 5292\n                                                                                                                   // 5293\n  Select2.prototype._registerResultsEvents = function () {                                                         // 5294\n    var self = this;                                                                                               // 5295\n                                                                                                                   // 5296\n    this.results.on('*', function (name, params) {                                                                 // 5297\n      self.trigger(name, params);                                                                                  // 5298\n    });                                                                                                            // 5299\n  };                                                                                                               // 5300\n                                                                                                                   // 5301\n  Select2.prototype._registerEvents = function () {                                                                // 5302\n    var self = this;                                                                                               // 5303\n                                                                                                                   // 5304\n    this.on('open', function () {                                                                                  // 5305\n      self.$container.addClass('select2-container--open');                                                         // 5306\n    });                                                                                                            // 5307\n                                                                                                                   // 5308\n    this.on('close', function () {                                                                                 // 5309\n      self.$container.removeClass('select2-container--open');                                                      // 5310\n    });                                                                                                            // 5311\n                                                                                                                   // 5312\n    this.on('enable', function () {                                                                                // 5313\n      self.$container.removeClass('select2-container--disabled');                                                  // 5314\n    });                                                                                                            // 5315\n                                                                                                                   // 5316\n    this.on('disable', function () {                                                                               // 5317\n      self.$container.addClass('select2-container--disabled');                                                     // 5318\n    });                                                                                                            // 5319\n                                                                                                                   // 5320\n    this.on('blur', function () {                                                                                  // 5321\n      self.$container.removeClass('select2-container--focus');                                                     // 5322\n    });                                                                                                            // 5323\n                                                                                                                   // 5324\n    this.on('query', function (params) {                                                                           // 5325\n      if (!self.isOpen()) {                                                                                        // 5326\n        self.trigger('open', {});                                                                                  // 5327\n      }                                                                                                            // 5328\n                                                                                                                   // 5329\n      this.dataAdapter.query(params, function (data) {                                                             // 5330\n        self.trigger('results:all', {                                                                              // 5331\n          data: data,                                                                                              // 5332\n          query: params                                                                                            // 5333\n        });                                                                                                        // 5334\n      });                                                                                                          // 5335\n    });                                                                                                            // 5336\n                                                                                                                   // 5337\n    this.on('query:append', function (params) {                                                                    // 5338\n      this.dataAdapter.query(params, function (data) {                                                             // 5339\n        self.trigger('results:append', {                                                                           // 5340\n          data: data,                                                                                              // 5341\n          query: params                                                                                            // 5342\n        });                                                                                                        // 5343\n      });                                                                                                          // 5344\n    });                                                                                                            // 5345\n                                                                                                                   // 5346\n    this.on('keypress', function (evt) {                                                                           // 5347\n      var key = evt.which;                                                                                         // 5348\n                                                                                                                   // 5349\n      if (self.isOpen()) {                                                                                         // 5350\n        if (key === KEYS.ESC || key === KEYS.TAB ||                                                                // 5351\n            (key === KEYS.UP && evt.altKey)) {                                                                     // 5352\n          self.close();                                                                                            // 5353\n                                                                                                                   // 5354\n          evt.preventDefault();                                                                                    // 5355\n        } else if (key === KEYS.ENTER) {                                                                           // 5356\n          self.trigger('results:select', {});                                                                      // 5357\n                                                                                                                   // 5358\n          evt.preventDefault();                                                                                    // 5359\n        } else if ((key === KEYS.SPACE && evt.ctrlKey)) {                                                          // 5360\n          self.trigger('results:toggle', {});                                                                      // 5361\n                                                                                                                   // 5362\n          evt.preventDefault();                                                                                    // 5363\n        } else if (key === KEYS.UP) {                                                                              // 5364\n          self.trigger('results:previous', {});                                                                    // 5365\n                                                                                                                   // 5366\n          evt.preventDefault();                                                                                    // 5367\n        } else if (key === KEYS.DOWN) {                                                                            // 5368\n          self.trigger('results:next', {});                                                                        // 5369\n                                                                                                                   // 5370\n          evt.preventDefault();                                                                                    // 5371\n        }                                                                                                          // 5372\n      } else {                                                                                                     // 5373\n        if (key === KEYS.ENTER || key === KEYS.SPACE ||                                                            // 5374\n            (key === KEYS.DOWN && evt.altKey)) {                                                                   // 5375\n          self.open();                                                                                             // 5376\n                                                                                                                   // 5377\n          evt.preventDefault();                                                                                    // 5378\n        }                                                                                                          // 5379\n      }                                                                                                            // 5380\n    });                                                                                                            // 5381\n  };                                                                                                               // 5382\n                                                                                                                   // 5383\n  Select2.prototype._syncAttributes = function () {                                                                // 5384\n    this.options.set('disabled', this.$element.prop('disabled'));                                                  // 5385\n                                                                                                                   // 5386\n    if (this.options.get('disabled')) {                                                                            // 5387\n      if (this.isOpen()) {                                                                                         // 5388\n        this.close();                                                                                              // 5389\n      }                                                                                                            // 5390\n                                                                                                                   // 5391\n      this.trigger('disable', {});                                                                                 // 5392\n    } else {                                                                                                       // 5393\n      this.trigger('enable', {});                                                                                  // 5394\n    }                                                                                                              // 5395\n  };                                                                                                               // 5396\n                                                                                                                   // 5397\n  Select2.prototype._syncSubtree = function (evt, mutations) {                                                     // 5398\n    var changed = false;                                                                                           // 5399\n    var self = this;                                                                                               // 5400\n                                                                                                                   // 5401\n    // Ignore any mutation events raised for elements that aren't options or                                       // 5402\n    // optgroups. This handles the case when the select element is destroyed                                       // 5403\n    if (                                                                                                           // 5404\n      evt && evt.target && (                                                                                       // 5405\n        evt.target.nodeName !== 'OPTION' && evt.target.nodeName !== 'OPTGROUP'                                     // 5406\n      )                                                                                                            // 5407\n    ) {                                                                                                            // 5408\n      return;                                                                                                      // 5409\n    }                                                                                                              // 5410\n                                                                                                                   // 5411\n    if (!mutations) {                                                                                              // 5412\n      // If mutation events aren't supported, then we can only assume that the                                     // 5413\n      // change affected the selections                                                                            // 5414\n      changed = true;                                                                                              // 5415\n    } else if (mutations.addedNodes && mutations.addedNodes.length > 0) {                                          // 5416\n      for (var n = 0; n < mutations.addedNodes.length; n++) {                                                      // 5417\n        var node = mutations.addedNodes[n];                                                                        // 5418\n                                                                                                                   // 5419\n        if (node.selected) {                                                                                       // 5420\n          changed = true;                                                                                          // 5421\n        }                                                                                                          // 5422\n      }                                                                                                            // 5423\n    } else if (mutations.removedNodes && mutations.removedNodes.length > 0) {                                      // 5424\n      changed = true;                                                                                              // 5425\n    }                                                                                                              // 5426\n                                                                                                                   // 5427\n    // Only re-pull the data if we think there is a change                                                         // 5428\n    if (changed) {                                                                                                 // 5429\n      this.dataAdapter.current(function (currentData) {                                                            // 5430\n        self.trigger('selection:update', {                                                                         // 5431\n          data: currentData                                                                                        // 5432\n        });                                                                                                        // 5433\n      });                                                                                                          // 5434\n    }                                                                                                              // 5435\n  };                                                                                                               // 5436\n                                                                                                                   // 5437\n  /**                                                                                                              // 5438\n   * Override the trigger method to automatically trigger pre-events when                                          // 5439\n   * there are events that can be prevented.                                                                       // 5440\n   */                                                                                                              // 5441\n  Select2.prototype.trigger = function (name, args) {                                                              // 5442\n    var actualTrigger = Select2.__super__.trigger;                                                                 // 5443\n    var preTriggerMap = {                                                                                          // 5444\n      'open': 'opening',                                                                                           // 5445\n      'close': 'closing',                                                                                          // 5446\n      'select': 'selecting',                                                                                       // 5447\n      'unselect': 'unselecting'                                                                                    // 5448\n    };                                                                                                             // 5449\n                                                                                                                   // 5450\n    if (args === undefined) {                                                                                      // 5451\n      args = {};                                                                                                   // 5452\n    }                                                                                                              // 5453\n                                                                                                                   // 5454\n    if (name in preTriggerMap) {                                                                                   // 5455\n      var preTriggerName = preTriggerMap[name];                                                                    // 5456\n      var preTriggerArgs = {                                                                                       // 5457\n        prevented: false,                                                                                          // 5458\n        name: name,                                                                                                // 5459\n        args: args                                                                                                 // 5460\n      };                                                                                                           // 5461\n                                                                                                                   // 5462\n      actualTrigger.call(this, preTriggerName, preTriggerArgs);                                                    // 5463\n                                                                                                                   // 5464\n      if (preTriggerArgs.prevented) {                                                                              // 5465\n        args.prevented = true;                                                                                     // 5466\n                                                                                                                   // 5467\n        return;                                                                                                    // 5468\n      }                                                                                                            // 5469\n    }                                                                                                              // 5470\n                                                                                                                   // 5471\n    actualTrigger.call(this, name, args);                                                                          // 5472\n  };                                                                                                               // 5473\n                                                                                                                   // 5474\n  Select2.prototype.toggleDropdown = function () {                                                                 // 5475\n    if (this.options.get('disabled')) {                                                                            // 5476\n      return;                                                                                                      // 5477\n    }                                                                                                              // 5478\n                                                                                                                   // 5479\n    if (this.isOpen()) {                                                                                           // 5480\n      this.close();                                                                                                // 5481\n    } else {                                                                                                       // 5482\n      this.open();                                                                                                 // 5483\n    }                                                                                                              // 5484\n  };                                                                                                               // 5485\n                                                                                                                   // 5486\n  Select2.prototype.open = function () {                                                                           // 5487\n    if (this.isOpen()) {                                                                                           // 5488\n      return;                                                                                                      // 5489\n    }                                                                                                              // 5490\n                                                                                                                   // 5491\n    this.trigger('query', {});                                                                                     // 5492\n  };                                                                                                               // 5493\n                                                                                                                   // 5494\n  Select2.prototype.close = function () {                                                                          // 5495\n    if (!this.isOpen()) {                                                                                          // 5496\n      return;                                                                                                      // 5497\n    }                                                                                                              // 5498\n                                                                                                                   // 5499\n    this.trigger('close', {});                                                                                     // 5500\n  };                                                                                                               // 5501\n                                                                                                                   // 5502\n  Select2.prototype.isOpen = function () {                                                                         // 5503\n    return this.$container.hasClass('select2-container--open');                                                    // 5504\n  };                                                                                                               // 5505\n                                                                                                                   // 5506\n  Select2.prototype.hasFocus = function () {                                                                       // 5507\n    return this.$container.hasClass('select2-container--focus');                                                   // 5508\n  };                                                                                                               // 5509\n                                                                                                                   // 5510\n  Select2.prototype.focus = function (data) {                                                                      // 5511\n    // No need to re-trigger focus events if we are already focused                                                // 5512\n    if (this.hasFocus()) {                                                                                         // 5513\n      return;                                                                                                      // 5514\n    }                                                                                                              // 5515\n                                                                                                                   // 5516\n    this.$container.addClass('select2-container--focus');                                                          // 5517\n    this.trigger('focus', {});                                                                                     // 5518\n  };                                                                                                               // 5519\n                                                                                                                   // 5520\n  Select2.prototype.enable = function (args) {                                                                     // 5521\n    if (this.options.get('debug') && window.console && console.warn) {                                             // 5522\n      console.warn(                                                                                                // 5523\n        'Select2: The `select2(\"enable\")` method has been deprecated and will' +                                   // 5524\n        ' be removed in later Select2 versions. Use $element.prop(\"disabled\")' +                                   // 5525\n        ' instead.'                                                                                                // 5526\n      );                                                                                                           // 5527\n    }                                                                                                              // 5528\n                                                                                                                   // 5529\n    if (args == null || args.length === 0) {                                                                       // 5530\n      args = [true];                                                                                               // 5531\n    }                                                                                                              // 5532\n                                                                                                                   // 5533\n    var disabled = !args[0];                                                                                       // 5534\n                                                                                                                   // 5535\n    this.$element.prop('disabled', disabled);                                                                      // 5536\n  };                                                                                                               // 5537\n                                                                                                                   // 5538\n  Select2.prototype.data = function () {                                                                           // 5539\n    if (this.options.get('debug') &&                                                                               // 5540\n        arguments.length > 0 && window.console && console.warn) {                                                  // 5541\n      console.warn(                                                                                                // 5542\n        'Select2: Data can no longer be set using `select2(\"data\")`. You ' +                                       // 5543\n        'should consider setting the value instead using `$element.val()`.'                                        // 5544\n      );                                                                                                           // 5545\n    }                                                                                                              // 5546\n                                                                                                                   // 5547\n    var data = [];                                                                                                 // 5548\n                                                                                                                   // 5549\n    this.dataAdapter.current(function (currentData) {                                                              // 5550\n      data = currentData;                                                                                          // 5551\n    });                                                                                                            // 5552\n                                                                                                                   // 5553\n    return data;                                                                                                   // 5554\n  };                                                                                                               // 5555\n                                                                                                                   // 5556\n  Select2.prototype.val = function (args) {                                                                        // 5557\n    if (this.options.get('debug') && window.console && console.warn) {                                             // 5558\n      console.warn(                                                                                                // 5559\n        'Select2: The `select2(\"val\")` method has been deprecated and will be' +                                   // 5560\n        ' removed in later Select2 versions. Use $element.val() instead.'                                          // 5561\n      );                                                                                                           // 5562\n    }                                                                                                              // 5563\n                                                                                                                   // 5564\n    if (args == null || args.length === 0) {                                                                       // 5565\n      return this.$element.val();                                                                                  // 5566\n    }                                                                                                              // 5567\n                                                                                                                   // 5568\n    var newVal = args[0];                                                                                          // 5569\n                                                                                                                   // 5570\n    if ($.isArray(newVal)) {                                                                                       // 5571\n      newVal = $.map(newVal, function (obj) {                                                                      // 5572\n        return obj.toString();                                                                                     // 5573\n      });                                                                                                          // 5574\n    }                                                                                                              // 5575\n                                                                                                                   // 5576\n    this.$element.val(newVal).trigger('change');                                                                   // 5577\n  };                                                                                                               // 5578\n                                                                                                                   // 5579\n  Select2.prototype.destroy = function () {                                                                        // 5580\n    this.$container.remove();                                                                                      // 5581\n                                                                                                                   // 5582\n    if (this.$element[0].detachEvent) {                                                                            // 5583\n      this.$element[0].detachEvent('onpropertychange', this._syncA);                                               // 5584\n    }                                                                                                              // 5585\n                                                                                                                   // 5586\n    if (this._observer != null) {                                                                                  // 5587\n      this._observer.disconnect();                                                                                 // 5588\n      this._observer = null;                                                                                       // 5589\n    } else if (this.$element[0].removeEventListener) {                                                             // 5590\n      this.$element[0]                                                                                             // 5591\n        .removeEventListener('DOMAttrModified', this._syncA, false);                                               // 5592\n      this.$element[0]                                                                                             // 5593\n        .removeEventListener('DOMNodeInserted', this._syncS, false);                                               // 5594\n      this.$element[0]                                                                                             // 5595\n        .removeEventListener('DOMNodeRemoved', this._syncS, false);                                                // 5596\n    }                                                                                                              // 5597\n                                                                                                                   // 5598\n    this._syncA = null;                                                                                            // 5599\n    this._syncS = null;                                                                                            // 5600\n                                                                                                                   // 5601\n    this.$element.off('.select2');                                                                                 // 5602\n    this.$element.attr('tabindex', this.$element.data('old-tabindex'));                                            // 5603\n                                                                                                                   // 5604\n    this.$element.removeClass('select2-hidden-accessible');                                                        // 5605\n    this.$element.attr('aria-hidden', 'false');                                                                    // 5606\n    this.$element.removeData('select2');                                                                           // 5607\n                                                                                                                   // 5608\n    this.dataAdapter.destroy();                                                                                    // 5609\n    this.selection.destroy();                                                                                      // 5610\n    this.dropdown.destroy();                                                                                       // 5611\n    this.results.destroy();                                                                                        // 5612\n                                                                                                                   // 5613\n    this.dataAdapter = null;                                                                                       // 5614\n    this.selection = null;                                                                                         // 5615\n    this.dropdown = null;                                                                                          // 5616\n    this.results = null;                                                                                           // 5617\n  };                                                                                                               // 5618\n                                                                                                                   // 5619\n  Select2.prototype.render = function () {                                                                         // 5620\n    var $container = $(                                                                                            // 5621\n      '<span class=\"select2 select2-container\">' +                                                                 // 5622\n        '<span class=\"selection\"></span>' +                                                                        // 5623\n        '<span class=\"dropdown-wrapper\" aria-hidden=\"true\"></span>' +                                              // 5624\n      '</span>'                                                                                                    // 5625\n    );                                                                                                             // 5626\n                                                                                                                   // 5627\n    $container.attr('dir', this.options.get('dir'));                                                               // 5628\n                                                                                                                   // 5629\n    this.$container = $container;                                                                                  // 5630\n                                                                                                                   // 5631\n    this.$container.addClass('select2-container--' + this.options.get('theme'));                                   // 5632\n                                                                                                                   // 5633\n    $container.data('element', this.$element);                                                                     // 5634\n                                                                                                                   // 5635\n    return $container;                                                                                             // 5636\n  };                                                                                                               // 5637\n                                                                                                                   // 5638\n  return Select2;                                                                                                  // 5639\n});                                                                                                                // 5640\n                                                                                                                   // 5641\nS2.define('jquery-mousewheel',[                                                                                    // 5642\n  'jquery'                                                                                                         // 5643\n], function ($) {                                                                                                  // 5644\n  // Used to shim jQuery.mousewheel for non-full builds.                                                           // 5645\n  return $;                                                                                                        // 5646\n});                                                                                                                // 5647\n                                                                                                                   // 5648\nS2.define('jquery.select2',[                                                                                       // 5649\n  'jquery',                                                                                                        // 5650\n  'jquery-mousewheel',                                                                                             // 5651\n                                                                                                                   // 5652\n  './select2/core',                                                                                                // 5653\n  './select2/defaults'                                                                                             // 5654\n], function ($, _, Select2, Defaults) {                                                                            // 5655\n  if ($.fn.select2 == null) {                                                                                      // 5656\n    // All methods that should return the element                                                                  // 5657\n    var thisMethods = ['open', 'close', 'destroy'];                                                                // 5658\n                                                                                                                   // 5659\n    $.fn.select2 = function (options) {                                                                            // 5660\n      options = options || {};                                                                                     // 5661\n                                                                                                                   // 5662\n      if (typeof options === 'object') {                                                                           // 5663\n        this.each(function () {                                                                                    // 5664\n          var instanceOptions = $.extend(true, {}, options);                                                       // 5665\n                                                                                                                   // 5666\n          var instance = new Select2($(this), instanceOptions);                                                    // 5667\n        });                                                                                                        // 5668\n                                                                                                                   // 5669\n        return this;                                                                                               // 5670\n      } else if (typeof options === 'string') {                                                                    // 5671\n        var ret;                                                                                                   // 5672\n        var args = Array.prototype.slice.call(arguments, 1);                                                       // 5673\n                                                                                                                   // 5674\n        this.each(function () {                                                                                    // 5675\n          var instance = $(this).data('select2');                                                                  // 5676\n                                                                                                                   // 5677\n          if (instance == null && window.console && console.error) {                                               // 5678\n            console.error(                                                                                         // 5679\n              'The select2(\\'' + options + '\\') method was called on an ' +                                        // 5680\n              'element that is not using Select2.'                                                                 // 5681\n            );                                                                                                     // 5682\n          }                                                                                                        // 5683\n                                                                                                                   // 5684\n          ret = instance[options].apply(instance, args);                                                           // 5685\n        });                                                                                                        // 5686\n                                                                                                                   // 5687\n        // Check if we should be returning `this`                                                                  // 5688\n        if ($.inArray(options, thisMethods) > -1) {                                                                // 5689\n          return this;                                                                                             // 5690\n        }                                                                                                          // 5691\n                                                                                                                   // 5692\n        return ret;                                                                                                // 5693\n      } else {                                                                                                     // 5694\n        throw new Error('Invalid arguments for Select2: ' + options);                                              // 5695\n      }                                                                                                            // 5696\n    };                                                                                                             // 5697\n  }                                                                                                                // 5698\n                                                                                                                   // 5699\n  if ($.fn.select2.defaults == null) {                                                                             // 5700\n    $.fn.select2.defaults = Defaults;                                                                              // 5701\n  }                                                                                                                // 5702\n                                                                                                                   // 5703\n  return Select2;                                                                                                  // 5704\n});                                                                                                                // 5705\n                                                                                                                   // 5706\n  // Return the AMD loader configuration so it can be used outside of this file                                    // 5707\n  return {                                                                                                         // 5708\n    define: S2.define,                                                                                             // 5709\n    require: S2.require                                                                                            // 5710\n  };                                                                                                               // 5711\n}());                                                                                                              // 5712\n                                                                                                                   // 5713\n  // Autoload the jQuery bindings                                                                                  // 5714\n  // We know that all of the modules exist above this, so we're safe                                               // 5715\n  var select2 = S2.require('jquery.select2');                                                                      // 5716\n                                                                                                                   // 5717\n  // Hold the AMD module references on the jQuery function that was just loaded                                    // 5718\n  // This allows Select2 to use the internal loader outside of this file, such                                     // 5719\n  // as in the language files.                                                                                     // 5720\n  jQuery.fn.select2.amd = S2;                                                                                      // 5721\n                                                                                                                   // 5722\n  // Return the Select2 instance for anyone who is importing it.                                                   // 5723\n  return select2;                                                                                                  // 5724\n}));                                                                                                               // 5725\n                                                                                                                   // 5726\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['natestrauser:select2'] = {};\n\n})();\n","servePath":"/packages/natestrauser_select2.js"}]