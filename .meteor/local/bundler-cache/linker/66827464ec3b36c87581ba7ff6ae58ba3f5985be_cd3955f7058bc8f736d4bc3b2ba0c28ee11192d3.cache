[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar URL, buildUrl;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/url/url_common.js                                             //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nURL = {};\n\nvar encodeString = function (str) {\n  return encodeURIComponent(str).replace(/\\*/g, '%2A');\n};\n\n// Encode URL paramaters into a query string, handling nested objects and\n// arrays properly.\nURL._encodeParams = function (params, prefix) {\n  var str = [];\n  var isParamsArray = Array.isArray(params);\n  for (var p in params) {\n    if (Object.prototype.hasOwnProperty.call(params, p)) {\n      var k = prefix ? prefix + '[' + (isParamsArray ? '' : p) + ']' : p;\n      var v = params[p];\n      if (typeof v === 'object') {\n        str.push(this._encodeParams(v, k));\n      } else {\n        var encodedKey =\n          encodeString(k).replace('%5B', '[').replace('%5D', ']');\n        str.push(encodedKey + '=' + encodeString(v));\n      }\n    }\n  }\n  return str.join('&').replace(/%20/g, '+');\n};\n\nbuildUrl = function(before_qmark, from_qmark, opt_query, opt_params) {\n  var url_without_query = before_qmark;\n  var query = from_qmark ? from_qmark.slice(1) : null;\n\n  if (typeof opt_query === \"string\")\n    query = String(opt_query);\n\n  if (opt_params) {\n    query = query || \"\";\n    var prms = URL._encodeParams(opt_params);\n    if (query && prms)\n      query += '&';\n    query += prms;\n  }\n\n  var url = url_without_query;\n  if (query !== null)\n    url += (\"?\"+query);\n\n  return url;\n};\n\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/url/url_server.js                                             //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nvar url_util = Npm.require('url');\n\nURL._constructUrl = function (url, query, params) {\n  var url_parts = url_util.parse(url);\n  return buildUrl(\n    url_parts.protocol + \"//\" + url_parts.host + url_parts.pathname,\n    url_parts.search, query, params);\n};\n\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.url = {}, {\n  URL: URL\n});\n\n})();\n","servePath":"/packages/url.js"}]