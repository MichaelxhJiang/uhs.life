[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Template = Package['templating-runtime'].Template;\nvar _ = Package.underscore._;\nvar ActiveRoute = Package['zimme:active-route'].ActiveRoute;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/arillo_flow-router-helpers/client/template.helpers.js                    //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n                                                                                     // 1\nTemplate.__checkName(\"linkTo\");                                                      // 2\nTemplate[\"linkTo\"] = new Template(\"Template.linkTo\", (function() {                   // 3\n  var view = this;                                                                   // 4\n  return HTML.A({                                                                    // 5\n    href: function() {                                                               // 6\n      return Spacebars.mustache(view.lookup(\"pathFor\"), view.lookup(\".\"));           // 7\n    }                                                                                // 8\n  }, Blaze._InOuterTemplateScope(view, function() {                                  // 9\n    return Spacebars.include(function() {                                            // 10\n      return Spacebars.call(view.templateContentBlock);                              // 11\n    });                                                                              // 12\n  }));                                                                               // 13\n}));                                                                                 // 14\n                                                                                     // 15\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/arillo_flow-router-helpers/client/helpers.coffee.js                      //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar FlowRouterHelpers, currentRouteName, currentRouteOption, func, helpers, isSubReady, name, param, pathFor, queryParam, subsReady, urlFor,\n  slice = [].slice,                                                                  //\n  hasProp = {}.hasOwnProperty;                                                       //\n                                                                                     //\nsubsReady = function() {                                                             // 2\n  var subs;                                                                          // 3\n  subs = 1 <= arguments.length ? slice.call(arguments, 0) : [];                      // 3\n  if (subs.length === 1) {                                                           // 3\n    return FlowRouter.subsReady();                                                   // 3\n  }                                                                                  //\n  subs = subs.slice(0, subs.length - 1);                                             // 3\n  return _.reduce(subs, function(memo, sub) {                                        //\n    return memo && FlowRouter.subsReady(sub);                                        //\n  }, true);                                                                          //\n};                                                                                   // 2\n                                                                                     //\npathFor = function(path, view) {                                                     // 2\n  var hashBang, query, ref;                                                          // 11\n  if (view == null) {                                                                //\n    view = {                                                                         //\n      hash: {}                                                                       // 10\n    };                                                                               //\n  }                                                                                  //\n  if (!path) {                                                                       // 11\n    throw new Error('no path defined');                                              // 11\n  }                                                                                  //\n  if (!view.hash) {                                                                  // 13\n    view = {                                                                         // 13\n      hash: view                                                                     // 13\n    };                                                                               //\n  }                                                                                  //\n  if (((ref = path.hash) != null ? ref.route : void 0) != null) {                    // 14\n    view = path;                                                                     // 15\n    path = view.hash.route;                                                          // 15\n    delete view.hash.route;                                                          // 15\n  }                                                                                  //\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};              // 11\n  hashBang = view.hash.hash ? view.hash.hash : '';                                   // 11\n  return FlowRouter.path(path, view.hash, query) + (hashBang ? \"#\" + hashBang : '');\n};                                                                                   // 10\n                                                                                     //\nurlFor = function(path, view) {                                                      // 2\n  var relativePath;                                                                  // 24\n  relativePath = pathFor(path, view);                                                // 24\n  return Meteor.absoluteUrl(relativePath.substr(1));                                 //\n};                                                                                   // 23\n                                                                                     //\nparam = function(name) {                                                             // 2\n  return FlowRouter.getParam(name);                                                  //\n};                                                                                   // 28\n                                                                                     //\nqueryParam = function(key) {                                                         // 2\n  return FlowRouter.getQueryParam(key);                                              //\n};                                                                                   // 32\n                                                                                     //\ncurrentRouteName = function() {                                                      // 2\n  return FlowRouter.getRouteName();                                                  //\n};                                                                                   // 36\n                                                                                     //\ncurrentRouteOption = function(optionName) {                                          // 2\n  return FlowRouter.current().route.options[optionName];                             //\n};                                                                                   // 40\n                                                                                     //\nisSubReady = function(sub) {                                                         // 2\n  if (sub) {                                                                         // 45\n    return FlowRouter.subsReady(sub);                                                // 45\n  }                                                                                  //\n  return FlowRouter.subsReady();                                                     // 46\n};                                                                                   // 44\n                                                                                     //\nhelpers = {                                                                          // 2\n  subsReady: subsReady,                                                              // 49\n  pathFor: pathFor,                                                                  // 49\n  urlFor: urlFor,                                                                    // 49\n  param: param,                                                                      // 49\n  queryParam: queryParam,                                                            // 49\n  currentRouteName: currentRouteName,                                                // 49\n  isSubReady: isSubReady,                                                            // 49\n  currentRouteOption: currentRouteOption                                             // 49\n};                                                                                   //\n                                                                                     //\nif (Meteor.isClient) {                                                               // 58\n  for (name in helpers) {                                                            // 59\n    if (!hasProp.call(helpers, name)) continue;                                      //\n    func = helpers[name];                                                            //\n    Template.registerHelper(name, func);                                             // 59\n  }                                                                                  // 59\n}                                                                                    //\n                                                                                     //\nif (Meteor.isServer) {                                                               // 61\n  FlowRouterHelpers = {                                                              // 62\n    pathFor: pathFor,                                                                // 63\n    urlFor: urlFor                                                                   // 63\n  };                                                                                 //\n}                                                                                    //\n                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['arillo:flow-router-helpers'] = {};\n\n})();\n","servePath":"/packages/arillo_flow-router-helpers.js","sourceMap":{"version":3,"sources":["/packages/arillo_flow-router-helpers/client/helpers.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;EAAA;6BAAA;;AAAA,YAAY;AACV;AAAA,EADW,4DACX;AAAA,MAAiC,IAAI,CAAC,MAAL,KAAe,CAAhD;AAAA,WAAO,UAAU,CAAC,SAAX,EAAP;GAAA;AAAA,EACA,OAAO,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,IAAI,CAAC,MAAL,GAAc,CAA5B,CADP;SAEA,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,SAAC,IAAD,EAAO,GAAP;WACb,QAAS,UAAU,CAAC,SAAX,CAAqB,GAArB,EADI;EAAA,CAAf,EAEE,IAFF,EAHU;AAAA,CAAZ;;AAAA,OAQA,GAAU,SAAC,IAAD,EAAO,IAAP;AACR;;IADe,OAAO;AAAA,MAAC,MAAK,EAAN;;GACtB;AAAA;AAAA,UAAU,UAAM,iBAAN,CAAV;GAAA;AAEA,WAA6B,CAAC,IAA9B;AAAA,WAAO;AAAA,YAAM,IAAN;KAAP;GAFA;AAGA,MAAG,wDAAH;AACE,WAAO,IAAP;AAAA,IACA,OAAO,IAAI,CAAC,IAAI,CAAC,KADjB;AAAA,IAEA,WAAW,CAAC,IAAI,CAAC,KAFjB,CADF;GAHA;AAAA,EAOA,QAAW,IAAI,CAAC,IAAI,CAAC,KAAb,GAAwB,UAAU,CAAC,GAAG,CAAC,KAAf,CAAqB,IAAI,CAAC,IAAI,CAAC,KAA/B,CAAxB,GAAmE,EAP3E;AAAA,EAQA,WAAc,IAAI,CAAC,IAAI,CAAC,IAAb,GAAuB,IAAI,CAAC,IAAI,CAAC,IAAjC,GAA2C,EARtD;SASA,UAAU,CAAC,IAAX,CAAgB,IAAhB,EAAsB,IAAI,CAAC,IAA3B,EAAiC,KAAjC,IAA0C,CAAI,QAAH,GAAiB,MAAI,QAArB,GAAqC,EAAtC,EAVlC;AAAA,CARV;;AAAA,MAqBA,GAAS,SAAC,IAAD,EAAO,IAAP;AACP;AAAA,iBAAe,QAAQ,IAAR,EAAc,IAAd,CAAf;SACA,MAAM,CAAC,WAAP,CAAmB,YAAY,CAAC,MAAb,CAAoB,CAApB,CAAnB,EAFO;AAAA,CArBT;;AAAA,KA0BA,GAAQ,SAAC,IAAD;SACN,UAAU,CAAC,QAAX,CAAoB,IAApB,EADM;AAAA,CA1BR;;AAAA,UA8BA,GAAa,SAAC,GAAD;SACX,UAAU,CAAC,aAAX,CAAyB,GAAzB,EADW;AAAA,CA9Bb;;AAAA,gBAkCA,GAAmB;SACjB,UAAU,CAAC,YAAX,GADiB;AAAA,CAlCnB;;AAAA,kBAsCA,GAAqB,SAAC,UAAD;SACnB,UAAU,CAAC,OAAX,EAAoB,CAAC,KAAK,CAAC,OAAQ,aADhB;AAAA,CAtCrB;;AAAA,UA0CA,GAAa,SAAC,GAAD;AACX,MAAoC,GAApC;AAAA,WAAO,UAAU,CAAC,SAAX,CAAqB,GAArB,CAAP;GAAA;AACA,SAAO,UAAU,CAAC,SAAX,EAAP,CAFW;AAAA,CA1Cb;;AAAA,OA8CA,GACE;AAAA,aAAW,SAAX;AAAA,EACA,SAAS,OADT;AAAA,EAEA,QAAQ,MAFR;AAAA,EAGA,OAAO,KAHP;AAAA,EAIA,YAAY,UAJZ;AAAA,EAKA,kBAAkB,gBALlB;AAAA,EAMA,YAAY,UANZ;AAAA,EAOA,oBAAoB,kBAPpB;CA/CF;;AAwDA,IAAG,MAAM,CAAC,QAAV;AACE;;yBAAA;AAAA,YAAQ,CAAC,cAAT,CAAwB,IAAxB,EAA8B,IAA9B;AAAA,GADF;CAxDA;;AA2DA,IAAG,MAAM,CAAC,QAAV;AACE,sBACE;AAAA,aAAS,OAAT;AAAA,IACA,QAAQ,MADR;GADF,CADF;CA3DA","file":"/packages/arillo_flow-router-helpers.js","sourcesContent":["# check for subscriptions to be ready\nsubsReady = (subs...) ->\n  return FlowRouter.subsReady() if subs.length is 1\n  subs = subs.slice(0, subs.length - 1)\n  _.reduce subs, (memo, sub) ->\n    memo and FlowRouter.subsReady(sub)\n  , true\n\n# return path\npathFor = (path, view = {hash:{}}) ->\n  throw new Error('no path defined') unless path\n  # set if run on server\n  view = hash: view unless view.hash\n  if path.hash?.route?\n    view = path\n    path = view.hash.route\n    delete view.hash.route\n  query = if view.hash.query then FlowRouter._qs.parse(view.hash.query) else {}\n  hashBang = if view.hash.hash then view.hash.hash else ''\n  FlowRouter.path(path, view.hash, query) + (if hashBang then \"##{hashBang}\" else '')\n\n# return absolute url\nurlFor = (path, view) ->\n  relativePath = pathFor(path, view)\n  Meteor.absoluteUrl(relativePath.substr(1))\n\n# get parameter\nparam = (name) ->\n  FlowRouter.getParam(name);\n\n# get query parameter\nqueryParam = (key) ->\n  FlowRouter.getQueryParam(key);\n\n# get current route name\ncurrentRouteName = () ->\n  FlowRouter.getRouteName()\n\n# get current route options\ncurrentRouteOption = (optionName) ->\n  FlowRouter.current().route.options[optionName]\n\n# deprecated\nisSubReady = (sub) ->\n  return FlowRouter.subsReady(sub) if sub\n  return FlowRouter.subsReady()\n\nhelpers =\n  subsReady: subsReady\n  pathFor: pathFor\n  urlFor: urlFor\n  param: param\n  queryParam: queryParam\n  currentRouteName: currentRouteName\n  isSubReady: isSubReady\n  currentRouteOption: currentRouteOption\n\nif Meteor.isClient\n  Template.registerHelper name, func for own name, func of helpers\n  \nif Meteor.isServer\n  FlowRouterHelpers = \n    pathFor: pathFor\n    urlFor: urlFor\n"]}}]