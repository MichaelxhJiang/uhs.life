[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar DDP = Package['ddp-client'].DDP;\nvar EJSON = Package.ejson.EJSON;\nvar EventEmitter = Package['raix:eventemitter'].EventEmitter;\nvar Mongo = Package.mongo.Mongo;\n\n/* Package-scope variables */\nvar _storageAdapters;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// packages/cfs_storage-adapter/packages/cfs_storage-adapter.js                        //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\n(function () {                                                                         // 1\n                                                                                       // 2\n///////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                               //    // 4\n// packages/cfs:storage-adapter/storageAdapter.client.js                         //    // 5\n//                                                                               //    // 6\n///////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                 //    // 8\n/* global FS, _storageAdapters:true, EventEmitter */                             // 1  // 9\n                                                                                 // 2  // 10\n// ############################################################################# // 3  // 11\n//                                                                               // 4  // 12\n// STORAGE ADAPTER                                                               // 5  // 13\n//                                                                               // 6  // 14\n// ############################################################################# // 7  // 15\n                                                                                 // 8  // 16\n_storageAdapters = {};                                                           // 9  // 17\n                                                                                 // 10\nFS.StorageAdapter = function(name, options, api) {                               // 11\n  var self = this;                                                               // 12\n                                                                                 // 13\n  // Check the api                                                               // 14\n  if (typeof api === 'undefined') {                                              // 15\n    throw new Error('FS.StorageAdapter please define an api');                   // 16\n  }                                                                              // 17\n                                                                                 // 18\n  // store reference for easy lookup by name                                     // 19\n  if (typeof _storageAdapters[name] !== 'undefined') {                           // 20\n    throw new Error('Storage name already exists: \"' + name + '\"');              // 21\n  } else {                                                                       // 22\n    _storageAdapters[name] = self;                                               // 23\n  }                                                                              // 24\n                                                                                 // 25\n  // extend self with options and other info                                     // 26\n  FS.Utility.extend(this, options || {}, {                                       // 27\n    name: name                                                                   // 28\n  });                                                                            // 29\n                                                                                 // 30\n  // XXX: TODO, add upload feature here...                                       // 31\n  // we default to ddp upload but really let the SA like S3Cloud overwrite to    // 32\n  // implement direct client to s3 upload                                        // 33\n                                                                                 // 34\n};                                                                               // 35\n                                                                                 // 36\nFS.StorageAdapter.prototype = new EventEmitter();                                // 37\n                                                                                 // 38\n///////////////////////////////////////////////////////////////////////////////////    // 47\n                                                                                       // 48\n}).call(this);                                                                         // 49\n                                                                                       // 50\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cfs:storage-adapter'] = {};\n\n})();\n","servePath":"/packages/cfs_storage-adapter.js"}]