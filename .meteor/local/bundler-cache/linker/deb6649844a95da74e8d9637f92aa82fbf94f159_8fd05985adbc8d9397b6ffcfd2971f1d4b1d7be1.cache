[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar _ = Package.underscore._;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett_dropzonejs/.npm/package/node_modules/dropzone/dist/dropzone.js                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\n/*                                                                                                                  // 2\n *                                                                                                                  // 3\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)                                                     // 4\n *                                                                                                                  // 5\n * Copyright (c) 2012, Matias Meno                                                                                  // 6\n *                                                                                                                  // 7\n * Permission is hereby granted, free of charge, to any person obtaining a copy                                     // 8\n * of this software and associated documentation files (the \"Software\"), to deal                                    // 9\n * in the Software without restriction, including without limitation the rights                                     // 10\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell                                        // 11\n * copies of the Software, and to permit persons to whom the Software is                                            // 12\n * furnished to do so, subject to the following conditions:                                                         // 13\n *                                                                                                                  // 14\n * The above copyright notice and this permission notice shall be included in                                       // 15\n * all copies or substantial portions of the Software.                                                              // 16\n *                                                                                                                  // 17\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR                                       // 18\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                                         // 19\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                                      // 20\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                           // 21\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                                    // 22\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                                        // 23\n * THE SOFTWARE.                                                                                                    // 24\n *                                                                                                                  // 25\n */                                                                                                                 // 26\n                                                                                                                    // 27\n(function() {                                                                                                       // 28\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,             // 29\n    __slice = [].slice,                                                                                             // 30\n    __hasProp = {}.hasOwnProperty,                                                                                  // 31\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n                                                                                                                    // 33\n  noop = function() {};                                                                                             // 34\n                                                                                                                    // 35\n  Emitter = (function() {                                                                                           // 36\n    function Emitter() {}                                                                                           // 37\n                                                                                                                    // 38\n    Emitter.prototype.addEventListener = Emitter.prototype.on;                                                      // 39\n                                                                                                                    // 40\n    Emitter.prototype.on = function(event, fn) {                                                                    // 41\n      this._callbacks = this._callbacks || {};                                                                      // 42\n      if (!this._callbacks[event]) {                                                                                // 43\n        this._callbacks[event] = [];                                                                                // 44\n      }                                                                                                             // 45\n      this._callbacks[event].push(fn);                                                                              // 46\n      return this;                                                                                                  // 47\n    };                                                                                                              // 48\n                                                                                                                    // 49\n    Emitter.prototype.emit = function() {                                                                           // 50\n      var args, callback, callbacks, event, _i, _len;                                                               // 51\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                         // 52\n      this._callbacks = this._callbacks || {};                                                                      // 53\n      callbacks = this._callbacks[event];                                                                           // 54\n      if (callbacks) {                                                                                              // 55\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {                                                    // 56\n          callback = callbacks[_i];                                                                                 // 57\n          callback.apply(this, args);                                                                               // 58\n        }                                                                                                           // 59\n      }                                                                                                             // 60\n      return this;                                                                                                  // 61\n    };                                                                                                              // 62\n                                                                                                                    // 63\n    Emitter.prototype.removeListener = Emitter.prototype.off;                                                       // 64\n                                                                                                                    // 65\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;                                                   // 66\n                                                                                                                    // 67\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;                                                  // 68\n                                                                                                                    // 69\n    Emitter.prototype.off = function(event, fn) {                                                                   // 70\n      var callback, callbacks, i, _i, _len;                                                                         // 71\n      if (!this._callbacks || arguments.length === 0) {                                                             // 72\n        this._callbacks = {};                                                                                       // 73\n        return this;                                                                                                // 74\n      }                                                                                                             // 75\n      callbacks = this._callbacks[event];                                                                           // 76\n      if (!callbacks) {                                                                                             // 77\n        return this;                                                                                                // 78\n      }                                                                                                             // 79\n      if (arguments.length === 1) {                                                                                 // 80\n        delete this._callbacks[event];                                                                              // 81\n        return this;                                                                                                // 82\n      }                                                                                                             // 83\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {                                              // 84\n        callback = callbacks[i];                                                                                    // 85\n        if (callback === fn) {                                                                                      // 86\n          callbacks.splice(i, 1);                                                                                   // 87\n          break;                                                                                                    // 88\n        }                                                                                                           // 89\n      }                                                                                                             // 90\n      return this;                                                                                                  // 91\n    };                                                                                                              // 92\n                                                                                                                    // 93\n    return Emitter;                                                                                                 // 94\n                                                                                                                    // 95\n  })();                                                                                                             // 96\n                                                                                                                    // 97\n  Dropzone = (function(_super) {                                                                                    // 98\n    var extend, resolveOption;                                                                                      // 99\n                                                                                                                    // 100\n    __extends(Dropzone, _super);                                                                                    // 101\n                                                                                                                    // 102\n    Dropzone.prototype.Emitter = Emitter;                                                                           // 103\n                                                                                                                    // 104\n                                                                                                                    // 105\n    /*                                                                                                              // 106\n    This is a list of all available events you can register on a dropzone object.                                   // 107\n                                                                                                                    // 108\n    You can register an event handler like this:                                                                    // 109\n                                                                                                                    // 110\n        dropzone.on(\"dragEnter\", function() { });                                                                   // 111\n     */                                                                                                             // 112\n                                                                                                                    // 113\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n                                                                                                                    // 115\n    Dropzone.prototype.defaultOptions = {                                                                           // 116\n      url: null,                                                                                                    // 117\n      method: \"post\",                                                                                               // 118\n      withCredentials: false,                                                                                       // 119\n      parallelUploads: 2,                                                                                           // 120\n      uploadMultiple: false,                                                                                        // 121\n      maxFilesize: 256,                                                                                             // 122\n      paramName: \"file\",                                                                                            // 123\n      createImageThumbnails: true,                                                                                  // 124\n      maxThumbnailFilesize: 10,                                                                                     // 125\n      thumbnailWidth: 120,                                                                                          // 126\n      thumbnailHeight: 120,                                                                                         // 127\n      filesizeBase: 1000,                                                                                           // 128\n      maxFiles: null,                                                                                               // 129\n      params: {},                                                                                                   // 130\n      clickable: true,                                                                                              // 131\n      ignoreHiddenFiles: true,                                                                                      // 132\n      acceptedFiles: null,                                                                                          // 133\n      acceptedMimeTypes: null,                                                                                      // 134\n      autoProcessQueue: true,                                                                                       // 135\n      autoQueue: true,                                                                                              // 136\n      addRemoveLinks: false,                                                                                        // 137\n      previewsContainer: null,                                                                                      // 138\n      hiddenInputContainer: \"body\",                                                                                 // 139\n      capture: null,                                                                                                // 140\n      dictDefaultMessage: \"Drop files here to upload\",                                                              // 141\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",                               // 142\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",          // 143\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",                       // 144\n      dictInvalidFileType: \"You can't upload files of this type.\",                                                  // 145\n      dictResponseError: \"Server responded with {{statusCode}} code.\",                                              // 146\n      dictCancelUpload: \"Cancel upload\",                                                                            // 147\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",                                 // 148\n      dictRemoveFile: \"Remove file\",                                                                                // 149\n      dictRemoveFileConfirmation: null,                                                                             // 150\n      dictMaxFilesExceeded: \"You can not upload any more files.\",                                                   // 151\n      accept: function(file, done) {                                                                                // 152\n        return done();                                                                                              // 153\n      },                                                                                                            // 154\n      init: function() {                                                                                            // 155\n        return noop;                                                                                                // 156\n      },                                                                                                            // 157\n      forceFallback: false,                                                                                         // 158\n      fallback: function() {                                                                                        // 159\n        var child, messageElement, span, _i, _len, _ref;                                                            // 160\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";                         // 161\n        _ref = this.element.getElementsByTagName(\"div\");                                                            // 162\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 163\n          child = _ref[_i];                                                                                         // 164\n          if (/(^| )dz-message($| )/.test(child.className)) {                                                       // 165\n            messageElement = child;                                                                                 // 166\n            child.className = \"dz-message\";                                                                         // 167\n            continue;                                                                                               // 168\n          }                                                                                                         // 169\n        }                                                                                                           // 170\n        if (!messageElement) {                                                                                      // 171\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");                 // 172\n          this.element.appendChild(messageElement);                                                                 // 173\n        }                                                                                                           // 174\n        span = messageElement.getElementsByTagName(\"span\")[0];                                                      // 175\n        if (span) {                                                                                                 // 176\n          if (span.textContent != null) {                                                                           // 177\n            span.textContent = this.options.dictFallbackMessage;                                                    // 178\n          } else if (span.innerText != null) {                                                                      // 179\n            span.innerText = this.options.dictFallbackMessage;                                                      // 180\n          }                                                                                                         // 181\n        }                                                                                                           // 182\n        return this.element.appendChild(this.getFallbackForm());                                                    // 183\n      },                                                                                                            // 184\n      resize: function(file) {                                                                                      // 185\n        var info, srcRatio, trgRatio;                                                                               // 186\n        info = {                                                                                                    // 187\n          srcX: 0,                                                                                                  // 188\n          srcY: 0,                                                                                                  // 189\n          srcWidth: file.width,                                                                                     // 190\n          srcHeight: file.height                                                                                    // 191\n        };                                                                                                          // 192\n        srcRatio = file.width / file.height;                                                                        // 193\n        info.optWidth = this.options.thumbnailWidth;                                                                // 194\n        info.optHeight = this.options.thumbnailHeight;                                                              // 195\n        if ((info.optWidth == null) && (info.optHeight == null)) {                                                  // 196\n          info.optWidth = info.srcWidth;                                                                            // 197\n          info.optHeight = info.srcHeight;                                                                          // 198\n        } else if (info.optWidth == null) {                                                                         // 199\n          info.optWidth = srcRatio * info.optHeight;                                                                // 200\n        } else if (info.optHeight == null) {                                                                        // 201\n          info.optHeight = (1 / srcRatio) * info.optWidth;                                                          // 202\n        }                                                                                                           // 203\n        trgRatio = info.optWidth / info.optHeight;                                                                  // 204\n        if (file.height < info.optHeight || file.width < info.optWidth) {                                           // 205\n          info.trgHeight = info.srcHeight;                                                                          // 206\n          info.trgWidth = info.srcWidth;                                                                            // 207\n        } else {                                                                                                    // 208\n          if (srcRatio > trgRatio) {                                                                                // 209\n            info.srcHeight = file.height;                                                                           // 210\n            info.srcWidth = info.srcHeight * trgRatio;                                                              // 211\n          } else {                                                                                                  // 212\n            info.srcWidth = file.width;                                                                             // 213\n            info.srcHeight = info.srcWidth / trgRatio;                                                              // 214\n          }                                                                                                         // 215\n        }                                                                                                           // 216\n        info.srcX = (file.width - info.srcWidth) / 2;                                                               // 217\n        info.srcY = (file.height - info.srcHeight) / 2;                                                             // 218\n        return info;                                                                                                // 219\n      },                                                                                                            // 220\n                                                                                                                    // 221\n      /*                                                                                                            // 222\n      Those functions register themselves to the events on init and handle all                                      // 223\n      the user interface specific stuff. Overwriting them won't break the upload                                    // 224\n      but can break the way it's displayed.                                                                         // 225\n      You can overwrite them if you don't like the default behavior. If you just                                    // 226\n      want to add an additional event handler, register it on the dropzone object                                   // 227\n      and don't overwrite those options.                                                                            // 228\n       */                                                                                                           // 229\n      drop: function(e) {                                                                                           // 230\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 231\n      },                                                                                                            // 232\n      dragstart: noop,                                                                                              // 233\n      dragend: function(e) {                                                                                        // 234\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 235\n      },                                                                                                            // 236\n      dragenter: function(e) {                                                                                      // 237\n        return this.element.classList.add(\"dz-drag-hover\");                                                         // 238\n      },                                                                                                            // 239\n      dragover: function(e) {                                                                                       // 240\n        return this.element.classList.add(\"dz-drag-hover\");                                                         // 241\n      },                                                                                                            // 242\n      dragleave: function(e) {                                                                                      // 243\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 244\n      },                                                                                                            // 245\n      paste: noop,                                                                                                  // 246\n      reset: function() {                                                                                           // 247\n        return this.element.classList.remove(\"dz-started\");                                                         // 248\n      },                                                                                                            // 249\n      addedfile: function(file) {                                                                                   // 250\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;        // 251\n        if (this.element === this.previewsContainer) {                                                              // 252\n          this.element.classList.add(\"dz-started\");                                                                 // 253\n        }                                                                                                           // 254\n        if (this.previewsContainer) {                                                                               // 255\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());                        // 256\n          file.previewTemplate = file.previewElement;                                                               // 257\n          this.previewsContainer.appendChild(file.previewElement);                                                  // 258\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");                                            // 259\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 260\n            node = _ref[_i];                                                                                        // 261\n            node.textContent = file.name;                                                                           // 262\n          }                                                                                                         // 263\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");                                           // 264\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {                                                    // 265\n            node = _ref1[_j];                                                                                       // 266\n            node.innerHTML = this.filesize(file.size);                                                              // 267\n          }                                                                                                         // 268\n          if (this.options.addRemoveLinks) {                                                                        // 269\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);                                                      // 271\n          }                                                                                                         // 272\n          removeFileEvent = (function(_this) {                                                                      // 273\n            return function(e) {                                                                                    // 274\n              e.preventDefault();                                                                                   // 275\n              e.stopPropagation();                                                                                  // 276\n              if (file.status === Dropzone.UPLOADING) {                                                             // 277\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {                    // 278\n                  return _this.removeFile(file);                                                                    // 279\n                });                                                                                                 // 280\n              } else {                                                                                              // 281\n                if (_this.options.dictRemoveFileConfirmation) {                                                     // 282\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {                    // 283\n                    return _this.removeFile(file);                                                                  // 284\n                  });                                                                                               // 285\n                } else {                                                                                            // 286\n                  return _this.removeFile(file);                                                                    // 287\n                }                                                                                                   // 288\n              }                                                                                                     // 289\n            };                                                                                                      // 290\n          })(this);                                                                                                 // 291\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");                                         // 292\n          _results = [];                                                                                            // 293\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {                                                    // 294\n            removeLink = _ref2[_k];                                                                                 // 295\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));                                   // 296\n          }                                                                                                         // 297\n          return _results;                                                                                          // 298\n        }                                                                                                           // 299\n      },                                                                                                            // 300\n      removedfile: function(file) {                                                                                 // 301\n        var _ref;                                                                                                   // 302\n        if (file.previewElement) {                                                                                  // 303\n          if ((_ref = file.previewElement) != null) {                                                               // 304\n            _ref.parentNode.removeChild(file.previewElement);                                                       // 305\n          }                                                                                                         // 306\n        }                                                                                                           // 307\n        return this._updateMaxFilesReachedClass();                                                                  // 308\n      },                                                                                                            // 309\n      thumbnail: function(file, dataUrl) {                                                                          // 310\n        var thumbnailElement, _i, _len, _ref;                                                                       // 311\n        if (file.previewElement) {                                                                                  // 312\n          file.previewElement.classList.remove(\"dz-file-preview\");                                                  // 313\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");                                       // 314\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 315\n            thumbnailElement = _ref[_i];                                                                            // 316\n            thumbnailElement.alt = file.name;                                                                       // 317\n            thumbnailElement.src = dataUrl;                                                                         // 318\n          }                                                                                                         // 319\n          return setTimeout(((function(_this) {                                                                     // 320\n            return function() {                                                                                     // 321\n              return file.previewElement.classList.add(\"dz-image-preview\");                                         // 322\n            };                                                                                                      // 323\n          })(this)), 1);                                                                                            // 324\n        }                                                                                                           // 325\n      },                                                                                                            // 326\n      error: function(file, message) {                                                                              // 327\n        var node, _i, _len, _ref, _results;                                                                         // 328\n        if (file.previewElement) {                                                                                  // 329\n          file.previewElement.classList.add(\"dz-error\");                                                            // 330\n          if (typeof message !== \"String\" && message.error) {                                                       // 331\n            message = message.error;                                                                                // 332\n          }                                                                                                         // 333\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");                                    // 334\n          _results = [];                                                                                            // 335\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 336\n            node = _ref[_i];                                                                                        // 337\n            _results.push(node.textContent = message);                                                              // 338\n          }                                                                                                         // 339\n          return _results;                                                                                          // 340\n        }                                                                                                           // 341\n      },                                                                                                            // 342\n      errormultiple: noop,                                                                                          // 343\n      processing: function(file) {                                                                                  // 344\n        if (file.previewElement) {                                                                                  // 345\n          file.previewElement.classList.add(\"dz-processing\");                                                       // 346\n          if (file._removeLink) {                                                                                   // 347\n            return file._removeLink.textContent = this.options.dictCancelUpload;                                    // 348\n          }                                                                                                         // 349\n        }                                                                                                           // 350\n      },                                                                                                            // 351\n      processingmultiple: noop,                                                                                     // 352\n      uploadprogress: function(file, progress, bytesSent) {                                                         // 353\n        var node, _i, _len, _ref, _results;                                                                         // 354\n        if (file.previewElement) {                                                                                  // 355\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");                                  // 356\n          _results = [];                                                                                            // 357\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 358\n            node = _ref[_i];                                                                                        // 359\n            if (node.nodeName === 'PROGRESS') {                                                                     // 360\n              _results.push(node.value = progress);                                                                 // 361\n            } else {                                                                                                // 362\n              _results.push(node.style.width = \"\" + progress + \"%\");                                                // 363\n            }                                                                                                       // 364\n          }                                                                                                         // 365\n          return _results;                                                                                          // 366\n        }                                                                                                           // 367\n      },                                                                                                            // 368\n      totaluploadprogress: noop,                                                                                    // 369\n      sending: noop,                                                                                                // 370\n      sendingmultiple: noop,                                                                                        // 371\n      success: function(file) {                                                                                     // 372\n        if (file.previewElement) {                                                                                  // 373\n          return file.previewElement.classList.add(\"dz-success\");                                                   // 374\n        }                                                                                                           // 375\n      },                                                                                                            // 376\n      successmultiple: noop,                                                                                        // 377\n      canceled: function(file) {                                                                                    // 378\n        return this.emit(\"error\", file, \"Upload canceled.\");                                                        // 379\n      },                                                                                                            // 380\n      canceledmultiple: noop,                                                                                       // 381\n      complete: function(file) {                                                                                    // 382\n        if (file._removeLink) {                                                                                     // 383\n          file._removeLink.textContent = this.options.dictRemoveFile;                                               // 384\n        }                                                                                                           // 385\n        if (file.previewElement) {                                                                                  // 386\n          return file.previewElement.classList.add(\"dz-complete\");                                                  // 387\n        }                                                                                                           // 388\n      },                                                                                                            // 389\n      completemultiple: noop,                                                                                       // 390\n      maxfilesexceeded: noop,                                                                                       // 391\n      maxfilesreached: noop,                                                                                        // 392\n      queuecomplete: noop,                                                                                          // 393\n      addedfiles: noop,                                                                                             // 394\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };                                                                                                              // 396\n                                                                                                                    // 397\n    extend = function() {                                                                                           // 398\n      var key, object, objects, target, val, _i, _len;                                                              // 399\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                     // 400\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {                                                        // 401\n        object = objects[_i];                                                                                       // 402\n        for (key in object) {                                                                                       // 403\n          val = object[key];                                                                                        // 404\n          target[key] = val;                                                                                        // 405\n        }                                                                                                           // 406\n      }                                                                                                             // 407\n      return target;                                                                                                // 408\n    };                                                                                                              // 409\n                                                                                                                    // 410\n    function Dropzone(element, options) {                                                                           // 411\n      var elementOptions, fallback, _ref;                                                                           // 412\n      this.element = element;                                                                                       // 413\n      this.version = Dropzone.version;                                                                              // 414\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");                // 415\n      this.clickableElements = [];                                                                                  // 416\n      this.listeners = [];                                                                                          // 417\n      this.files = [];                                                                                              // 418\n      if (typeof this.element === \"string\") {                                                                       // 419\n        this.element = document.querySelector(this.element);                                                        // 420\n      }                                                                                                             // 421\n      if (!(this.element && (this.element.nodeType != null))) {                                                     // 422\n        throw new Error(\"Invalid dropzone element.\");                                                               // 423\n      }                                                                                                             // 424\n      if (this.element.dropzone) {                                                                                  // 425\n        throw new Error(\"Dropzone already attached.\");                                                              // 426\n      }                                                                                                             // 427\n      Dropzone.instances.push(this);                                                                                // 428\n      this.element.dropzone = this;                                                                                 // 429\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};                       // 430\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});               // 431\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {                                           // 432\n        return this.options.fallback.call(this);                                                                    // 433\n      }                                                                                                             // 434\n      if (this.options.url == null) {                                                                               // 435\n        this.options.url = this.element.getAttribute(\"action\");                                                     // 436\n      }                                                                                                             // 437\n      if (!this.options.url) {                                                                                      // 438\n        throw new Error(\"No URL provided.\");                                                                        // 439\n      }                                                                                                             // 440\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {                                           // 441\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }                                                                                                             // 443\n      if (this.options.acceptedMimeTypes) {                                                                         // 444\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;                                                // 445\n        delete this.options.acceptedMimeTypes;                                                                      // 446\n      }                                                                                                             // 447\n      this.options.method = this.options.method.toUpperCase();                                                      // 448\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {                                         // 449\n        fallback.parentNode.removeChild(fallback);                                                                  // 450\n      }                                                                                                             // 451\n      if (this.options.previewsContainer !== false) {                                                               // 452\n        if (this.options.previewsContainer) {                                                                       // 453\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");        // 454\n        } else {                                                                                                    // 455\n          this.previewsContainer = this.element;                                                                    // 456\n        }                                                                                                           // 457\n      }                                                                                                             // 458\n      if (this.options.clickable) {                                                                                 // 459\n        if (this.options.clickable === true) {                                                                      // 460\n          this.clickableElements = [this.element];                                                                  // 461\n        } else {                                                                                                    // 462\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");                       // 463\n        }                                                                                                           // 464\n      }                                                                                                             // 465\n      this.init();                                                                                                  // 466\n    }                                                                                                               // 467\n                                                                                                                    // 468\n    Dropzone.prototype.getAcceptedFiles = function() {                                                              // 469\n      var file, _i, _len, _ref, _results;                                                                           // 470\n      _ref = this.files;                                                                                            // 471\n      _results = [];                                                                                                // 472\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 473\n        file = _ref[_i];                                                                                            // 474\n        if (file.accepted) {                                                                                        // 475\n          _results.push(file);                                                                                      // 476\n        }                                                                                                           // 477\n      }                                                                                                             // 478\n      return _results;                                                                                              // 479\n    };                                                                                                              // 480\n                                                                                                                    // 481\n    Dropzone.prototype.getRejectedFiles = function() {                                                              // 482\n      var file, _i, _len, _ref, _results;                                                                           // 483\n      _ref = this.files;                                                                                            // 484\n      _results = [];                                                                                                // 485\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 486\n        file = _ref[_i];                                                                                            // 487\n        if (!file.accepted) {                                                                                       // 488\n          _results.push(file);                                                                                      // 489\n        }                                                                                                           // 490\n      }                                                                                                             // 491\n      return _results;                                                                                              // 492\n    };                                                                                                              // 493\n                                                                                                                    // 494\n    Dropzone.prototype.getFilesWithStatus = function(status) {                                                      // 495\n      var file, _i, _len, _ref, _results;                                                                           // 496\n      _ref = this.files;                                                                                            // 497\n      _results = [];                                                                                                // 498\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 499\n        file = _ref[_i];                                                                                            // 500\n        if (file.status === status) {                                                                               // 501\n          _results.push(file);                                                                                      // 502\n        }                                                                                                           // 503\n      }                                                                                                             // 504\n      return _results;                                                                                              // 505\n    };                                                                                                              // 506\n                                                                                                                    // 507\n    Dropzone.prototype.getQueuedFiles = function() {                                                                // 508\n      return this.getFilesWithStatus(Dropzone.QUEUED);                                                              // 509\n    };                                                                                                              // 510\n                                                                                                                    // 511\n    Dropzone.prototype.getUploadingFiles = function() {                                                             // 512\n      return this.getFilesWithStatus(Dropzone.UPLOADING);                                                           // 513\n    };                                                                                                              // 514\n                                                                                                                    // 515\n    Dropzone.prototype.getAddedFiles = function() {                                                                 // 516\n      return this.getFilesWithStatus(Dropzone.ADDED);                                                               // 517\n    };                                                                                                              // 518\n                                                                                                                    // 519\n    Dropzone.prototype.getActiveFiles = function() {                                                                // 520\n      var file, _i, _len, _ref, _results;                                                                           // 521\n      _ref = this.files;                                                                                            // 522\n      _results = [];                                                                                                // 523\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 524\n        file = _ref[_i];                                                                                            // 525\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {                                // 526\n          _results.push(file);                                                                                      // 527\n        }                                                                                                           // 528\n      }                                                                                                             // 529\n      return _results;                                                                                              // 530\n    };                                                                                                              // 531\n                                                                                                                    // 532\n    Dropzone.prototype.init = function() {                                                                          // 533\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;                                    // 534\n      if (this.element.tagName === \"form\") {                                                                        // 535\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");                                                // 536\n      }                                                                                                             // 537\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {              // 538\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }                                                                                                             // 540\n      if (this.clickableElements.length) {                                                                          // 541\n        setupHiddenFileInput = (function(_this) {                                                                   // 542\n          return function() {                                                                                       // 543\n            if (_this.hiddenFileInput) {                                                                            // 544\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);                                  // 545\n            }                                                                                                       // 546\n            _this.hiddenFileInput = document.createElement(\"input\");                                                // 547\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");                                                     // 548\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {                                   // 549\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");                                           // 550\n            }                                                                                                       // 551\n            _this.hiddenFileInput.className = \"dz-hidden-input\";                                                    // 552\n            if (_this.options.acceptedFiles != null) {                                                              // 553\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);                            // 554\n            }                                                                                                       // 555\n            if (_this.options.capture != null) {                                                                    // 556\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);                                 // 557\n            }                                                                                                       // 558\n            _this.hiddenFileInput.style.visibility = \"hidden\";                                                      // 559\n            _this.hiddenFileInput.style.position = \"absolute\";                                                      // 560\n            _this.hiddenFileInput.style.top = \"0\";                                                                  // 561\n            _this.hiddenFileInput.style.left = \"0\";                                                                 // 562\n            _this.hiddenFileInput.style.height = \"0\";                                                               // 563\n            _this.hiddenFileInput.style.width = \"0\";                                                                // 564\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);          // 565\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {                                    // 566\n              var file, files, _i, _len;                                                                            // 567\n              files = _this.hiddenFileInput.files;                                                                  // 568\n              if (files.length) {                                                                                   // 569\n                for (_i = 0, _len = files.length; _i < _len; _i++) {                                                // 570\n                  file = files[_i];                                                                                 // 571\n                  _this.addFile(file);                                                                              // 572\n                }                                                                                                   // 573\n              }                                                                                                     // 574\n              _this.emit(\"addedfiles\", files);                                                                      // 575\n              return setupHiddenFileInput();                                                                        // 576\n            });                                                                                                     // 577\n          };                                                                                                        // 578\n        })(this);                                                                                                   // 579\n        setupHiddenFileInput();                                                                                     // 580\n      }                                                                                                             // 581\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;                                             // 582\n      _ref1 = this.events;                                                                                          // 583\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {                                                          // 584\n        eventName = _ref1[_i];                                                                                      // 585\n        this.on(eventName, this.options[eventName]);                                                                // 586\n      }                                                                                                             // 587\n      this.on(\"uploadprogress\", (function(_this) {                                                                  // 588\n        return function() {                                                                                         // 589\n          return _this.updateTotalUploadProgress();                                                                 // 590\n        };                                                                                                          // 591\n      })(this));                                                                                                    // 592\n      this.on(\"removedfile\", (function(_this) {                                                                     // 593\n        return function() {                                                                                         // 594\n          return _this.updateTotalUploadProgress();                                                                 // 595\n        };                                                                                                          // 596\n      })(this));                                                                                                    // 597\n      this.on(\"canceled\", (function(_this) {                                                                        // 598\n        return function(file) {                                                                                     // 599\n          return _this.emit(\"complete\", file);                                                                      // 600\n        };                                                                                                          // 601\n      })(this));                                                                                                    // 602\n      this.on(\"complete\", (function(_this) {                                                                        // 603\n        return function(file) {                                                                                     // 604\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {                                                                         // 606\n              return _this.emit(\"queuecomplete\");                                                                   // 607\n            }), 0);                                                                                                 // 608\n          }                                                                                                         // 609\n        };                                                                                                          // 610\n      })(this));                                                                                                    // 611\n      noPropagation = function(e) {                                                                                 // 612\n        e.stopPropagation();                                                                                        // 613\n        if (e.preventDefault) {                                                                                     // 614\n          return e.preventDefault();                                                                                // 615\n        } else {                                                                                                    // 616\n          return e.returnValue = false;                                                                             // 617\n        }                                                                                                           // 618\n      };                                                                                                            // 619\n      this.listeners = [                                                                                            // 620\n        {                                                                                                           // 621\n          element: this.element,                                                                                    // 622\n          events: {                                                                                                 // 623\n            \"dragstart\": (function(_this) {                                                                         // 624\n              return function(e) {                                                                                  // 625\n                return _this.emit(\"dragstart\", e);                                                                  // 626\n              };                                                                                                    // 627\n            })(this),                                                                                               // 628\n            \"dragenter\": (function(_this) {                                                                         // 629\n              return function(e) {                                                                                  // 630\n                noPropagation(e);                                                                                   // 631\n                return _this.emit(\"dragenter\", e);                                                                  // 632\n              };                                                                                                    // 633\n            })(this),                                                                                               // 634\n            \"dragover\": (function(_this) {                                                                          // 635\n              return function(e) {                                                                                  // 636\n                var efct;                                                                                           // 637\n                try {                                                                                               // 638\n                  efct = e.dataTransfer.effectAllowed;                                                              // 639\n                } catch (_error) {}                                                                                 // 640\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';               // 641\n                noPropagation(e);                                                                                   // 642\n                return _this.emit(\"dragover\", e);                                                                   // 643\n              };                                                                                                    // 644\n            })(this),                                                                                               // 645\n            \"dragleave\": (function(_this) {                                                                         // 646\n              return function(e) {                                                                                  // 647\n                return _this.emit(\"dragleave\", e);                                                                  // 648\n              };                                                                                                    // 649\n            })(this),                                                                                               // 650\n            \"drop\": (function(_this) {                                                                              // 651\n              return function(e) {                                                                                  // 652\n                noPropagation(e);                                                                                   // 653\n                return _this.drop(e);                                                                               // 654\n              };                                                                                                    // 655\n            })(this),                                                                                               // 656\n            \"dragend\": (function(_this) {                                                                           // 657\n              return function(e) {                                                                                  // 658\n                return _this.emit(\"dragend\", e);                                                                    // 659\n              };                                                                                                    // 660\n            })(this)                                                                                                // 661\n          }                                                                                                         // 662\n        }                                                                                                           // 663\n      ];                                                                                                            // 664\n      this.clickableElements.forEach((function(_this) {                                                             // 665\n        return function(clickableElement) {                                                                         // 666\n          return _this.listeners.push({                                                                             // 667\n            element: clickableElement,                                                                              // 668\n            events: {                                                                                               // 669\n              \"click\": function(evt) {                                                                              // 670\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();                                                                    // 672\n                }                                                                                                   // 673\n                return true;                                                                                        // 674\n              }                                                                                                     // 675\n            }                                                                                                       // 676\n          });                                                                                                       // 677\n        };                                                                                                          // 678\n      })(this));                                                                                                    // 679\n      this.enable();                                                                                                // 680\n      return this.options.init.call(this);                                                                          // 681\n    };                                                                                                              // 682\n                                                                                                                    // 683\n    Dropzone.prototype.destroy = function() {                                                                       // 684\n      var _ref;                                                                                                     // 685\n      this.disable();                                                                                               // 686\n      this.removeAllFiles(true);                                                                                    // 687\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {                                       // 688\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);                                          // 689\n        this.hiddenFileInput = null;                                                                                // 690\n      }                                                                                                             // 691\n      delete this.element.dropzone;                                                                                 // 692\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);                                        // 693\n    };                                                                                                              // 694\n                                                                                                                    // 695\n    Dropzone.prototype.updateTotalUploadProgress = function() {                                                     // 696\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;                       // 697\n      totalBytesSent = 0;                                                                                           // 698\n      totalBytes = 0;                                                                                               // 699\n      activeFiles = this.getActiveFiles();                                                                          // 700\n      if (activeFiles.length) {                                                                                     // 701\n        _ref = this.getActiveFiles();                                                                               // 702\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 703\n          file = _ref[_i];                                                                                          // 704\n          totalBytesSent += file.upload.bytesSent;                                                                  // 705\n          totalBytes += file.upload.total;                                                                          // 706\n        }                                                                                                           // 707\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;                                                    // 708\n      } else {                                                                                                      // 709\n        totalUploadProgress = 100;                                                                                  // 710\n      }                                                                                                             // 711\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);                     // 712\n    };                                                                                                              // 713\n                                                                                                                    // 714\n    Dropzone.prototype._getParamName = function(n) {                                                                // 715\n      if (typeof this.options.paramName === \"function\") {                                                           // 716\n        return this.options.paramName(n);                                                                           // 717\n      } else {                                                                                                      // 718\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");                    // 719\n      }                                                                                                             // 720\n    };                                                                                                              // 721\n                                                                                                                    // 722\n    Dropzone.prototype.getFallbackForm = function() {                                                               // 723\n      var existingFallback, fields, fieldsString, form;                                                             // 724\n      if (existingFallback = this.getExistingFallback()) {                                                          // 725\n        return existingFallback;                                                                                    // 726\n      }                                                                                                             // 727\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";                                                                 // 728\n      if (this.options.dictFallbackText) {                                                                          // 729\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";                                             // 730\n      }                                                                                                             // 731\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);                                                                // 733\n      if (this.element.tagName !== \"FORM\") {                                                                        // 734\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);                                                                                   // 736\n      } else {                                                                                                      // 737\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");                                                // 738\n        this.element.setAttribute(\"method\", this.options.method);                                                   // 739\n      }                                                                                                             // 740\n      return form != null ? form : fields;                                                                          // 741\n    };                                                                                                              // 742\n                                                                                                                    // 743\n    Dropzone.prototype.getExistingFallback = function() {                                                           // 744\n      var fallback, getFallback, tagName, _i, _len, _ref;                                                           // 745\n      getFallback = function(elements) {                                                                            // 746\n        var el, _i, _len;                                                                                           // 747\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {                                                     // 748\n          el = elements[_i];                                                                                        // 749\n          if (/(^| )fallback($| )/.test(el.className)) {                                                            // 750\n            return el;                                                                                              // 751\n          }                                                                                                         // 752\n        }                                                                                                           // 753\n      };                                                                                                            // 754\n      _ref = [\"div\", \"form\"];                                                                                       // 755\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 756\n        tagName = _ref[_i];                                                                                         // 757\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {                                   // 758\n          return fallback;                                                                                          // 759\n        }                                                                                                           // 760\n      }                                                                                                             // 761\n    };                                                                                                              // 762\n                                                                                                                    // 763\n    Dropzone.prototype.setupEventListeners = function() {                                                           // 764\n      var elementListeners, event, listener, _i, _len, _ref, _results;                                              // 765\n      _ref = this.listeners;                                                                                        // 766\n      _results = [];                                                                                                // 767\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 768\n        elementListeners = _ref[_i];                                                                                // 769\n        _results.push((function() {                                                                                 // 770\n          var _ref1, _results1;                                                                                     // 771\n          _ref1 = elementListeners.events;                                                                          // 772\n          _results1 = [];                                                                                           // 773\n          for (event in _ref1) {                                                                                    // 774\n            listener = _ref1[event];                                                                                // 775\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));                      // 776\n          }                                                                                                         // 777\n          return _results1;                                                                                         // 778\n        })());                                                                                                      // 779\n      }                                                                                                             // 780\n      return _results;                                                                                              // 781\n    };                                                                                                              // 782\n                                                                                                                    // 783\n    Dropzone.prototype.removeEventListeners = function() {                                                          // 784\n      var elementListeners, event, listener, _i, _len, _ref, _results;                                              // 785\n      _ref = this.listeners;                                                                                        // 786\n      _results = [];                                                                                                // 787\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 788\n        elementListeners = _ref[_i];                                                                                // 789\n        _results.push((function() {                                                                                 // 790\n          var _ref1, _results1;                                                                                     // 791\n          _ref1 = elementListeners.events;                                                                          // 792\n          _results1 = [];                                                                                           // 793\n          for (event in _ref1) {                                                                                    // 794\n            listener = _ref1[event];                                                                                // 795\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));                   // 796\n          }                                                                                                         // 797\n          return _results1;                                                                                         // 798\n        })());                                                                                                      // 799\n      }                                                                                                             // 800\n      return _results;                                                                                              // 801\n    };                                                                                                              // 802\n                                                                                                                    // 803\n    Dropzone.prototype.disable = function() {                                                                       // 804\n      var file, _i, _len, _ref, _results;                                                                           // 805\n      this.clickableElements.forEach(function(element) {                                                            // 806\n        return element.classList.remove(\"dz-clickable\");                                                            // 807\n      });                                                                                                           // 808\n      this.removeEventListeners();                                                                                  // 809\n      _ref = this.files;                                                                                            // 810\n      _results = [];                                                                                                // 811\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 812\n        file = _ref[_i];                                                                                            // 813\n        _results.push(this.cancelUpload(file));                                                                     // 814\n      }                                                                                                             // 815\n      return _results;                                                                                              // 816\n    };                                                                                                              // 817\n                                                                                                                    // 818\n    Dropzone.prototype.enable = function() {                                                                        // 819\n      this.clickableElements.forEach(function(element) {                                                            // 820\n        return element.classList.add(\"dz-clickable\");                                                               // 821\n      });                                                                                                           // 822\n      return this.setupEventListeners();                                                                            // 823\n    };                                                                                                              // 824\n                                                                                                                    // 825\n    Dropzone.prototype.filesize = function(size) {                                                                  // 826\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;                                             // 827\n      selectedSize = 0;                                                                                             // 828\n      selectedUnit = \"b\";                                                                                           // 829\n      if (size > 0) {                                                                                               // 830\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];                                                                      // 831\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {                                                // 832\n          unit = units[i];                                                                                          // 833\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;                                                 // 834\n          if (size >= cutoff) {                                                                                     // 835\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);                                       // 836\n            selectedUnit = unit;                                                                                    // 837\n            break;                                                                                                  // 838\n          }                                                                                                         // 839\n        }                                                                                                           // 840\n        selectedSize = Math.round(10 * selectedSize) / 10;                                                          // 841\n      }                                                                                                             // 842\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;                                               // 843\n    };                                                                                                              // 844\n                                                                                                                    // 845\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {                                                   // 846\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {             // 847\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {                                             // 848\n          this.emit('maxfilesreached', this.files);                                                                 // 849\n        }                                                                                                           // 850\n        return this.element.classList.add(\"dz-max-files-reached\");                                                  // 851\n      } else {                                                                                                      // 852\n        return this.element.classList.remove(\"dz-max-files-reached\");                                               // 853\n      }                                                                                                             // 854\n    };                                                                                                              // 855\n                                                                                                                    // 856\n    Dropzone.prototype.drop = function(e) {                                                                         // 857\n      var files, items;                                                                                             // 858\n      if (!e.dataTransfer) {                                                                                        // 859\n        return;                                                                                                     // 860\n      }                                                                                                             // 861\n      this.emit(\"drop\", e);                                                                                         // 862\n      files = e.dataTransfer.files;                                                                                 // 863\n      this.emit(\"addedfiles\", files);                                                                               // 864\n      if (files.length) {                                                                                           // 865\n        items = e.dataTransfer.items;                                                                               // 866\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {                                         // 867\n          this._addFilesFromItems(items);                                                                           // 868\n        } else {                                                                                                    // 869\n          this.handleFiles(files);                                                                                  // 870\n        }                                                                                                           // 871\n      }                                                                                                             // 872\n    };                                                                                                              // 873\n                                                                                                                    // 874\n    Dropzone.prototype.paste = function(e) {                                                                        // 875\n      var items, _ref;                                                                                              // 876\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {                  // 877\n        return;                                                                                                     // 878\n      }                                                                                                             // 879\n      this.emit(\"paste\", e);                                                                                        // 880\n      items = e.clipboardData.items;                                                                                // 881\n      if (items.length) {                                                                                           // 882\n        return this._addFilesFromItems(items);                                                                      // 883\n      }                                                                                                             // 884\n    };                                                                                                              // 885\n                                                                                                                    // 886\n    Dropzone.prototype.handleFiles = function(files) {                                                              // 887\n      var file, _i, _len, _results;                                                                                 // 888\n      _results = [];                                                                                                // 889\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 890\n        file = files[_i];                                                                                           // 891\n        _results.push(this.addFile(file));                                                                          // 892\n      }                                                                                                             // 893\n      return _results;                                                                                              // 894\n    };                                                                                                              // 895\n                                                                                                                    // 896\n    Dropzone.prototype._addFilesFromItems = function(items) {                                                       // 897\n      var entry, item, _i, _len, _results;                                                                          // 898\n      _results = [];                                                                                                // 899\n      for (_i = 0, _len = items.length; _i < _len; _i++) {                                                          // 900\n        item = items[_i];                                                                                           // 901\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {                                 // 902\n          if (entry.isFile) {                                                                                       // 903\n            _results.push(this.addFile(item.getAsFile()));                                                          // 904\n          } else if (entry.isDirectory) {                                                                           // 905\n            _results.push(this._addFilesFromDirectory(entry, entry.name));                                          // 906\n          } else {                                                                                                  // 907\n            _results.push(void 0);                                                                                  // 908\n          }                                                                                                         // 909\n        } else if (item.getAsFile != null) {                                                                        // 910\n          if ((item.kind == null) || item.kind === \"file\") {                                                        // 911\n            _results.push(this.addFile(item.getAsFile()));                                                          // 912\n          } else {                                                                                                  // 913\n            _results.push(void 0);                                                                                  // 914\n          }                                                                                                         // 915\n        } else {                                                                                                    // 916\n          _results.push(void 0);                                                                                    // 917\n        }                                                                                                           // 918\n      }                                                                                                             // 919\n      return _results;                                                                                              // 920\n    };                                                                                                              // 921\n                                                                                                                    // 922\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {                                         // 923\n      var dirReader, entriesReader;                                                                                 // 924\n      dirReader = directory.createReader();                                                                         // 925\n      entriesReader = (function(_this) {                                                                            // 926\n        return function(entries) {                                                                                  // 927\n          var entry, _i, _len;                                                                                      // 928\n          for (_i = 0, _len = entries.length; _i < _len; _i++) {                                                    // 929\n            entry = entries[_i];                                                                                    // 930\n            if (entry.isFile) {                                                                                     // 931\n              entry.file(function(file) {                                                                           // 932\n                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {                         // 933\n                  return;                                                                                           // 934\n                }                                                                                                   // 935\n                file.fullPath = \"\" + path + \"/\" + file.name;                                                        // 936\n                return _this.addFile(file);                                                                         // 937\n              });                                                                                                   // 938\n            } else if (entry.isDirectory) {                                                                         // 939\n              _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);                                    // 940\n            }                                                                                                       // 941\n          }                                                                                                         // 942\n        };                                                                                                          // 943\n      })(this);                                                                                                     // 944\n      return dirReader.readEntries(entriesReader, function(error) {                                                 // 945\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      });                                                                                                           // 947\n    };                                                                                                              // 948\n                                                                                                                    // 949\n    Dropzone.prototype.accept = function(file, done) {                                                              // 950\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {                                                     // 951\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {                                         // 953\n        return done(this.options.dictInvalidFileType);                                                              // 954\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {      // 955\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));                     // 956\n        return this.emit(\"maxfilesexceeded\", file);                                                                 // 957\n      } else {                                                                                                      // 958\n        return this.options.accept.call(this, file, done);                                                          // 959\n      }                                                                                                             // 960\n    };                                                                                                              // 961\n                                                                                                                    // 962\n    Dropzone.prototype.addFile = function(file) {                                                                   // 963\n      file.upload = {                                                                                               // 964\n        progress: 0,                                                                                                // 965\n        total: file.size,                                                                                           // 966\n        bytesSent: 0                                                                                                // 967\n      };                                                                                                            // 968\n      this.files.push(file);                                                                                        // 969\n      file.status = Dropzone.ADDED;                                                                                 // 970\n      this.emit(\"addedfile\", file);                                                                                 // 971\n      this._enqueueThumbnail(file);                                                                                 // 972\n      return this.accept(file, (function(_this) {                                                                   // 973\n        return function(error) {                                                                                    // 974\n          if (error) {                                                                                              // 975\n            file.accepted = false;                                                                                  // 976\n            _this._errorProcessing([file], error);                                                                  // 977\n          } else {                                                                                                  // 978\n            file.accepted = true;                                                                                   // 979\n            if (_this.options.autoQueue) {                                                                          // 980\n              _this.enqueueFile(file);                                                                              // 981\n            }                                                                                                       // 982\n          }                                                                                                         // 983\n          return _this._updateMaxFilesReachedClass();                                                               // 984\n        };                                                                                                          // 985\n      })(this));                                                                                                    // 986\n    };                                                                                                              // 987\n                                                                                                                    // 988\n    Dropzone.prototype.enqueueFiles = function(files) {                                                             // 989\n      var file, _i, _len;                                                                                           // 990\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 991\n        file = files[_i];                                                                                           // 992\n        this.enqueueFile(file);                                                                                     // 993\n      }                                                                                                             // 994\n      return null;                                                                                                  // 995\n    };                                                                                                              // 996\n                                                                                                                    // 997\n    Dropzone.prototype.enqueueFile = function(file) {                                                               // 998\n      if (file.status === Dropzone.ADDED && file.accepted === true) {                                               // 999\n        file.status = Dropzone.QUEUED;                                                                              // 1000\n        if (this.options.autoProcessQueue) {                                                                        // 1001\n          return setTimeout(((function(_this) {                                                                     // 1002\n            return function() {                                                                                     // 1003\n              return _this.processQueue();                                                                          // 1004\n            };                                                                                                      // 1005\n          })(this)), 0);                                                                                            // 1006\n        }                                                                                                           // 1007\n      } else {                                                                                                      // 1008\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");        // 1009\n      }                                                                                                             // 1010\n    };                                                                                                              // 1011\n                                                                                                                    // 1012\n    Dropzone.prototype._thumbnailQueue = [];                                                                        // 1013\n                                                                                                                    // 1014\n    Dropzone.prototype._processingThumbnail = false;                                                                // 1015\n                                                                                                                    // 1016\n    Dropzone.prototype._enqueueThumbnail = function(file) {                                                         // 1017\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);                                                                            // 1019\n        return setTimeout(((function(_this) {                                                                       // 1020\n          return function() {                                                                                       // 1021\n            return _this._processThumbnailQueue();                                                                  // 1022\n          };                                                                                                        // 1023\n        })(this)), 0);                                                                                              // 1024\n      }                                                                                                             // 1025\n    };                                                                                                              // 1026\n                                                                                                                    // 1027\n    Dropzone.prototype._processThumbnailQueue = function() {                                                        // 1028\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {                                         // 1029\n        return;                                                                                                     // 1030\n      }                                                                                                             // 1031\n      this._processingThumbnail = true;                                                                             // 1032\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {                                  // 1033\n        return function() {                                                                                         // 1034\n          _this._processingThumbnail = false;                                                                       // 1035\n          return _this._processThumbnailQueue();                                                                    // 1036\n        };                                                                                                          // 1037\n      })(this));                                                                                                    // 1038\n    };                                                                                                              // 1039\n                                                                                                                    // 1040\n    Dropzone.prototype.removeFile = function(file) {                                                                // 1041\n      if (file.status === Dropzone.UPLOADING) {                                                                     // 1042\n        this.cancelUpload(file);                                                                                    // 1043\n      }                                                                                                             // 1044\n      this.files = without(this.files, file);                                                                       // 1045\n      this.emit(\"removedfile\", file);                                                                               // 1046\n      if (this.files.length === 0) {                                                                                // 1047\n        return this.emit(\"reset\");                                                                                  // 1048\n      }                                                                                                             // 1049\n    };                                                                                                              // 1050\n                                                                                                                    // 1051\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {                                               // 1052\n      var file, _i, _len, _ref;                                                                                     // 1053\n      if (cancelIfNecessary == null) {                                                                              // 1054\n        cancelIfNecessary = false;                                                                                  // 1055\n      }                                                                                                             // 1056\n      _ref = this.files.slice();                                                                                    // 1057\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 1058\n        file = _ref[_i];                                                                                            // 1059\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {                                              // 1060\n          this.removeFile(file);                                                                                    // 1061\n        }                                                                                                           // 1062\n      }                                                                                                             // 1063\n      return null;                                                                                                  // 1064\n    };                                                                                                              // 1065\n                                                                                                                    // 1066\n    Dropzone.prototype.createThumbnail = function(file, callback) {                                                 // 1067\n      var fileReader;                                                                                               // 1068\n      fileReader = new FileReader;                                                                                  // 1069\n      fileReader.onload = (function(_this) {                                                                        // 1070\n        return function() {                                                                                         // 1071\n          if (file.type === \"image/svg+xml\") {                                                                      // 1072\n            _this.emit(\"thumbnail\", file, fileReader.result);                                                       // 1073\n            if (callback != null) {                                                                                 // 1074\n              callback();                                                                                           // 1075\n            }                                                                                                       // 1076\n            return;                                                                                                 // 1077\n          }                                                                                                         // 1078\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);                                   // 1079\n        };                                                                                                          // 1080\n      })(this);                                                                                                     // 1081\n      return fileReader.readAsDataURL(file);                                                                        // 1082\n    };                                                                                                              // 1083\n                                                                                                                    // 1084\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {                   // 1085\n      var img;                                                                                                      // 1086\n      img = document.createElement(\"img\");                                                                          // 1087\n      if (crossOrigin) {                                                                                            // 1088\n        img.crossOrigin = crossOrigin;                                                                              // 1089\n      }                                                                                                             // 1090\n      img.onload = (function(_this) {                                                                               // 1091\n        return function() {                                                                                         // 1092\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;                                        // 1093\n          file.width = img.width;                                                                                   // 1094\n          file.height = img.height;                                                                                 // 1095\n          resizeInfo = _this.options.resize.call(_this, file);                                                      // 1096\n          if (resizeInfo.trgWidth == null) {                                                                        // 1097\n            resizeInfo.trgWidth = resizeInfo.optWidth;                                                              // 1098\n          }                                                                                                         // 1099\n          if (resizeInfo.trgHeight == null) {                                                                       // 1100\n            resizeInfo.trgHeight = resizeInfo.optHeight;                                                            // 1101\n          }                                                                                                         // 1102\n          canvas = document.createElement(\"canvas\");                                                                // 1103\n          ctx = canvas.getContext(\"2d\");                                                                            // 1104\n          canvas.width = resizeInfo.trgWidth;                                                                       // 1105\n          canvas.height = resizeInfo.trgHeight;                                                                     // 1106\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");                                                                // 1108\n          _this.emit(\"thumbnail\", file, thumbnail);                                                                 // 1109\n          if (callback != null) {                                                                                   // 1110\n            return callback();                                                                                      // 1111\n          }                                                                                                         // 1112\n        };                                                                                                          // 1113\n      })(this);                                                                                                     // 1114\n      if (callback != null) {                                                                                       // 1115\n        img.onerror = callback;                                                                                     // 1116\n      }                                                                                                             // 1117\n      return img.src = imageUrl;                                                                                    // 1118\n    };                                                                                                              // 1119\n                                                                                                                    // 1120\n    Dropzone.prototype.processQueue = function() {                                                                  // 1121\n      var i, parallelUploads, processingLength, queuedFiles;                                                        // 1122\n      parallelUploads = this.options.parallelUploads;                                                               // 1123\n      processingLength = this.getUploadingFiles().length;                                                           // 1124\n      i = processingLength;                                                                                         // 1125\n      if (processingLength >= parallelUploads) {                                                                    // 1126\n        return;                                                                                                     // 1127\n      }                                                                                                             // 1128\n      queuedFiles = this.getQueuedFiles();                                                                          // 1129\n      if (!(queuedFiles.length > 0)) {                                                                              // 1130\n        return;                                                                                                     // 1131\n      }                                                                                                             // 1132\n      if (this.options.uploadMultiple) {                                                                            // 1133\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));                         // 1134\n      } else {                                                                                                      // 1135\n        while (i < parallelUploads) {                                                                               // 1136\n          if (!queuedFiles.length) {                                                                                // 1137\n            return;                                                                                                 // 1138\n          }                                                                                                         // 1139\n          this.processFile(queuedFiles.shift());                                                                    // 1140\n          i++;                                                                                                      // 1141\n        }                                                                                                           // 1142\n      }                                                                                                             // 1143\n    };                                                                                                              // 1144\n                                                                                                                    // 1145\n    Dropzone.prototype.processFile = function(file) {                                                               // 1146\n      return this.processFiles([file]);                                                                             // 1147\n    };                                                                                                              // 1148\n                                                                                                                    // 1149\n    Dropzone.prototype.processFiles = function(files) {                                                             // 1150\n      var file, _i, _len;                                                                                           // 1151\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1152\n        file = files[_i];                                                                                           // 1153\n        file.processing = true;                                                                                     // 1154\n        file.status = Dropzone.UPLOADING;                                                                           // 1155\n        this.emit(\"processing\", file);                                                                              // 1156\n      }                                                                                                             // 1157\n      if (this.options.uploadMultiple) {                                                                            // 1158\n        this.emit(\"processingmultiple\", files);                                                                     // 1159\n      }                                                                                                             // 1160\n      return this.uploadFiles(files);                                                                               // 1161\n    };                                                                                                              // 1162\n                                                                                                                    // 1163\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {                                                           // 1164\n      var file, files;                                                                                              // 1165\n      return files = (function() {                                                                                  // 1166\n        var _i, _len, _ref, _results;                                                                               // 1167\n        _ref = this.files;                                                                                          // 1168\n        _results = [];                                                                                              // 1169\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 1170\n          file = _ref[_i];                                                                                          // 1171\n          if (file.xhr === xhr) {                                                                                   // 1172\n            _results.push(file);                                                                                    // 1173\n          }                                                                                                         // 1174\n        }                                                                                                           // 1175\n        return _results;                                                                                            // 1176\n      }).call(this);                                                                                                // 1177\n    };                                                                                                              // 1178\n                                                                                                                    // 1179\n    Dropzone.prototype.cancelUpload = function(file) {                                                              // 1180\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;                                                     // 1181\n      if (file.status === Dropzone.UPLOADING) {                                                                     // 1182\n        groupedFiles = this._getFilesWithXhr(file.xhr);                                                             // 1183\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {                                                 // 1184\n          groupedFile = groupedFiles[_i];                                                                           // 1185\n          groupedFile.status = Dropzone.CANCELED;                                                                   // 1186\n        }                                                                                                           // 1187\n        file.xhr.abort();                                                                                           // 1188\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {                                               // 1189\n          groupedFile = groupedFiles[_j];                                                                           // 1190\n          this.emit(\"canceled\", groupedFile);                                                                       // 1191\n        }                                                                                                           // 1192\n        if (this.options.uploadMultiple) {                                                                          // 1193\n          this.emit(\"canceledmultiple\", groupedFiles);                                                              // 1194\n        }                                                                                                           // 1195\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {                             // 1196\n        file.status = Dropzone.CANCELED;                                                                            // 1197\n        this.emit(\"canceled\", file);                                                                                // 1198\n        if (this.options.uploadMultiple) {                                                                          // 1199\n          this.emit(\"canceledmultiple\", [file]);                                                                    // 1200\n        }                                                                                                           // 1201\n      }                                                                                                             // 1202\n      if (this.options.autoProcessQueue) {                                                                          // 1203\n        return this.processQueue();                                                                                 // 1204\n      }                                                                                                             // 1205\n    };                                                                                                              // 1206\n                                                                                                                    // 1207\n    resolveOption = function() {                                                                                    // 1208\n      var args, option;                                                                                             // 1209\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                        // 1210\n      if (typeof option === 'function') {                                                                           // 1211\n        return option.apply(this, args);                                                                            // 1212\n      }                                                                                                             // 1213\n      return option;                                                                                                // 1214\n    };                                                                                                              // 1215\n                                                                                                                    // 1216\n    Dropzone.prototype.uploadFile = function(file) {                                                                // 1217\n      return this.uploadFiles([file]);                                                                              // 1218\n    };                                                                                                              // 1219\n                                                                                                                    // 1220\n    Dropzone.prototype.uploadFiles = function(files) {                                                              // 1221\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();                                                                                   // 1223\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1224\n        file = files[_i];                                                                                           // 1225\n        file.xhr = xhr;                                                                                             // 1226\n      }                                                                                                             // 1227\n      method = resolveOption(this.options.method, files);                                                           // 1228\n      url = resolveOption(this.options.url, files);                                                                 // 1229\n      xhr.open(method, url, true);                                                                                  // 1230\n      xhr.withCredentials = !!this.options.withCredentials;                                                         // 1231\n      response = null;                                                                                              // 1232\n      handleError = (function(_this) {                                                                              // 1233\n        return function() {                                                                                         // 1234\n          var _j, _len1, _results;                                                                                  // 1235\n          _results = [];                                                                                            // 1236\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                    // 1237\n            file = files[_j];                                                                                       // 1238\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }                                                                                                         // 1240\n          return _results;                                                                                          // 1241\n        };                                                                                                          // 1242\n      })(this);                                                                                                     // 1243\n      updateProgress = (function(_this) {                                                                           // 1244\n        return function(e) {                                                                                        // 1245\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;                                // 1246\n          if (e != null) {                                                                                          // 1247\n            progress = 100 * e.loaded / e.total;                                                                    // 1248\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                  // 1249\n              file = files[_j];                                                                                     // 1250\n              file.upload = {                                                                                       // 1251\n                progress: progress,                                                                                 // 1252\n                total: e.total,                                                                                     // 1253\n                bytesSent: e.loaded                                                                                 // 1254\n              };                                                                                                    // 1255\n            }                                                                                                       // 1256\n          } else {                                                                                                  // 1257\n            allFilesFinished = true;                                                                                // 1258\n            progress = 100;                                                                                         // 1259\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {                                                  // 1260\n              file = files[_k];                                                                                     // 1261\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {                 // 1262\n                allFilesFinished = false;                                                                           // 1263\n              }                                                                                                     // 1264\n              file.upload.progress = progress;                                                                      // 1265\n              file.upload.bytesSent = file.upload.total;                                                            // 1266\n            }                                                                                                       // 1267\n            if (allFilesFinished) {                                                                                 // 1268\n              return;                                                                                               // 1269\n            }                                                                                                       // 1270\n          }                                                                                                         // 1271\n          _results = [];                                                                                            // 1272\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {                                                    // 1273\n            file = files[_l];                                                                                       // 1274\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));                     // 1275\n          }                                                                                                         // 1276\n          return _results;                                                                                          // 1277\n        };                                                                                                          // 1278\n      })(this);                                                                                                     // 1279\n      xhr.onload = (function(_this) {                                                                               // 1280\n        return function(e) {                                                                                        // 1281\n          var _ref;                                                                                                 // 1282\n          if (files[0].status === Dropzone.CANCELED) {                                                              // 1283\n            return;                                                                                                 // 1284\n          }                                                                                                         // 1285\n          if (xhr.readyState !== 4) {                                                                               // 1286\n            return;                                                                                                 // 1287\n          }                                                                                                         // 1288\n          response = xhr.responseText;                                                                              // 1289\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {                                                                                                   // 1291\n              response = JSON.parse(response);                                                                      // 1292\n            } catch (_error) {                                                                                      // 1293\n              e = _error;                                                                                           // 1294\n              response = \"Invalid JSON response from server.\";                                                      // 1295\n            }                                                                                                       // 1296\n          }                                                                                                         // 1297\n          updateProgress();                                                                                         // 1298\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {                                                      // 1299\n            return handleError();                                                                                   // 1300\n          } else {                                                                                                  // 1301\n            return _this._finished(files, response, e);                                                             // 1302\n          }                                                                                                         // 1303\n        };                                                                                                          // 1304\n      })(this);                                                                                                     // 1305\n      xhr.onerror = (function(_this) {                                                                              // 1306\n        return function() {                                                                                         // 1307\n          if (files[0].status === Dropzone.CANCELED) {                                                              // 1308\n            return;                                                                                                 // 1309\n          }                                                                                                         // 1310\n          return handleError();                                                                                     // 1311\n        };                                                                                                          // 1312\n      })(this);                                                                                                     // 1313\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;                                                       // 1314\n      progressObj.onprogress = updateProgress;                                                                      // 1315\n      headers = {                                                                                                   // 1316\n        \"Accept\": \"application/json\",                                                                               // 1317\n        \"Cache-Control\": \"no-cache\",                                                                                // 1318\n        \"X-Requested-With\": \"XMLHttpRequest\"                                                                        // 1319\n      };                                                                                                            // 1320\n      if (this.options.headers) {                                                                                   // 1321\n        extend(headers, this.options.headers);                                                                      // 1322\n      }                                                                                                             // 1323\n      for (headerName in headers) {                                                                                 // 1324\n        headerValue = headers[headerName];                                                                          // 1325\n        if (headerValue) {                                                                                          // 1326\n          xhr.setRequestHeader(headerName, headerValue);                                                            // 1327\n        }                                                                                                           // 1328\n      }                                                                                                             // 1329\n      formData = new FormData();                                                                                    // 1330\n      if (this.options.params) {                                                                                    // 1331\n        _ref1 = this.options.params;                                                                                // 1332\n        for (key in _ref1) {                                                                                        // 1333\n          value = _ref1[key];                                                                                       // 1334\n          formData.append(key, value);                                                                              // 1335\n        }                                                                                                           // 1336\n      }                                                                                                             // 1337\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                        // 1338\n        file = files[_j];                                                                                           // 1339\n        this.emit(\"sending\", file, xhr, formData);                                                                  // 1340\n      }                                                                                                             // 1341\n      if (this.options.uploadMultiple) {                                                                            // 1342\n        this.emit(\"sendingmultiple\", files, xhr, formData);                                                         // 1343\n      }                                                                                                             // 1344\n      if (this.element.tagName === \"FORM\") {                                                                        // 1345\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");                                   // 1346\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {                                                      // 1347\n          input = _ref2[_k];                                                                                        // 1348\n          inputName = input.getAttribute(\"name\");                                                                   // 1349\n          inputType = input.getAttribute(\"type\");                                                                   // 1350\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {                                       // 1351\n            _ref3 = input.options;                                                                                  // 1352\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {                                                  // 1353\n              option = _ref3[_l];                                                                                   // 1354\n              if (option.selected) {                                                                                // 1355\n                formData.append(inputName, option.value);                                                           // 1356\n              }                                                                                                     // 1357\n            }                                                                                                       // 1358\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);                                                                // 1360\n          }                                                                                                         // 1361\n        }                                                                                                           // 1362\n      }                                                                                                             // 1363\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], files[i].name);                                            // 1365\n      }                                                                                                             // 1366\n      return this.submitRequest(xhr, formData, files);                                                              // 1367\n    };                                                                                                              // 1368\n                                                                                                                    // 1369\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {                                             // 1370\n      return xhr.send(formData);                                                                                    // 1371\n    };                                                                                                              // 1372\n                                                                                                                    // 1373\n    Dropzone.prototype._finished = function(files, responseText, e) {                                               // 1374\n      var file, _i, _len;                                                                                           // 1375\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1376\n        file = files[_i];                                                                                           // 1377\n        file.status = Dropzone.SUCCESS;                                                                             // 1378\n        this.emit(\"success\", file, responseText, e);                                                                // 1379\n        this.emit(\"complete\", file);                                                                                // 1380\n      }                                                                                                             // 1381\n      if (this.options.uploadMultiple) {                                                                            // 1382\n        this.emit(\"successmultiple\", files, responseText, e);                                                       // 1383\n        this.emit(\"completemultiple\", files);                                                                       // 1384\n      }                                                                                                             // 1385\n      if (this.options.autoProcessQueue) {                                                                          // 1386\n        return this.processQueue();                                                                                 // 1387\n      }                                                                                                             // 1388\n    };                                                                                                              // 1389\n                                                                                                                    // 1390\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {                                           // 1391\n      var file, _i, _len;                                                                                           // 1392\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1393\n        file = files[_i];                                                                                           // 1394\n        file.status = Dropzone.ERROR;                                                                               // 1395\n        this.emit(\"error\", file, message, xhr);                                                                     // 1396\n        this.emit(\"complete\", file);                                                                                // 1397\n      }                                                                                                             // 1398\n      if (this.options.uploadMultiple) {                                                                            // 1399\n        this.emit(\"errormultiple\", files, message, xhr);                                                            // 1400\n        this.emit(\"completemultiple\", files);                                                                       // 1401\n      }                                                                                                             // 1402\n      if (this.options.autoProcessQueue) {                                                                          // 1403\n        return this.processQueue();                                                                                 // 1404\n      }                                                                                                             // 1405\n    };                                                                                                              // 1406\n                                                                                                                    // 1407\n    return Dropzone;                                                                                                // 1408\n                                                                                                                    // 1409\n  })(Emitter);                                                                                                      // 1410\n                                                                                                                    // 1411\n  Dropzone.version = \"4.2.0\";                                                                                       // 1412\n                                                                                                                    // 1413\n  Dropzone.options = {};                                                                                            // 1414\n                                                                                                                    // 1415\n  Dropzone.optionsForElement = function(element) {                                                                  // 1416\n    if (element.getAttribute(\"id\")) {                                                                               // 1417\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];                                                // 1418\n    } else {                                                                                                        // 1419\n      return void 0;                                                                                                // 1420\n    }                                                                                                               // 1421\n  };                                                                                                                // 1422\n                                                                                                                    // 1423\n  Dropzone.instances = [];                                                                                          // 1424\n                                                                                                                    // 1425\n  Dropzone.forElement = function(element) {                                                                         // 1426\n    if (typeof element === \"string\") {                                                                              // 1427\n      element = document.querySelector(element);                                                                    // 1428\n    }                                                                                                               // 1429\n    if ((element != null ? element.dropzone : void 0) == null) {                                                    // 1430\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }                                                                                                               // 1432\n    return element.dropzone;                                                                                        // 1433\n  };                                                                                                                // 1434\n                                                                                                                    // 1435\n  Dropzone.autoDiscover = true;                                                                                     // 1436\n                                                                                                                    // 1437\n  Dropzone.discover = function() {                                                                                  // 1438\n    var checkElements, dropzone, dropzones, _i, _len, _results;                                                     // 1439\n    if (document.querySelectorAll) {                                                                                // 1440\n      dropzones = document.querySelectorAll(\".dropzone\");                                                           // 1441\n    } else {                                                                                                        // 1442\n      dropzones = [];                                                                                               // 1443\n      checkElements = function(elements) {                                                                          // 1444\n        var el, _i, _len, _results;                                                                                 // 1445\n        _results = [];                                                                                              // 1446\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {                                                     // 1447\n          el = elements[_i];                                                                                        // 1448\n          if (/(^| )dropzone($| )/.test(el.className)) {                                                            // 1449\n            _results.push(dropzones.push(el));                                                                      // 1450\n          } else {                                                                                                  // 1451\n            _results.push(void 0);                                                                                  // 1452\n          }                                                                                                         // 1453\n        }                                                                                                           // 1454\n        return _results;                                                                                            // 1455\n      };                                                                                                            // 1456\n      checkElements(document.getElementsByTagName(\"div\"));                                                          // 1457\n      checkElements(document.getElementsByTagName(\"form\"));                                                         // 1458\n    }                                                                                                               // 1459\n    _results = [];                                                                                                  // 1460\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {                                                        // 1461\n      dropzone = dropzones[_i];                                                                                     // 1462\n      if (Dropzone.optionsForElement(dropzone) !== false) {                                                         // 1463\n        _results.push(new Dropzone(dropzone));                                                                      // 1464\n      } else {                                                                                                      // 1465\n        _results.push(void 0);                                                                                      // 1466\n      }                                                                                                             // 1467\n    }                                                                                                               // 1468\n    return _results;                                                                                                // 1469\n  };                                                                                                                // 1470\n                                                                                                                    // 1471\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];                                                // 1472\n                                                                                                                    // 1473\n  Dropzone.isBrowserSupported = function() {                                                                        // 1474\n    var capableBrowser, regex, _i, _len, _ref;                                                                      // 1475\n    capableBrowser = true;                                                                                          // 1476\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {                                                          // 1478\n        capableBrowser = false;                                                                                     // 1479\n      } else {                                                                                                      // 1480\n        _ref = Dropzone.blacklistedBrowsers;                                                                        // 1481\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 1482\n          regex = _ref[_i];                                                                                         // 1483\n          if (regex.test(navigator.userAgent)) {                                                                    // 1484\n            capableBrowser = false;                                                                                 // 1485\n            continue;                                                                                               // 1486\n          }                                                                                                         // 1487\n        }                                                                                                           // 1488\n      }                                                                                                             // 1489\n    } else {                                                                                                        // 1490\n      capableBrowser = false;                                                                                       // 1491\n    }                                                                                                               // 1492\n    return capableBrowser;                                                                                          // 1493\n  };                                                                                                                // 1494\n                                                                                                                    // 1495\n  without = function(list, rejectedItem) {                                                                          // 1496\n    var item, _i, _len, _results;                                                                                   // 1497\n    _results = [];                                                                                                  // 1498\n    for (_i = 0, _len = list.length; _i < _len; _i++) {                                                             // 1499\n      item = list[_i];                                                                                              // 1500\n      if (item !== rejectedItem) {                                                                                  // 1501\n        _results.push(item);                                                                                        // 1502\n      }                                                                                                             // 1503\n    }                                                                                                               // 1504\n    return _results;                                                                                                // 1505\n  };                                                                                                                // 1506\n                                                                                                                    // 1507\n  camelize = function(str) {                                                                                        // 1508\n    return str.replace(/[\\-_](\\w)/g, function(match) {                                                              // 1509\n      return match.charAt(1).toUpperCase();                                                                         // 1510\n    });                                                                                                             // 1511\n  };                                                                                                                // 1512\n                                                                                                                    // 1513\n  Dropzone.createElement = function(string) {                                                                       // 1514\n    var div;                                                                                                        // 1515\n    div = document.createElement(\"div\");                                                                            // 1516\n    div.innerHTML = string;                                                                                         // 1517\n    return div.childNodes[0];                                                                                       // 1518\n  };                                                                                                                // 1519\n                                                                                                                    // 1520\n  Dropzone.elementInside = function(element, container) {                                                           // 1521\n    if (element === container) {                                                                                    // 1522\n      return true;                                                                                                  // 1523\n    }                                                                                                               // 1524\n    while (element = element.parentNode) {                                                                          // 1525\n      if (element === container) {                                                                                  // 1526\n        return true;                                                                                                // 1527\n      }                                                                                                             // 1528\n    }                                                                                                               // 1529\n    return false;                                                                                                   // 1530\n  };                                                                                                                // 1531\n                                                                                                                    // 1532\n  Dropzone.getElement = function(el, name) {                                                                        // 1533\n    var element;                                                                                                    // 1534\n    if (typeof el === \"string\") {                                                                                   // 1535\n      element = document.querySelector(el);                                                                         // 1536\n    } else if (el.nodeType != null) {                                                                               // 1537\n      element = el;                                                                                                 // 1538\n    }                                                                                                               // 1539\n    if (element == null) {                                                                                          // 1540\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }                                                                                                               // 1542\n    return element;                                                                                                 // 1543\n  };                                                                                                                // 1544\n                                                                                                                    // 1545\n  Dropzone.getElements = function(els, name) {                                                                      // 1546\n    var e, el, elements, _i, _j, _len, _len1, _ref;                                                                 // 1547\n    if (els instanceof Array) {                                                                                     // 1548\n      elements = [];                                                                                                // 1549\n      try {                                                                                                         // 1550\n        for (_i = 0, _len = els.length; _i < _len; _i++) {                                                          // 1551\n          el = els[_i];                                                                                             // 1552\n          elements.push(this.getElement(el, name));                                                                 // 1553\n        }                                                                                                           // 1554\n      } catch (_error) {                                                                                            // 1555\n        e = _error;                                                                                                 // 1556\n        elements = null;                                                                                            // 1557\n      }                                                                                                             // 1558\n    } else if (typeof els === \"string\") {                                                                           // 1559\n      elements = [];                                                                                                // 1560\n      _ref = document.querySelectorAll(els);                                                                        // 1561\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {                                                         // 1562\n        el = _ref[_j];                                                                                              // 1563\n        elements.push(el);                                                                                          // 1564\n      }                                                                                                             // 1565\n    } else if (els.nodeType != null) {                                                                              // 1566\n      elements = [els];                                                                                             // 1567\n    }                                                                                                               // 1568\n    if (!((elements != null) && elements.length)) {                                                                 // 1569\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }                                                                                                               // 1571\n    return elements;                                                                                                // 1572\n  };                                                                                                                // 1573\n                                                                                                                    // 1574\n  Dropzone.confirm = function(question, accepted, rejected) {                                                       // 1575\n    if (window.confirm(question)) {                                                                                 // 1576\n      return accepted();                                                                                            // 1577\n    } else if (rejected != null) {                                                                                  // 1578\n      return rejected();                                                                                            // 1579\n    }                                                                                                               // 1580\n  };                                                                                                                // 1581\n                                                                                                                    // 1582\n  Dropzone.isValidFile = function(file, acceptedFiles) {                                                            // 1583\n    var baseMimeType, mimeType, validType, _i, _len;                                                                // 1584\n    if (!acceptedFiles) {                                                                                           // 1585\n      return true;                                                                                                  // 1586\n    }                                                                                                               // 1587\n    acceptedFiles = acceptedFiles.split(\",\");                                                                       // 1588\n    mimeType = file.type;                                                                                           // 1589\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");                                                                   // 1590\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {                                                    // 1591\n      validType = acceptedFiles[_i];                                                                                // 1592\n      validType = validType.trim();                                                                                 // 1593\n      if (validType.charAt(0) === \".\") {                                                                            // 1594\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;                                                                                              // 1596\n        }                                                                                                           // 1597\n      } else if (/\\/\\*$/.test(validType)) {                                                                         // 1598\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {                                                      // 1599\n          return true;                                                                                              // 1600\n        }                                                                                                           // 1601\n      } else {                                                                                                      // 1602\n        if (mimeType === validType) {                                                                               // 1603\n          return true;                                                                                              // 1604\n        }                                                                                                           // 1605\n      }                                                                                                             // 1606\n    }                                                                                                               // 1607\n    return false;                                                                                                   // 1608\n  };                                                                                                                // 1609\n                                                                                                                    // 1610\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {                                                           // 1611\n    jQuery.fn.dropzone = function(options) {                                                                        // 1612\n      return this.each(function() {                                                                                 // 1613\n        return new Dropzone(this, options);                                                                         // 1614\n      });                                                                                                           // 1615\n    };                                                                                                              // 1616\n  }                                                                                                                 // 1617\n                                                                                                                    // 1618\n  if (typeof module !== \"undefined\" && module !== null) {                                                           // 1619\n    module.exports = Dropzone;                                                                                      // 1620\n  } else {                                                                                                          // 1621\n    window.Dropzone = Dropzone;                                                                                     // 1622\n  }                                                                                                                 // 1623\n                                                                                                                    // 1624\n  Dropzone.ADDED = \"added\";                                                                                         // 1625\n                                                                                                                    // 1626\n  Dropzone.QUEUED = \"queued\";                                                                                       // 1627\n                                                                                                                    // 1628\n  Dropzone.ACCEPTED = Dropzone.QUEUED;                                                                              // 1629\n                                                                                                                    // 1630\n  Dropzone.UPLOADING = \"uploading\";                                                                                 // 1631\n                                                                                                                    // 1632\n  Dropzone.PROCESSING = Dropzone.UPLOADING;                                                                         // 1633\n                                                                                                                    // 1634\n  Dropzone.CANCELED = \"canceled\";                                                                                   // 1635\n                                                                                                                    // 1636\n  Dropzone.ERROR = \"error\";                                                                                         // 1637\n                                                                                                                    // 1638\n  Dropzone.SUCCESS = \"success\";                                                                                     // 1639\n                                                                                                                    // 1640\n                                                                                                                    // 1641\n  /*                                                                                                                // 1642\n                                                                                                                    // 1643\n  Bugfix for iOS 6 and 7                                                                                            // 1644\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios                          // 1645\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel                                           // 1646\n   */                                                                                                               // 1647\n                                                                                                                    // 1648\n  detectVerticalSquash = function(img) {                                                                            // 1649\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;                                                        // 1650\n    iw = img.naturalWidth;                                                                                          // 1651\n    ih = img.naturalHeight;                                                                                         // 1652\n    canvas = document.createElement(\"canvas\");                                                                      // 1653\n    canvas.width = 1;                                                                                               // 1654\n    canvas.height = ih;                                                                                             // 1655\n    ctx = canvas.getContext(\"2d\");                                                                                  // 1656\n    ctx.drawImage(img, 0, 0);                                                                                       // 1657\n    data = ctx.getImageData(0, 0, 1, ih).data;                                                                      // 1658\n    sy = 0;                                                                                                         // 1659\n    ey = ih;                                                                                                        // 1660\n    py = ih;                                                                                                        // 1661\n    while (py > sy) {                                                                                               // 1662\n      alpha = data[(py - 1) * 4 + 3];                                                                               // 1663\n      if (alpha === 0) {                                                                                            // 1664\n        ey = py;                                                                                                    // 1665\n      } else {                                                                                                      // 1666\n        sy = py;                                                                                                    // 1667\n      }                                                                                                             // 1668\n      py = (ey + sy) >> 1;                                                                                          // 1669\n    }                                                                                                               // 1670\n    ratio = py / ih;                                                                                                // 1671\n    if (ratio === 0) {                                                                                              // 1672\n      return 1;                                                                                                     // 1673\n    } else {                                                                                                        // 1674\n      return ratio;                                                                                                 // 1675\n    }                                                                                                               // 1676\n  };                                                                                                                // 1677\n                                                                                                                    // 1678\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {                                            // 1679\n    var vertSquashRatio;                                                                                            // 1680\n    vertSquashRatio = detectVerticalSquash(img);                                                                    // 1681\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);                                    // 1682\n  };                                                                                                                // 1683\n                                                                                                                    // 1684\n                                                                                                                    // 1685\n  /*                                                                                                                // 1686\n   * contentloaded.js                                                                                               // 1687\n   *                                                                                                                // 1688\n   * Author: Diego Perini (diego.perini at gmail.com)                                                               // 1689\n   * Summary: cross-browser wrapper for DOMContentLoaded                                                            // 1690\n   * Updated: 20101020                                                                                              // 1691\n   * License: MIT                                                                                                   // 1692\n   * Version: 1.2                                                                                                   // 1693\n   *                                                                                                                // 1694\n   * URL:                                                                                                           // 1695\n   * http://javascript.nwbox.com/ContentLoaded/                                                                     // 1696\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE                                                          // 1697\n   */                                                                                                               // 1698\n                                                                                                                    // 1699\n  contentLoaded = function(win, fn) {                                                                               // 1700\n    var add, doc, done, init, poll, pre, rem, root, top;                                                            // 1701\n    done = false;                                                                                                   // 1702\n    top = true;                                                                                                     // 1703\n    doc = win.document;                                                                                             // 1704\n    root = doc.documentElement;                                                                                     // 1705\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");                                              // 1706\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");                                           // 1707\n    pre = (doc.addEventListener ? \"\" : \"on\");                                                                       // 1708\n    init = function(e) {                                                                                            // 1709\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {                                         // 1710\n        return;                                                                                                     // 1711\n      }                                                                                                             // 1712\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);                                              // 1713\n      if (!done && (done = true)) {                                                                                 // 1714\n        return fn.call(win, e.type || e);                                                                           // 1715\n      }                                                                                                             // 1716\n    };                                                                                                              // 1717\n    poll = function() {                                                                                             // 1718\n      var e;                                                                                                        // 1719\n      try {                                                                                                         // 1720\n        root.doScroll(\"left\");                                                                                      // 1721\n      } catch (_error) {                                                                                            // 1722\n        e = _error;                                                                                                 // 1723\n        setTimeout(poll, 50);                                                                                       // 1724\n        return;                                                                                                     // 1725\n      }                                                                                                             // 1726\n      return init(\"poll\");                                                                                          // 1727\n    };                                                                                                              // 1728\n    if (doc.readyState !== \"complete\") {                                                                            // 1729\n      if (doc.createEventObject && root.doScroll) {                                                                 // 1730\n        try {                                                                                                       // 1731\n          top = !win.frameElement;                                                                                  // 1732\n        } catch (_error) {}                                                                                         // 1733\n        if (top) {                                                                                                  // 1734\n          poll();                                                                                                   // 1735\n        }                                                                                                           // 1736\n      }                                                                                                             // 1737\n      doc[add](pre + \"DOMContentLoaded\", init, false);                                                              // 1738\n      doc[add](pre + \"readystatechange\", init, false);                                                              // 1739\n      return win[add](pre + \"load\", init, false);                                                                   // 1740\n    }                                                                                                               // 1741\n  };                                                                                                                // 1742\n                                                                                                                    // 1743\n  Dropzone._autoDiscoverFunction = function() {                                                                     // 1744\n    if (Dropzone.autoDiscover) {                                                                                    // 1745\n      return Dropzone.discover();                                                                                   // 1746\n    }                                                                                                               // 1747\n  };                                                                                                                // 1748\n                                                                                                                    // 1749\n  contentLoaded(window, Dropzone._autoDiscoverFunction);                                                            // 1750\n                                                                                                                    // 1751\n}).call(this);                                                                                                      // 1752\n                                                                                                                    // 1753\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett_dropzonejs/lib/template.dropzonejs.js                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.__checkName(\"dropzone\");                                                                                   // 2\nTemplate[\"dropzone\"] = new Template(\"Template.dropzone\", (function() {                                              // 3\n  var view = this;                                                                                                  // 4\n  return HTML.DIV({                                                                                                 // 5\n    id: function() {                                                                                                // 6\n      return Spacebars.mustache(view.lookup(\"id\"));                                                                 // 7\n    },                                                                                                              // 8\n    class: \"dropzone\"                                                                                               // 9\n  });                                                                                                               // 10\n}));                                                                                                                // 11\n                                                                                                                    // 12\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett_dropzonejs/lib/dropzonejs.js                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.dropzone.onRendered( function () {                                                                         // 1\n  var options = _.extend( {}, Meteor.Dropzone.options, this.data );                                                 // 2\n  if ( this.data.id ) {                                                                                             // 3\n    this.dropzone = new Dropzone( '#' + this.data.id + '.dropzone', options );                                      // 4\n  } else {                                                                                                          // 5\n    this.$('.dropzone').dropzone( options );                                                                        // 6\n  }                                                                                                                 // 7\n} );                                                                                                                // 8\n                                                                                                                    // 9\nMeteor.startup(function() {                                                                                         // 10\n  Dropzone.autoDiscover = false;                                                                                    // 11\n  Meteor.Dropzone = {                                                                                               // 12\n    options: {                                                                                                      // 13\n                                                                                                                    // 14\n    }                                                                                                               // 15\n  }                                                                                                                 // 16\n});                                                                                                                 // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['dbarrett:dropzonejs'] = {};\n\n})();\n","servePath":"/packages/dbarrett_dropzonejs.js"}]