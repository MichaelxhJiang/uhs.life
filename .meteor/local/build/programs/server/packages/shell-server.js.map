{"version":3,"sources":["meteor://ðŸ’»app/packages/shell-server/main.js","meteor://ðŸ’»app/packages/shell-server/shell-server.js"],"names":["module","watch","require","makeNsSetter","listen","v","shellDir","process","env","METEOR_SHELL_DIR","module1","export","disable","assert","path","stream","fs","net","vm","_","INFO_FILE_MODE","parseInt","EXITING_MESSAGE","callback","Server","Meteor","startup","__meteor_bootstrap__","hooks","startupHooks","push","setImmediate","writeFileSync","getInfoFile","JSON","stringify","status","reason","mode","ignored","self","ok","key","Math","random","toString","slice","server","createServer","socket","onConnection","on","err","console","error","stack","infoFile","unlink","port","address","timeout","setTimeout","removeAllListeners","end","readJSONFromStream","options","replInputSocket","clearTimeout","columns","evaluateAndExit","evalCommand","call","Object","create","command","filename","result","message","code","extend","input","output","defaults","prompt","terminal","useColors","useGlobal","ignoreUndefined","startREPL","repl","start","initializeHistory","originalUnderscore","context","defineProperty","get","set","lastResult","__","enumerable","configurable","setRequireAndModule","addHelp","cmd","helpText","info","commands","help","write","defineCommand","action","exit","eval","_RecoverableError","constructor","_domain","bind","rli","historyFile","getHistoryFile","historyFd","openSync","historyLines","readFileSync","split","seenLines","history","historyIndex","length","line","pop","test","addListener","writeSync","closeSync","inputStream","outputStream","PassThrough","dataSoFar","onData","buffer","lines","shift","json","parse","SyntaxError","finish","join","pipe","onClose","Error","finished","removeListener","evalCommandPromise","Promise","resolve","wrapErrorIfRecoverable","isRecoverableError","Package","ecmascript","noParens","stripParens","classMatch","exec","ECMAScript","compileForShell","script","Script","displayErrors","parseError","then","runInThisContext","global","catch","charAt","bailOnIllegalToken","parser","_literal","blockComment","regExpLiteral","e","name","_inTemplateLiteral","startsWith","lineParser","modules","toBeInstalled","shellModuleName","exports","extensions","meteorInstall"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAAC,OAAIF,OAAOG,YAAP;AAAL,CAA1C,EAAsE,CAAtE;AAAyE,IAAIC,eAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACE,QAAD,YAAQC,CAAR,EAAU;AAACD,aAAOC,CAAP;AAAS;AAApB,CAA1C,EAAgE,CAAhE;AAGpF,IAAMC,WAAWC,QAAQC,GAAR,CAAYC,gBAA7B;;AACA,IAAIH,QAAJ,EAAc;AACZF,SAAOE,QAAP;AACD,uH;;;;;;;;;;;;;;;;;;;;;ACND,IAAMI,UAAQV,MAAd;AAAqBU,QAAQC,MAAR,CAAe;AAACP,UAAO;AAAA,WAAIA,MAAJ;AAAA,GAAR;AAAmBQ,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAA3B,CAAf;;AAArB,IAAIC,SAASX,QAAQ,QAAR,CAAb;;AACA,IAAIY,OAAOZ,QAAQ,MAAR,CAAX;;AACA,IAAIa,SAASb,QAAQ,QAAR,CAAb;;AACA,IAAIc,KAAKd,QAAQ,IAAR,CAAT;;AACA,IAAIe,MAAMf,QAAQ,KAAR,CAAV;;AACA,IAAIgB,KAAKhB,QAAQ,IAAR,CAAT;;AACA,IAAIiB,IAAIjB,QAAQ,YAAR,CAAR;;AACA,IAAIkB,iBAAiBC,SAAS,KAAT,EAAgB,CAAhB,CAArB,C,CAAyC;;AACzC,IAAIC,kBAAkB,kBAAtB,C,CAEA;AACA;;AACO,SAASlB,MAAT,CAAgBE,QAAhB,EAA0B;AAC/B,WAASiB,QAAT,GAAoB;AAClB,QAAIC,MAAJ,CAAWlB,QAAX,EAAqBF,MAArB;AACD,GAH8B,CAK/B;AACA;;;AACA,MAAI,QAAOqB,MAAP,uDAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9BA,WAAOC,OAAP,CAAeH,QAAf;AACD,GAFD,MAEO,IAAI,QAAOI,oBAAP,uDAAOA,oBAAP,OAAgC,QAApC,EAA8C;AACnD,QAAIC,QAAQD,qBAAqBE,YAAjC;;AACA,QAAID,KAAJ,EAAW;AACTA,YAAME,IAAN,CAAWP,QAAX;AACD,KAFD,MAEO;AACL;AACAQ,mBAAaR,QAAb;AACD;AACF;AACF;;AAGM,SAASX,OAAT,CAAiBN,QAAjB,EAA2B;AAChC,MAAI;AACF;AACA;AACA;AACAU,OAAGgB,aAAH,CACEC,YAAY3B,QAAZ,CADF,EAEE4B,KAAKC,SAAL,CAAe;AACbC,cAAQ,UADK;AAEbC,cAAQ;AAFK,KAAf,IAGK,IALP,EAME;AAAEC,YAAMlB;AAAR,KANF;AAQD,GAZD,CAYE,OAAOmB,OAAP,EAAgB,CAAE;AACrB;;IAEKf,M;AACJ,kBAAYlB,QAAZ,EAAsB;AAAA;AACpB,QAAIkC,OAAO,IAAX;AACA3B,WAAO4B,EAAP,CAAUD,gBAAgBhB,MAA1B;AAEAgB,SAAKlC,QAAL,GAAgBA,QAAhB;AACAkC,SAAKE,GAAL,GAAWC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAX;AAEAN,SAAKO,MAAL,GAAc9B,IAAI+B,YAAJ,CAAiB,UAASC,MAAT,EAAiB;AAC9CT,WAAKU,YAAL,CAAkBD,MAAlB;AACD,KAFa,EAEXE,EAFW,CAER,OAFQ,EAEC,UAASC,GAAT,EAAc;AAC3BC,cAAQC,KAAR,CAAcF,IAAIG,KAAlB;AACD,KAJa,CAAd;AAKD;;mBAEDnD,M;sBAAS;AACP,UAAIoC,OAAO,IAAX;AACA,UAAIgB,WAAWvB,YAAYO,KAAKlC,QAAjB,CAAf;AAEAU,SAAGyC,MAAH,CAAUD,QAAV,EAAoB,YAAW;AAC7BhB,aAAKO,MAAL,CAAY3C,MAAZ,CAAmB,CAAnB,EAAsB,WAAtB,EAAmC,YAAW;AAC5CY,aAAGgB,aAAH,CAAiBwB,QAAjB,EAA2BtB,KAAKC,SAAL,CAAe;AACxCC,oBAAQ,SADgC;AAExCsB,kBAAMlB,KAAKO,MAAL,CAAYY,OAAZ,GAAsBD,IAFY;AAGxChB,iBAAKF,KAAKE;AAH8B,WAAf,IAItB,IAJL,EAIW;AACTJ,kBAAMlB;AADG,WAJX;AAOD,SARD;AASD,OAVD;AAWD;;;;;mBAED8B,Y;0BAAaD,M,EAAQ;AACnB,UAAIT,OAAO,IAAX,CADmB,CAGnB;AACA;;AACAS,aAAOE,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BF,iBAAS,IAAT;AACD,OAFD,EALmB,CASnB;AACA;;AACA,UAAIW,UAAUC,WAAW,YAAW;AAClC,YAAIZ,MAAJ,EAAY;AACVA,iBAAOa,kBAAP,CAA0B,MAA1B;AACAb,iBAAOc,GAAP,CAAWzC,kBAAkB,IAA7B;AACD;AACF,OALa,EAKX,IALW,CAAd,CAXmB,CAkBnB;AACA;AACA;AACA;;AACA0C,yBAAmBf,MAAnB,EAA2B,UAAUK,KAAV,EAAiBW,OAAjB,EAA0BC,eAA1B,EAA2C;AACpEC,qBAAaP,OAAb;;AAEA,YAAIN,KAAJ,EAAW;AACTL,mBAAS,IAAT;AACAI,kBAAQC,KAAR,CAAcA,MAAMC,KAApB;AACA;AACD;;AAED,YAAIU,QAAQvB,GAAR,KAAgBF,KAAKE,GAAzB,EAA8B;AAC5B,cAAIO,MAAJ,EAAY;AACVA,mBAAOc,GAAP,CAAWzC,kBAAkB,IAA7B;AACD;;AACD;AACD;;AACD,eAAO2C,QAAQvB,GAAf,CAfoE,CAiBpE;;AACA,YAAIuB,QAAQG,OAAR,IAAmBnB,MAAvB,EAA+B;AAC7BA,iBAAOmB,OAAP,GAAiBH,QAAQG,OAAzB;AACD;;AACD,eAAOH,QAAQG,OAAf;;AAEA,YAAIH,QAAQI,eAAZ,EAA6B;AAC3BC,sBAAYC,IAAZ,CACEC,OAAOC,MAAP,CAAc,IAAd,CADF,EACuB;AACrBR,kBAAQI,eAAR,CAAwBK,OAF1B,EAGE,IAHF,EAGQ;AACNT,kBAAQI,eAAR,CAAwBM,QAAxB,IAAoC,gBAJtC,EAKE,UAAUrB,KAAV,EAAiBsB,MAAjB,EAAyB;AACvB,gBAAI3B,MAAJ,EAAY;AACV,kBAAI4B,UAAUvB,QAAQ;AACpBA,uBAAOA,QAAQ,EADK;AAEpBwB,sBAAM;AAFc,eAAR,GAGV;AACFF,wBAAQA;AADN,eAHJ,CADU,CAQV;AACA;;AACA3B,qBAAOc,GAAP,CAAW7B,KAAKC,SAAL,CAAe0C,OAAf,IAA0B,IAArC;AACD;AACF,WAlBH;AAoBA;AACD;;AACD,eAAOZ,QAAQI,eAAf,CA9CoE,CAgDpE;;AACAlD,UAAE4D,MAAF,CAASd,OAAT,EAAkB;AAChBe,iBAAOd,eADS;AAEhBe,kBAAQhC;AAFQ,SAAlB,EAjDoE,CAsDpE;;;AACA9B,UAAE+D,QAAF,CAAWjB,OAAX,EAAoB;AAClBkB,kBAAQ,IADU;AAElBC,oBAAU,IAFQ;AAGlBC,qBAAW,IAHO;AAIlBC,qBAAW,IAJO;AAKlBC,2BAAiB;AALC,SAApB;;AAQA/C,aAAKgD,SAAL,CAAevB,OAAf;AACD,OAhED;AAiED;;;;;mBAEDuB,S;uBAAUvB,O,EAAS;AACjB,UAAIzB,OAAO,IAAX,CADiB,CAGjB;AACA;;AACAyB,cAAQgB,MAAR,CAAe9B,EAAf,CAAkB,OAAlB,EAA2B,YAAW;AACpCc,gBAAQgB,MAAR,GAAiB,IAAjB;AACD,OAFD;;AAIA,UAAIQ,OAAOjD,KAAKiD,IAAL,GAAYvF,QAAQ,MAAR,EAAgBwF,KAAhB,CAAsBzB,OAAtB,CAAvB,CATiB,CAWjB;;;AACAzB,WAAKmD,iBAAL,GAZiB,CAcjB;AACA;AACA;;AACA,UAAIC,qBAAqBH,KAAKI,OAAL,CAAa1E,CAAtC;AAEAqD,aAAOsB,cAAP,CAAsBL,KAAKI,OAA3B,EAAoC,GAApC,EAAyC;AACvC;AACAE,aAAK,YAAY;AAAE,iBAAOH,kBAAP;AAA4B,SAFR;AAIvC;AACAI,aAAK,UAASC,UAAT,EAAqB;AACxBR,eAAKI,OAAL,CAAaK,EAAb,GAAkBD,UAAlB;AACD,SAPsC;AASvCE,oBAAY,IAT2B;AAWvC;AACA;AACAC,sBAAc;AAbyB,OAAzC;AAgBAC,0BAAoBZ,KAAKI,OAAzB;AAEAJ,WAAKI,OAAL,CAAaJ,IAAb,GAAoBA,IAApB,CArCiB,CAuCjB;;AACA,eAASa,OAAT,CAAiBC,GAAjB,EAAsBC,QAAtB,EAAgC;AAC9B,YAAIC,OAAOhB,KAAKiB,QAAL,CAAcH,GAAd,KAAsBd,KAAKiB,QAAL,CAAc,MAAMH,GAApB,CAAjC;;AACA,YAAIE,IAAJ,EAAU;AACRA,eAAKE,IAAL,GAAYH,QAAZ;AACD;AACF;;AACDF,cAAQ,OAAR,EAAiB,wDAAjB;AACAA,cAAQ,MAAR,EAAgB,wCAAhB;AACAA,cAAQ,MAAR,EAAgB,4BAAhB,EAhDiB,CAkDjB;AACA;;AACAb,WAAKtC,EAAL,CAAQ,MAAR,EAAgB,YAAW;AACzB,YAAIc,QAAQgB,MAAZ,EAAoB;AAClBhB,kBAAQgB,MAAR,CAAe2B,KAAf,CAAqBtF,kBAAkB,IAAvC;AACA2C,kBAAQgB,MAAR,CAAelB,GAAf;AACD;AACF,OALD,EApDiB,CA2DjB;AACA;;AACAxD,cAAQ4C,EAAR,CAAW,MAAX,EAAmB,YAAW;AAC5B,YAAIc,QAAQgB,MAAZ,EAAoB;AAClBhB,kBAAQgB,MAAR,CAAelB,GAAf;AACD;AACF,OAJD,EA7DiB,CAmEjB;AACA;;AACA0B,WAAKoB,aAAL,CAAmB,QAAnB,EAA6B;AAC3BF,cAAM,kCADqB;AAE3BG,gBAAQ,YAAW;AACjBvG,kBAAQwG,IAAR,CAAa,CAAb;AACD;AAJ0B,OAA7B,EArEiB,CA4EjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAtB,WAAKuB,IAAL,CACE,GADF,EACO,IADP,EACa,gBADb,EAEE,UAAU1D,KAAV,EAAiB;AACf;AACAmC,aAAKwB,iBAAL,GAAyB3D,SAASA,MAAM4D,WAAxC,CAFe,CAIf;AACA;;AACAzB,aAAKuB,IAAL,GAAYvB,KAAK0B,OAAL,GACR1B,KAAK0B,OAAL,CAAaC,IAAb,CAAkB9C,WAAlB,CADQ,GAERA,WAFJ,CANe,CAUf;;AACAmB,aAAKiB,QAAL,CAAc,OAAd,EAAuBI,MAAvB,CAA8BvC,IAA9B,CAAmCkB,IAAnC;AACD,OAdH;AAgBD;;;OAED;AACA;;;mBACAE,iB;iCAAoB;AAClB,UAAInD,OAAO,IAAX;AACA,UAAI6E,MAAM7E,KAAKiD,IAAL,CAAU4B,GAApB;AACA,UAAIC,cAAcC,eAAe/E,KAAKlC,QAApB,CAAlB;AACA,UAAIkH,YAAYxG,GAAGyG,QAAH,CAAYH,WAAZ,EAAyB,IAAzB,CAAhB;AACA,UAAII,eAAe1G,GAAG2G,YAAH,CAAgBL,WAAhB,EAA6B,MAA7B,EAAqCM,KAArC,CAA2C,IAA3C,CAAnB;AACA,UAAIC,YAAYrD,OAAOC,MAAP,CAAc,IAAd,CAAhB;;AAEA,UAAI,CAAE4C,IAAIS,OAAV,EAAmB;AACjBT,YAAIS,OAAJ,GAAc,EAAd;AACAT,YAAIU,YAAJ,GAAmB,CAAC,CAApB;AACD;;AAED,aAAOV,IAAIS,OAAJ,IAAeJ,aAAaM,MAAb,GAAsB,CAA5C,EAA+C;AAC7C,YAAIC,OAAOP,aAAaQ,GAAb,EAAX;;AACA,YAAID,QAAQ,KAAKE,IAAL,CAAUF,IAAV,CAAR,IAA2B,CAAEJ,UAAUI,IAAV,CAAjC,EAAkD;AAChDZ,cAAIS,OAAJ,CAAYhG,IAAZ,CAAiBmG,IAAjB;AACAJ,oBAAUI,IAAV,IAAkB,IAAlB;AACD;AACF;;AAEDZ,UAAIe,WAAJ,CAAgB,MAAhB,EAAwB,UAASH,IAAT,EAAe;AACrC,YAAIT,aAAa,CAAb,IAAkB,KAAKW,IAAL,CAAUF,IAAV,CAAtB,EAAuC;AACrCjH,aAAGqH,SAAH,CAAab,SAAb,EAAwBS,OAAO,IAA/B;AACD;AACF,OAJD;AAMAzF,WAAKiD,IAAL,CAAUtC,EAAV,CAAa,MAAb,EAAqB,YAAW;AAC9BnC,WAAGsH,SAAH,CAAad,SAAb;AACAA,oBAAY,CAAC,CAAb;AACD,OAHD;AAID;;;;;;;;AAGH,SAASxD,kBAAT,CAA4BuE,WAA5B,EAAyChH,QAAzC,EAAmD;AACjD,MAAIiH,eAAe,IAAIzH,OAAO0H,WAAX,EAAnB;AACA,MAAIC,YAAY,EAAhB;;AAEA,WAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,QAAIC,QAAQD,OAAO/F,QAAP,CAAgB,MAAhB,EAAwB+E,KAAxB,CAA8B,IAA9B,CAAZ;;AAEA,WAAOiB,MAAMb,MAAN,GAAe,CAAtB,EAAyB;AACvBU,mBAAaG,MAAMC,KAAN,EAAb;;AAEA,UAAI;AACF,YAAIC,OAAO7G,KAAK8G,KAAL,CAAWN,SAAX,CAAX;AACD,OAFD,CAEE,OAAOpF,KAAP,EAAc;AACd,YAAIA,iBAAiB2F,WAArB,EAAkC;AAChC;AACD;;AAED,eAAOC,OAAO5F,KAAP,CAAP;AACD;;AAED,UAAIuF,MAAMb,MAAN,GAAe,CAAnB,EAAsB;AACpBQ,qBAAa5B,KAAb,CAAmBiC,MAAMM,IAAN,CAAW,IAAX,CAAnB;AACD;;AAEDZ,kBAAYa,IAAZ,CAAiBZ,YAAjB;AAEA,aAAOU,OAAO,IAAP,EAAaH,IAAb,CAAP;AACD;AACF;;AAED,WAASM,OAAT,GAAmB;AACjBH,WAAO,IAAII,KAAJ,CAAU,4BAAV,CAAP;AACD;;AAED,MAAIC,WAAW,KAAf;;AACA,WAASL,MAAT,CAAgB5F,KAAhB,EAAuByF,IAAvB,EAA6B;AAC3B,QAAI,CAAEQ,QAAN,EAAgB;AACdA,iBAAW,IAAX;AACAhB,kBAAYiB,cAAZ,CAA2B,MAA3B,EAAmCb,MAAnC;AACAJ,kBAAYiB,cAAZ,CAA2B,OAA3B,EAAoCN,MAApC;AACAX,kBAAYiB,cAAZ,CAA2B,OAA3B,EAAoCH,OAApC;AACA9H,eAAS+B,KAAT,EAAgByF,IAAhB,EAAsBP,YAAtB;AACD;AACF;;AAEDD,cAAYpF,EAAZ,CAAe,MAAf,EAAuBwF,MAAvB;AACAJ,cAAYpF,EAAZ,CAAe,OAAf,EAAwB+F,MAAxB;AACAX,cAAYpF,EAAZ,CAAe,OAAf,EAAwBkG,OAAxB;AACD;;AAED,SAASpH,WAAT,CAAqB3B,QAArB,EAA+B;AAC7B,SAAOQ,KAAKqI,IAAL,CAAU7I,QAAV,EAAoB,WAApB,CAAP;AACD;;AAED,SAASiH,cAAT,CAAwBjH,QAAxB,EAAkC;AAChC,SAAOQ,KAAKqI,IAAL,CAAU7I,QAAV,EAAoB,SAApB,CAAP;AACD,C,CAED;AACA;AACA;;;AACA,IAAImJ,qBAAqBC,QAAQC,OAAR,EAAzB;;AAEA,SAASrF,WAAT,CAAqBI,OAArB,EAA8BmB,OAA9B,EAAuClB,QAAvC,EAAiDpD,QAAjD,EAA2D;AACzD,MAAIkE,OAAO,IAAX;;AAEA,WAASmE,sBAAT,CAAgCtG,KAAhC,EAAuC;AACrC,QAAImC,KAAKwB,iBAAL,IACA4C,mBAAmBvG,KAAnB,EAA0BmC,IAA1B,CADJ,EACqC;AACnC,aAAO,IAAIA,KAAKwB,iBAAT,CAA2B3D,KAA3B,CAAP;AACD,KAHD,MAGO;AACL,aAAOA,KAAP;AACD;AACF;;AAED,MAAIwG,QAAQC,UAAZ,EAAwB;AACtB,QAAIC,WAAWC,YAAYvF,OAAZ,CAAf;;AACA,QAAIsF,aAAatF,OAAjB,EAA0B;AACxB,UAAIwF,aAAa,oBAAoBC,IAApB,CAAyBH,QAAzB,CAAjB;;AACA,UAAIE,cAAcA,WAAW,CAAX,MAAkB,SAApC,EAA+C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxF,kBAAUsF,QAAV;AACD;AACF;;AAED,QAAI;AACFtF,gBAAUoF,QAAQC,UAAR,CAAmBK,UAAnB,CAA8BC,eAA9B,CAA8C3F,OAA9C,CAAV;AACD,KAFD,CAEE,OAAOpB,KAAP,EAAc;AACd/B,eAASqI,uBAAuBtG,KAAvB,CAAT;AACA;AACD;AACF;;AAED,MAAI;AACF,QAAIgH,SAAS,IAAIpJ,GAAGqJ,MAAP,CAAc7F,OAAd,EAAuB;AAClCC,gBAAUA,QADwB;AAElC6F,qBAAe;AAFmB,KAAvB,CAAb;AAID,GALD,CAKE,OAAOC,UAAP,EAAmB;AACnBlJ,aAASqI,uBAAuBa,UAAvB,CAAT;AACA;AACD;;AAEDhB,qBAAmBiB,IAAnB,CAAwB,YAAY;AAClC,QAAIjF,KAAKT,KAAT,EAAgB;AACdzD,eAAS,IAAT,EAAe+I,OAAOK,gBAAP,EAAf;AACD,KAFD,MAEO;AACL;AACA;AACAtE,0BAAoBuE,MAApB;AACArJ,eAAS,IAAT,EAAe+I,OAAOK,gBAAP,EAAf;AACD;AACF,GATD,EASGE,KATH,CASStJ,QATT;AAUD;;AAED,SAAS0I,WAAT,CAAqBvF,OAArB,EAA8B;AAC5B,MAAIA,QAAQoG,MAAR,CAAe,CAAf,MAAsB,GAAtB,IACApG,QAAQoG,MAAR,CAAepG,QAAQsD,MAAR,GAAiB,CAAhC,MAAuC,GAD3C,EACgD;AAC9C,WAAOtD,QAAQ5B,KAAR,CAAc,CAAd,EAAiB4B,QAAQsD,MAAR,GAAiB,CAAlC,CAAP;AACD;;AACD,SAAOtD,OAAP;AACD,C,CAED;AACA;;;AACA,SAASqG,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC,SAAOA,OAAOC,QAAP,KAAoB,IAApB,IACL,CAAED,OAAOE,YADJ,IAEL,CAAEF,OAAOG,aAFX;AAGD,C,CAED;AACA;;;AACA,SAAStB,kBAAT,CAA4BuB,CAA5B,EAA+B3F,IAA/B,EAAqC;AACnC,MAAI2F,KAAKA,EAAEC,IAAF,KAAW,aAApB,EAAmC;AACjC,QAAIxG,UAAUuG,EAAEvG,OAAhB;;AACA,QAAIA,YAAY,+BAAZ,IACAA,YAAY,kCADhB,EACoD;AAClDY,WAAK6F,kBAAL,GAA0B,IAA1B;AACA,aAAO,IAAP;AACD;;AAED,QAAIzG,QAAQ0G,UAAR,CAAmB,yBAAnB,KACA1G,QAAQ0G,UAAR,CAAmB,+BAAnB,CADA,IAEA1G,QAAQ0G,UAAR,CAAmB,kBAAnB,CAFJ,EAE4C;AAC1C,aAAO,IAAP;AACD;;AAED,QAAI1G,YAAY,6BAAhB,EAA+C;AAC7C,aAAO,CAAEkG,mBAAmBtF,KAAK+F,UAAxB,CAAT;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASnF,mBAAT,CAA6BR,OAA7B,EAAsC;AACpC,MAAIiE,QAAQ2B,OAAZ,EAAqB;AACnB;AACA;AACA,QAAIC,gBAAgB,EAApB;AACA,QAAIC,kBAAkB,kBACpBhJ,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CADoB,GACkB,KADxC;;AAGA4I,kBAAcC,eAAd,IAAiC,UAAUzL,OAAV,EAAmB0L,OAAnB,EAA4B5L,MAA5B,EAAoC;AACnE6F,cAAQ7F,MAAR,GAAiBA,MAAjB;AACA6F,cAAQ3F,OAAR,GAAkBA,OAAlB,CAFmE,CAInE;AACA;;AACAA,cAAQ2L,UAAR,GAAqB;AACnB,eAAO,IADY;AAEnB,iBAAS,IAFU;AAGnB,iBAAS;AAHU,OAArB;AAKD,KAXD,CAPmB,CAoBnB;AACA;;;AACA/B,YAAQ2B,OAAR,CAAgBK,aAAhB,CAA8BJ,aAA9B,EAA6C,OAAOC,eAApD;AACD;AACF,yH","file":"/packages/shell-server.js","sourcesContent":["export * from \"./shell-server.js\";\nimport { listen } from \"./shell-server.js\";\n\nconst shellDir = process.env.METEOR_SHELL_DIR;\nif (shellDir) {\n  listen(shellDir);\n}\n","var assert = require(\"assert\");\nvar path = require(\"path\");\nvar stream = require(\"stream\");\nvar fs = require(\"fs\");\nvar net = require(\"net\");\nvar vm = require(\"vm\");\nvar _ = require(\"underscore\");\nvar INFO_FILE_MODE = parseInt(\"600\", 8); // Only the owner can read or write.\nvar EXITING_MESSAGE = \"Shell exiting...\";\n\n// Invoked by the server process to listen for incoming connections from\n// shell clients. Each connection gets its own REPL instance.\nexport function listen(shellDir) {\n  function callback() {\n    new Server(shellDir).listen();\n  }\n\n  // If the server is still in the very early stages of starting up,\n  // Meteor.startup may not available yet.\n  if (typeof Meteor === \"object\") {\n    Meteor.startup(callback);\n  } else if (typeof __meteor_bootstrap__ === \"object\") {\n    var hooks = __meteor_bootstrap__.startupHooks;\n    if (hooks) {\n      hooks.push(callback);\n    } else {\n      // As a fallback, just call the callback asynchronously.\n      setImmediate(callback);\n    }\n  }\n}\n\n// Disabling the shell causes all attached clients to disconnect and exit.\nexport function disable(shellDir) {\n  try {\n    // Replace info.json with a file that says the shell server is\n    // disabled, so that any connected shell clients will fail to\n    // reconnect after the server process closes their sockets.\n    fs.writeFileSync(\n      getInfoFile(shellDir),\n      JSON.stringify({\n        status: \"disabled\",\n        reason: \"Shell server has shut down.\"\n      }) + \"\\n\",\n      { mode: INFO_FILE_MODE }\n    );\n  } catch (ignored) {}\n}\n\nclass Server {\n  constructor(shellDir) {\n    var self = this;\n    assert.ok(self instanceof Server);\n\n    self.shellDir = shellDir;\n    self.key = Math.random().toString(36).slice(2);\n\n    self.server = net.createServer(function(socket) {\n      self.onConnection(socket);\n    }).on(\"error\", function(err) {\n      console.error(err.stack);\n    });\n  }\n\n  listen() {\n    var self = this;\n    var infoFile = getInfoFile(self.shellDir);\n\n    fs.unlink(infoFile, function() {\n      self.server.listen(0, \"127.0.0.1\", function() {\n        fs.writeFileSync(infoFile, JSON.stringify({\n          status: \"enabled\",\n          port: self.server.address().port,\n          key: self.key\n        }) + \"\\n\", {\n          mode: INFO_FILE_MODE\n        });\n      });\n    });\n  }\n\n  onConnection(socket) {\n    var self = this;\n\n    // Make sure this function doesn't try to write anything to the socket\n    // after it has been closed.\n    socket.on(\"close\", function() {\n      socket = null;\n    });\n\n    // If communication is not established within 1000ms of the first\n    // connection, forcibly close the socket.\n    var timeout = setTimeout(function() {\n      if (socket) {\n        socket.removeAllListeners(\"data\");\n        socket.end(EXITING_MESSAGE + \"\\n\");\n      }\n    }, 1000);\n\n    // Let connecting clients configure certain REPL options by sending a\n    // JSON object over the socket. For example, only the client knows\n    // whether it's running a TTY or an Emacs subshell or some other kind of\n    // terminal, so the client must decide the value of options.terminal.\n    readJSONFromStream(socket, function (error, options, replInputSocket) {\n      clearTimeout(timeout);\n\n      if (error) {\n        socket = null;\n        console.error(error.stack);\n        return;\n      }\n\n      if (options.key !== self.key) {\n        if (socket) {\n          socket.end(EXITING_MESSAGE + \"\\n\");\n        }\n        return;\n      }\n      delete options.key;\n\n      // Set the columns to what is being requested by the client.\n      if (options.columns && socket) {\n        socket.columns = options.columns;\n      }\n      delete options.columns;\n\n      if (options.evaluateAndExit) {\n        evalCommand.call(\n          Object.create(null), // Dummy repl object without ._RecoverableError.\n          options.evaluateAndExit.command,\n          null, // evalCommand ignores the context parameter, anyway\n          options.evaluateAndExit.filename || \"<meteor shell>\",\n          function (error, result) {\n            if (socket) {\n              var message = error ? {\n                error: error + \"\",\n                code: 1\n              } : {\n                result: result\n              };\n\n              // Sending back a JSON payload allows the client to\n              // distinguish between errors and successful results.\n              socket.end(JSON.stringify(message) + \"\\n\");\n            }\n          }\n        );\n        return;\n      }\n      delete options.evaluateAndExit;\n\n      // Immutable options.\n      _.extend(options, {\n        input: replInputSocket,\n        output: socket\n      });\n\n      // Overridable options.\n      _.defaults(options, {\n        prompt: \"> \",\n        terminal: true,\n        useColors: true,\n        useGlobal: true,\n        ignoreUndefined: true,\n      });\n\n      self.startREPL(options);\n    });\n  }\n\n  startREPL(options) {\n    var self = this;\n\n    // Make sure this function doesn't try to write anything to the output\n    // stream after it has been closed.\n    options.output.on(\"close\", function() {\n      options.output = null;\n    });\n\n    var repl = self.repl = require(\"repl\").start(options);\n\n    // History persists across shell sessions!\n    self.initializeHistory();\n\n    // Save the global `_` object in the server.  This is probably defined by the\n    // underscore package.  It is unlikely to be the same object as the `var _ =\n    // require('underscore')` in this file!\n    var originalUnderscore = repl.context._;\n\n    Object.defineProperty(repl.context, \"_\", {\n      // Force the global _ variable to remain bound to underscore.\n      get: function () { return originalUnderscore; },\n\n      // Expose the last REPL result as __ instead of _.\n      set: function(lastResult) {\n        repl.context.__ = lastResult;\n      },\n\n      enumerable: true,\n\n      // Allow this property to be (re)defined more than once (e.g. each\n      // time the server restarts).\n      configurable: true\n    });\n\n    setRequireAndModule(repl.context);\n\n    repl.context.repl = repl;\n\n    // Some improvements to the existing help messages.\n    function addHelp(cmd, helpText) {\n      var info = repl.commands[cmd] || repl.commands[\".\" + cmd];\n      if (info) {\n        info.help = helpText;\n      }\n    }\n    addHelp(\"break\", \"Terminate current command input and display new prompt\");\n    addHelp(\"exit\", \"Disconnect from server and leave shell\");\n    addHelp(\"help\", \"Show this help information\");\n\n    // When the REPL exits, signal the attached client to exit by sending it\n    // the special EXITING_MESSAGE.\n    repl.on(\"exit\", function() {\n      if (options.output) {\n        options.output.write(EXITING_MESSAGE + \"\\n\");\n        options.output.end();\n      }\n    });\n\n    // When the server process exits, end the output stream but do not\n    // signal the attached client to exit.\n    process.on(\"exit\", function() {\n      if (options.output) {\n        options.output.end();\n      }\n    });\n\n    // This Meteor-specific shell command rebuilds the application as if a\n    // change was made to server code.\n    repl.defineCommand(\"reload\", {\n      help: \"Restart the server and the shell\",\n      action: function() {\n        process.exit(0);\n      }\n    });\n\n    // TODO: Node 6: Revisit this as repl._RecoverableError is now exported.\n    //       as `Recoverable` from `repl`.  Maybe revisit this entirely\n    //       as the docs have been updated too:\n    //       https://nodejs.org/api/repl.html#repl_custom_evaluation_functions\n    //       https://github.com/nodejs/node/blob/v6.x/lib/repl.js#L1398\n    // Trigger one recoverable error using the default eval function, just\n    // to capture the Recoverable error constructor, so that our custom\n    // evalCommand function can wrap recoverable errors properly.\n    repl.eval(\n      \"{\", null, \"<meteor shell>\",\n      function (error) {\n        // Capture the Recoverable error constructor.\n        repl._RecoverableError = error && error.constructor;\n\n        // Now set repl.eval to the actual evalCommand function that we want\n        // to use, bound to repl._domain if necessary.\n        repl.eval = repl._domain\n          ? repl._domain.bind(evalCommand)\n          : evalCommand;\n\n        // Terminate the partial evaluation of the { command.\n        repl.commands[\"break\"].action.call(repl);\n      }\n    );\n  }\n\n  // This function allows a persistent history of shell commands to be saved\n  // to and loaded from .meteor/local/shell-history.\n  initializeHistory() {\n    var self = this;\n    var rli = self.repl.rli;\n    var historyFile = getHistoryFile(self.shellDir);\n    var historyFd = fs.openSync(historyFile, \"a+\");\n    var historyLines = fs.readFileSync(historyFile, \"utf8\").split(\"\\n\");\n    var seenLines = Object.create(null);\n\n    if (! rli.history) {\n      rli.history = [];\n      rli.historyIndex = -1;\n    }\n\n    while (rli.history && historyLines.length > 0) {\n      var line = historyLines.pop();\n      if (line && /\\S/.test(line) && ! seenLines[line]) {\n        rli.history.push(line);\n        seenLines[line] = true;\n      }\n    }\n\n    rli.addListener(\"line\", function(line) {\n      if (historyFd >= 0 && /\\S/.test(line)) {\n        fs.writeSync(historyFd, line + \"\\n\");\n      }\n    });\n\n    self.repl.on(\"exit\", function() {\n      fs.closeSync(historyFd);\n      historyFd = -1;\n    });\n  }\n}\n\nfunction readJSONFromStream(inputStream, callback) {\n  var outputStream = new stream.PassThrough;\n  var dataSoFar = \"\";\n\n  function onData(buffer) {\n    var lines = buffer.toString(\"utf8\").split(\"\\n\");\n\n    while (lines.length > 0) {\n      dataSoFar += lines.shift();\n\n      try {\n        var json = JSON.parse(dataSoFar);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          continue;\n        }\n\n        return finish(error);\n      }\n\n      if (lines.length > 0) {\n        outputStream.write(lines.join(\"\\n\"));\n      }\n\n      inputStream.pipe(outputStream);\n\n      return finish(null, json);\n    }\n  }\n\n  function onClose() {\n    finish(new Error(\"stream unexpectedly closed\"));\n  }\n\n  var finished = false;\n  function finish(error, json) {\n    if (! finished) {\n      finished = true;\n      inputStream.removeListener(\"data\", onData);\n      inputStream.removeListener(\"error\", finish);\n      inputStream.removeListener(\"close\", onClose);\n      callback(error, json, outputStream);\n    }\n  }\n\n  inputStream.on(\"data\", onData);\n  inputStream.on(\"error\", finish);\n  inputStream.on(\"close\", onClose);\n}\n\nfunction getInfoFile(shellDir) {\n  return path.join(shellDir, \"info.json\");\n}\n\nfunction getHistoryFile(shellDir) {\n  return path.join(shellDir, \"history\");\n}\n\n// Shell commands need to be executed in a Fiber in case they call into\n// code that yields. Using a Promise is an even better idea, since it runs\n// its callbacks in Fibers drawn from a pool, so the Fibers are recycled.\nvar evalCommandPromise = Promise.resolve();\n\nfunction evalCommand(command, context, filename, callback) {\n  var repl = this;\n\n  function wrapErrorIfRecoverable(error) {\n    if (repl._RecoverableError &&\n        isRecoverableError(error, repl)) {\n      return new repl._RecoverableError(error);\n    } else {\n      return error;\n    }\n  }\n\n  if (Package.ecmascript) {\n    var noParens = stripParens(command);\n    if (noParens !== command) {\n      var classMatch = /^\\s*class\\s+(\\w+)/.exec(noParens);\n      if (classMatch && classMatch[1] !== \"extends\") {\n        // If the command looks like a named ES2015 class, we remove the\n        // extra layer of parentheses added by the REPL so that the\n        // command will be evaluated as a class declaration rather than as\n        // a named class expression. Note that you can still type (class A\n        // {}) explicitly to evaluate a named class expression. The REPL\n        // code that calls evalCommand handles named function expressions\n        // similarly (first with and then without parentheses), but that\n        // code doesn't know about ES2015 classes, which is why we have to\n        // handle them here.\n        command = noParens;\n      }\n    }\n\n    try {\n      command = Package.ecmascript.ECMAScript.compileForShell(command);\n    } catch (error) {\n      callback(wrapErrorIfRecoverable(error));\n      return;\n    }\n  }\n\n  try {\n    var script = new vm.Script(command, {\n      filename: filename,\n      displayErrors: false\n    });\n  } catch (parseError) {\n    callback(wrapErrorIfRecoverable(parseError));\n    return;\n  }\n\n  evalCommandPromise.then(function () {\n    if (repl.input) {\n      callback(null, script.runInThisContext());\n    } else {\n      // If repl didn't start, `require` and `module` are not visible\n      // in the vm context.\n      setRequireAndModule(global);\n      callback(null, script.runInThisContext());\n    }\n  }).catch(callback);\n}\n\nfunction stripParens(command) {\n  if (command.charAt(0) === \"(\" &&\n      command.charAt(command.length - 1) === \")\") {\n    return command.slice(1, command.length - 1);\n  }\n  return command;\n}\n\n// The bailOnIllegalToken and isRecoverableError functions are taken from\n// https://github.com/nodejs/node/blob/c9e670ea2a/lib/repl.js#L1227-L1253\nfunction bailOnIllegalToken(parser) {\n  return parser._literal === null &&\n    ! parser.blockComment &&\n    ! parser.regExpLiteral;\n}\n\n// If the error is that we've unexpectedly ended the input,\n// then let the user try to recover by adding more input.\nfunction isRecoverableError(e, repl) {\n  if (e && e.name === 'SyntaxError') {\n    var message = e.message;\n    if (message === 'Unterminated template literal' ||\n        message === 'Missing } in template expression') {\n      repl._inTemplateLiteral = true;\n      return true;\n    }\n\n    if (message.startsWith('Unexpected end of input') ||\n        message.startsWith('missing ) after argument list') ||\n        message.startsWith('Unexpected token')) {\n      return true;\n    }\n\n    if (message === 'Invalid or unexpected token') {\n      return ! bailOnIllegalToken(repl.lineParser);\n    }\n  }\n\n  return false;\n}\n\nfunction setRequireAndModule(context) {\n  if (Package.modules) {\n    // Use the same `require` function and `module` object visible to the\n    // application.\n    var toBeInstalled = {};\n    var shellModuleName = \"meteor-shell-\" +\n      Math.random().toString(36).slice(2) + \".js\";\n\n    toBeInstalled[shellModuleName] = function (require, exports, module) {\n      context.module = module;\n      context.require = require;\n\n      // Tab completion sometimes uses require.extensions, but only for\n      // the keys.\n      require.extensions = {\n        \".js\": true,\n        \".json\": true,\n        \".node\": true,\n      };\n    };\n\n    // This populates repl.context.{module,require} by evaluating the\n    // module defined above.\n    Package.modules.meteorInstall(toBeInstalled)(\"./\" + shellModuleName);\n  }\n}\n"]}