{"version":3,"sources":["meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-helpers.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-common.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-server.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-init.coffee"],"names":[],"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","file":"/packages/tap_i18n.js","sourcesContent":["share.helpers = {}","fallback_language = globals.fallback_language\n\nTAPi18n = ->\n  EventEmitter.call @\n\n  @_fallback_language = fallback_language\n\n  @_language_changed_tracker = new Tracker.Dependency\n\n  @_loaded_languages = [fallback_language] # stores the loaded languages, the fallback language is loaded automatically\n\n  @conf = null # If conf isn't null we assume that tap:i18n is enabled for the project.\n             # We assume conf is valid, we sterilize and validate it during the build process.\n\n  @packages = {} # Stores the packages' package-tap.i18n jsons\n\n  @languages_names = {} # Stores languages that we've found languages files for in the project dir.\n                                      # format:\n                                      # {\n                                      #    lang_tag: [lang_name_in_english, lang_name_in_local_language]\n                                      # }\n\n  @translations = {} # Stores the packages/project translations - Server side only\n                   # fallback_language translations are not stored here\n\n\n  if Meteor.isClient\n    Session.set @_loaded_lang_session_key, null\n\n    @_languageSpecificTranslators = {}\n    @_languageSpecificTranslatorsTrackers = {}\n\n  if Meteor.isServer\n    @server_translators = {}\n\n    Meteor.startup =>\n      # If tap-i18n is enabled for that project\n      if @_enabled()\n        @_registerHTTPMethod()\n\n  @__ = @_getPackageI18nextProxy(globals.project_translations_domain)\n\n  TAPi18next.setLng fallback_language\n\n  return @\n\nUtil.inherits TAPi18n, EventEmitter\n\n_.extend TAPi18n.prototype,\n  _loaded_lang_session_key: \"TAPi18n::loaded_lang\"\n\n  _enable: (conf) ->\n    # tap:i18n gets enabled for a project once a conf file is set for it.\n    # It can be either a conf object that was set by project-tap.i18n file or\n    # a default conf, which is being added if the project has lang files\n    # (*.i18n.json) but not project-tap.i18n\n    @conf = conf\n\n    @._onceEnabled()\n\n  _onceEnabled: () ->\n    # The arch specific code can use this for procedures that should be performed once\n    # tap:i18n gets enabled (project conf file is being set)\n    return\n\n  _enabled: ->\n    # read the comment of @conf\n    @conf?\n\n  _getPackageDomain: (package_name) ->\n    package_name.replace(/:/g, \"-\")\n\n  addResourceBundle: (lang_tag, package_name, translations) ->\n    TAPi18next.addResourceBundle(lang_tag, @_getPackageDomain(package_name), translations)\n\n  _getSpecificLangTranslator: (lang) ->\n    current_lang = TAPi18next.lng()\n\n    translator = null\n    TAPi18next.setLng lang, {fixLng: true}, (lang_translator) =>\n      translator = lang_translator\n\n    # Restore i18next lang that had been changed in the process of generating\n    # lang specific translator\n    TAPi18next.setLng current_lang\n\n    return translator\n\n  _getProjectLanguages: () ->\n    # Return an array of languages available for the current project\n    if @._enabled()\n      if _.isArray @.conf.supported_languages\n        return _.union([@._fallback_language], @.conf.supported_languages)\n      else\n        # If supported_languages is null, all the languages we found\n        # translations files to in the project level are considered supported.\n        # We use the @.languages_names array to tell which languages we found\n        # since for every i18n.json file we found in the project level we add\n        # an entry for its language to @.languages_names in the build process.\n        #\n        # We also know for certain that when tap-i18n is enabled the fallback\n        # lang is in @.languages_names\n        return _.keys @.languages_names\n    else\n      return [@._fallback_language]\n\n  getLanguages: ->\n    if not @._enabled()\n      return null\n\n    languages = {}\n    for lang_tag in @._getProjectLanguages()\n      languages[lang_tag] =\n        name: @.languages_names[lang_tag][1]\n        en: @.languages_names[lang_tag][0]\n\n    languages\n\n  _loadLangFileObject: (language_tag, data) ->\n    for package_name, package_keys of data\n      # Translations that are added by loadTranslations() have higher priority\n      package_keys = _.extend({}, package_keys, @_loadTranslations_cache[language_tag]?[package_name] or {})\n\n      @addResourceBundle(language_tag, package_name, package_keys)\n\n  _loadTranslations_cache: {}\n  loadTranslations: (translations, namespace) ->\n    project_languages = @_getProjectLanguages()\n\n    for language_tag, translation_keys of translations\n      if not @_loadTranslations_cache[language_tag]?\n        @_loadTranslations_cache[language_tag] = {}\n\n      if not @_loadTranslations_cache[language_tag][namespace]?\n        @_loadTranslations_cache[language_tag][namespace] = {}\n\n      _.extend(@_loadTranslations_cache[language_tag][namespace], translation_keys)\n\n      @addResourceBundle(language_tag, namespace, translation_keys)\n\n      if Meteor.isClient and @getLanguage() == language_tag\n        # Retranslate if session language updated\n        @_language_changed_tracker.changed()","_.extend TAPi18n.prototype,\n  server_translators: null\n\n  _registerServerTranslator: (lang_tag, package_name) ->\n    if @_enabled()\n      if not(lang_tag of @server_translators)\n        @server_translators[lang_tag] = @_getSpecificLangTranslator(lang_tag)\n\n      # fallback language is integrated, and isn't part of @translations \n      if lang_tag != @_fallback_language\n        @addResourceBundle(lang_tag, package_name, @translations[lang_tag][package_name])\n\n    if not(@_fallback_language of @server_translators)\n      @server_translators[@_fallback_language] = @_getSpecificLangTranslator(@_fallback_language)\n\n  _registerAllServerTranslators: () ->\n    for lang_tag in @_getProjectLanguages()\n      for package_name of @translations[lang_tag]\n        @_registerServerTranslator(lang_tag, package_name)\n\n  _getPackageI18nextProxy: (package_name) ->\n    # A proxy to TAPi18next.t where the namespace is preset to the package's\n    (key, options, lang_tag=null) =>\n      if not lang_tag?\n        # translate to fallback_language\n        return @server_translators[@_fallback_language] \"#{@_getPackageDomain(package_name)}:#{key}\", options\n      else if not(lang_tag of @server_translators)\n        console.log \"Warning: language #{lang_tag} is not supported in this project, fallback language (#{@_fallback_language})\"\n        return @server_translators[@_fallback_language] \"#{@_getPackageDomain(package_name)}:#{key}\", options\n      else\n        return @server_translators[lang_tag] \"#{@_getPackageDomain(package_name)}:#{key}\", options\n\n  _registerHTTPMethod: ->\n    self = @\n\n    methods = {}\n\n    if not self._enabled()\n      throw new Meteor.Error 500, \"tap-i18n has to be enabled in order to register the HTTP method\"\n\n    methods[\"#{self.conf.i18n_files_route.replace(/\\/$/, \"\")}/multi/:langs\"] =\n      get: () ->\n        if not RegExp(\"^((#{globals.langauges_tags_regex},)*#{globals.langauges_tags_regex}|all).json$\").test(@params.langs)\n          return @setStatusCode(401)\n\n        langs = @params.langs.replace \".json\", \"\"\n\n        if langs == \"all\"\n          output = self.translations\n        else\n          output = {}\n\n          langs = langs.split(\",\")\n          for lang_tag in langs\n            if lang_tag in self._getProjectLanguages() and \\\n               lang_tag != self._fallback_language # fallback language is integrated to the bundle\n              language_translations = self.translations[lang_tag]\n\n              if language_translations?\n                output[lang_tag] = language_translations\n\n        return JSON.stringify(output)\n\n    methods[\"#{self.conf.i18n_files_route.replace(/\\/$/, \"\")}/:lang\"] =\n      get: () ->\n        if not RegExp(\"^#{globals.langauges_tags_regex}.json$\").test(@params.lang)\n          return @setStatusCode(401)\n\n        lang_tag = @params.lang.replace \".json\", \"\"\n\n        if lang_tag not in self._getProjectLanguages() or \\\n           lang_tag == self._fallback_language # fallback language is integrated to the bundle\n          return @setStatusCode(404) # not found\n\n        language_translations = self.translations[lang_tag]\n        # returning {} if lang_tag is not in translations allows the project\n        # developer to force a language supporte with project-tap.i18n's\n        # supported_languages property, even if that language has no lang\n        # files.\n        return JSON.stringify(if language_translations? then language_translations else {})\n\n    HTTP.methods methods\n\n  _onceEnabled: ->\n    @_registerAllServerTranslators()","TAPi18n = new TAPi18n()"]}