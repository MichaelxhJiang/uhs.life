{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/startup/server/categories.js","filenameRelative":"imports/startup/server/categories.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/startup/server/categories.js.map","sourceFileName":"imports/startup/server/categories.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"categories"},"ignored":false,"code":"if (Meteor.isServer) {\n   Meteor.publish('keywords', function () {\n      function postsPublication() {\n         return Posts.find({});\n      }\n\n      return postsPublication;\n   }());\n}\n\nvar categories = new Map(); //athletics\n\ncategories.set('gym', 'athletics');\ncategories.set('athletic', 'athletics');\ncategories.set('athletics', 'athletics');\ncategories.set('sport', 'athletics');\ncategories.set('sports', 'athletics');\ncategories.set('volleyball', 'athletics');\ncategories.set('soccer', 'athletics');\ncategories.set('frisbee', 'athletics');\ncategories.set('workout', 'athletics');\ncategories.set('curling', 'athletics');\ncategories.set('baseball', 'athletics');\ncategories.set('basketball', 'athletics');\ncategories.set('football', 'athletics');\ncategories.set('volleyball', 'athletics'); //academics\n\ncategories.set('math', 'academics');\ncategories.set('english', 'academics');\ncategories.set('calculus', 'academics');\ncategories.set('science', 'academics');\ncategories.set('physics', 'academics');\ncategories.set('chemistry', 'academics');\ncategories.set('biology', 'academics');\ncategories.set('computing', 'academics');\ncategories.set('academics', 'academics');\ncategories.set('academic', 'academics');\ncategories.set('class', 'academics');\ncategories.set('tutor', 'academics');\ncategories.set('marks', 'academics');\ncategories.set('mark', 'academics'); //competition\n\ncategories.set('contest', 'competition');\ncategories.set('contests', 'competition');\ncategories.set('competition', 'competition');\ncategories.set('competitions', 'competition');\ncategories.set('vs', 'competition');\ncategories.set('fight', 'competition');\ncategories.set('battle', 'competition');\nMeteor.methods({\n   //return all categories found within text\n   'keywords.getKeywords': function (text) {\n      text = text.toLowerCase();\n      var separators = [' , ', ', ', ',', ' ,', ' ']; //\n\n      var keys = text.split(/[ ,.]+/); //console.log(keys);\n\n      var len = keys.length;\n      var ans = [];\n\n      for (var i = 0; i < len; ++i) {\n         var key = keys[i];\n\n         if (categories.has(key)) {\n            if (!ans.includes(categories.get(key))) {\n               ans.push(categories.get(key));\n            }\n         }\n      }\n\n      return ans;\n   }\n});","map":{"version":3,"sources":["imports/startup/server/categories.js"],"names":["Meteor","isServer","publish","postsPublication","Posts","find","categories","Map","set","methods","text","toLowerCase","separators","keys","split","len","length","ans","i","key","has","includes","get","push"],"mappings":"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","file":"imports/startup/server/categories.js.map","sourcesContent":["if (Meteor.isServer) {\r\n    Meteor.publish('keywords', function postsPublication() {\r\n        return Posts.find({});\r\n    });\r\n}\r\n\r\nconst categories = new Map();\r\n//athletics\r\ncategories.set('gym', 'athletics');\r\ncategories.set('athletic', 'athletics');\r\ncategories.set('athletics', 'athletics')\r\ncategories.set('sport', 'athletics');\r\ncategories.set('sports', 'athletics');\r\ncategories.set('volleyball', 'athletics');\r\ncategories.set('soccer', 'athletics');\r\ncategories.set('frisbee', 'athletics');\r\ncategories.set('workout', 'athletics');\r\ncategories.set('curling', 'athletics');\r\ncategories.set('baseball', 'athletics');\r\ncategories.set('basketball', 'athletics');\r\ncategories.set('football', 'athletics');\r\ncategories.set('volleyball', 'athletics');\r\n\r\n//academics\r\ncategories.set('math', 'academics');\r\ncategories.set('english', 'academics');\r\ncategories.set('calculus', 'academics');\r\ncategories.set('science', 'academics');\r\ncategories.set('physics', 'academics');\r\ncategories.set('chemistry', 'academics');\r\ncategories.set('biology', 'academics');\r\ncategories.set('computing', 'academics');\r\ncategories.set('academics', 'academics');\r\ncategories.set('academic', 'academics');\r\ncategories.set('class', 'academics');\r\ncategories.set('tutor', 'academics');\r\ncategories.set('marks', 'academics');\r\ncategories.set('mark', 'academics');\r\n\r\n//competition\r\ncategories.set('contest', 'competition');\r\ncategories.set('contests', 'competition');\r\ncategories.set('competition', 'competition');\r\ncategories.set('competitions', 'competition');\r\ncategories.set('vs', 'competition');\r\ncategories.set('fight', 'competition');\r\ncategories.set('battle', 'competition');\r\n\r\nMeteor.methods({\r\n   //return all categories found within text\r\n   'keywords.getKeywords': function(text) {\r\n      text = text.toLowerCase();\r\n      var separators = [' , ', ', ', ',', ' ,', ' '];\r\n      //\r\n      var keys = text.split(/[ ,.]+/);\r\n      //console.log(keys);\r\n      var len = keys.length;\r\n      var ans = [];\r\n      for (var i = 0; i < len; ++i) {\r\n         var key = keys[i];\r\n         if (categories.has(key)) {\r\n            if (!ans.includes(categories.get(key))) {\r\n               ans.push(categories.get(key));\r\n            }\r\n         }\r\n      }\r\n      return ans;\r\n   }\r\n})\r\n"]},"hash":"13a64501315caa3e4e3a8ab095fe6db4a41e9d4a"}
