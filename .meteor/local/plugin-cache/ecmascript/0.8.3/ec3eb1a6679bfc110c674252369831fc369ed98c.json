{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"./namespace.js","imported":["LivedataTest"],"specifiers":[{"kind":"named","imported":"LivedataTest","local":"LivedataTest"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/ddp-client/stream_tests.js","filenameRelative":"packages/ddp-client/stream_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ddp-client/stream_tests.js.map","sourceFileName":"packages/ddp-client/stream_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"stream_tests"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar LivedataTest = void 0;\nmodule.watch(require(\"./namespace.js\"), {\n  LivedataTest: function (v) {\n    LivedataTest = v;\n  }\n}, 0);\nTinytest.add(\"stream - status\", function (test) {\n  // Very basic test. Just see that it runs and returns something. Not a\n  // lot of coverage, but enough that it would have caught a recent bug.\n  var status = Meteor.status();\n  test.equal(typeof status === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(status), \"object\");\n  test.isTrue(status.status); // Make sure backward-compatiblity names are defined.\n\n  test.equal(status.retryCount, status.retryCount);\n  test.equal(status.retryTime, status.retryTime);\n});\ntestAsyncMulti(\"stream - reconnect\", [function (test, expect) {\n  var callback = _.once(expect(function () {\n    var status;\n    status = Meteor.status();\n    test.equal(status.status, \"connected\");\n    Meteor.reconnect();\n    status = Meteor.status();\n    test.equal(status.status, \"connected\");\n    Meteor.reconnect({\n      _force: true\n    });\n    status = Meteor.status();\n    test.equal(status.status, \"waiting\");\n  }));\n\n  if (Meteor.status().status !== \"connected\") Meteor.connection._stream.on('reset', callback);else callback();\n}]); // Disconnecting and reconnecting transitions through the correct statuses.\n\ntestAsyncMulti(\"stream - basic disconnect\", [function (test, expect) {\n  var history = [];\n  var stream = new LivedataTest.ClientStream(\"/\");\n  var onTestComplete = expect(function (unexpectedHistory) {\n    stream.disconnect();\n\n    if (unexpectedHistory) {\n      test.fail(\"Unexpected status history: \" + JSON.stringify(unexpectedHistory));\n    }\n  });\n  Tracker.autorun(function () {\n    var status = stream.status();\n\n    if (_.last(history) !== status.status) {\n      history.push(status.status);\n\n      if (_.isEqual(history, [\"connecting\"])) {// do nothing; wait for the next state\n      } else if (_.isEqual(history, [\"connecting\", \"connected\"])) {\n        stream.disconnect();\n      } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\"])) {\n        stream.reconnect();\n      } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\", \"connecting\"])) {// do nothing; wait for the next state\n      } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\", \"connecting\", \"connected\"])) {\n        onTestComplete();\n      } else {\n        onTestComplete(history);\n      }\n    }\n  });\n}]); // Remain offline if the online event is received while offline.\n\ntestAsyncMulti(\"stream - disconnect remains offline\", [function (test, expect) {\n  var history = [];\n  var stream = new LivedataTest.ClientStream(\"/\");\n  var onTestComplete = expect(function (unexpectedHistory) {\n    stream.disconnect();\n\n    if (unexpectedHistory) {\n      test.fail(\"Unexpected status history: \" + JSON.stringify(unexpectedHistory));\n    }\n  });\n  Tracker.autorun(function () {\n    var status = stream.status();\n\n    if (_.last(history) !== status.status) {\n      history.push(status.status);\n\n      if (_.isEqual(history, [\"connecting\"])) {// do nothing; wait for the next status\n      } else if (_.isEqual(history, [\"connecting\", \"connected\"])) {\n        stream.disconnect();\n      } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\"])) {\n        stream._online();\n\n        test.isTrue(status.status === \"offline\");\n        onTestComplete();\n      } else {\n        onTestComplete(history);\n      }\n    }\n  });\n}]);\nTinytest.add(\"stream - sockjs urls are computed correctly\", function (test) {\n  var testHasSockjsUrl = function (raw, expectedSockjsUrl) {\n    var actual = LivedataTest.toSockjsUrl(raw);\n    if (expectedSockjsUrl instanceof RegExp) test.isTrue(actual.match(expectedSockjsUrl), actual);else test.equal(actual, expectedSockjsUrl);\n  };\n\n  testHasSockjsUrl(\"http://subdomain.meteor.com/\", \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"http://subdomain.meteor.com\", \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"subdomain.meteor.com/\", \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"subdomain.meteor.com\", \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"/\", Meteor._relativeToSiteRootUrl(\"/sockjs\"));\n  testHasSockjsUrl(\"http://localhost:3000/\", \"http://localhost:3000/sockjs\");\n  testHasSockjsUrl(\"http://localhost:3000\", \"http://localhost:3000/sockjs\");\n  testHasSockjsUrl(\"localhost:3000\", \"http://localhost:3000/sockjs\");\n  testHasSockjsUrl(\"https://subdomain.meteor.com/\", \"https://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"https://subdomain.meteor.com\", \"https://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\", /^https:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n  testHasSockjsUrl(\"ddpi+sockjs://ddp--****-foo.meteor.com/sockjs\", /^http:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n});\ntestAsyncMulti(\"stream - /websocket is a websocket endpoint\", [function (test, expect) {\n  //\n  // Verify that /websocket and /websocket/ don't return the main page\n  //\n  _.each(['/websocket', '/websocket/'], function (path) {\n    HTTP.get(Meteor._relativeToSiteRootUrl(path), expect(function (error, result) {\n      test.isNotNull(error);\n      test.equal('Not a valid websocket request', result.content);\n    }));\n  }); //\n  // For sanity, also verify that /websockets and /websockets/ return\n  // the main page\n  //\n  // Somewhat contorted but we can't call nested expects (XXX why?)\n\n\n  var pageContent;\n  var wrappedCallback = expect(function (error, result) {\n    test.isNull(error);\n    test.equal(pageContent, result.content);\n  });\n  HTTP.get(Meteor._relativeToSiteRootUrl('/'), expect(function (error, result) {\n    test.isNull(error);\n    pageContent = result.content;\n\n    _.each(['/websockets', '/websockets/'], function (path) {\n      HTTP.get(Meteor._relativeToSiteRootUrl(path), wrappedCallback);\n    });\n  }));\n}]);","map":{"version":3,"sources":["packages/ddp-client/stream_tests.js"],"names":["LivedataTest","module","watch","require","v","Tinytest","add","test","status","Meteor","equal","isTrue","retryCount","retryTime","testAsyncMulti","expect","callback","_","once","reconnect","_force","connection","_stream","on","history","stream","ClientStream","onTestComplete","unexpectedHistory","disconnect","fail","JSON","stringify","Tracker","autorun","last","push","isEqual","_online","testHasSockjsUrl","raw","expectedSockjsUrl","actual","toSockjsUrl","RegExp","match","_relativeToSiteRootUrl","each","path","HTTP","get","error","result","isNotNull","content","pageContent","wrappedCallback","isNull"],"mappings":"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","file":"packages/ddp-client/stream_tests.js.map","sourcesContent":["import { LivedataTest } from \"./namespace.js\";\n\nTinytest.add(\"stream - status\", function (test) {\n  // Very basic test. Just see that it runs and returns something. Not a\n  // lot of coverage, but enough that it would have caught a recent bug.\n  var status = Meteor.status();\n  test.equal(typeof status, \"object\");\n  test.isTrue(status.status);\n  // Make sure backward-compatiblity names are defined.\n  test.equal(status.retryCount, status.retryCount);\n  test.equal(status.retryTime, status.retryTime);\n});\n\ntestAsyncMulti(\"stream - reconnect\", [\n  function (test, expect) {\n    var callback = _.once(expect(function() {\n      var status;\n      status = Meteor.status();\n      test.equal(status.status, \"connected\");\n\n      Meteor.reconnect();\n      status = Meteor.status();\n      test.equal(status.status, \"connected\");\n\n      Meteor.reconnect({_force: true});\n      status = Meteor.status();\n      test.equal(status.status, \"waiting\");\n    }));\n\n    if (Meteor.status().status !== \"connected\")\n      Meteor.connection._stream.on('reset', callback);\n    else\n      callback();\n  }\n]);\n\n// Disconnecting and reconnecting transitions through the correct statuses.\ntestAsyncMulti(\"stream - basic disconnect\", [\n  function (test, expect) {\n    var history = [];\n    var stream = new LivedataTest.ClientStream(\"/\");\n    var onTestComplete = expect(function (unexpectedHistory) {\n      stream.disconnect();\n      if (unexpectedHistory) {\n        test.fail(\"Unexpected status history: \" +\n                  JSON.stringify(unexpectedHistory));\n      }\n    });\n\n    Tracker.autorun(function() {\n      var status = stream.status();\n\n      if (_.last(history) !== status.status) {\n        history.push(status.status);\n\n        if (_.isEqual(history, [\"connecting\"])) {\n          // do nothing; wait for the next state\n        } else if (_.isEqual(history, [\"connecting\", \"connected\"])) {\n          stream.disconnect();\n        } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\"])) {\n          stream.reconnect();\n        } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\",\n                                       \"connecting\"])) {\n          // do nothing; wait for the next state\n        } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\",\n                                \"connecting\", \"connected\"])) {\n          onTestComplete();\n        } else {\n          onTestComplete(history);\n        }\n      }\n    });\n  }\n]);\n\n// Remain offline if the online event is received while offline.\ntestAsyncMulti(\"stream - disconnect remains offline\", [\n  function (test, expect) {\n    var history = [];\n    var stream = new LivedataTest.ClientStream(\"/\");\n    var onTestComplete = expect(function (unexpectedHistory) {\n      stream.disconnect();\n      if (unexpectedHistory) {\n        test.fail(\"Unexpected status history: \" +\n                  JSON.stringify(unexpectedHistory));\n      }\n    });\n\n    Tracker.autorun(function() {\n      var status = stream.status();\n\n      if (_.last(history) !== status.status) {\n        history.push(status.status);\n\n        if (_.isEqual(history, [\"connecting\"])) {\n          // do nothing; wait for the next status\n        } else if (_.isEqual(history, [\"connecting\", \"connected\"])) {\n          stream.disconnect();\n        } else if (_.isEqual(history, [\"connecting\", \"connected\", \"offline\"])) {\n          stream._online();\n          test.isTrue(status.status === \"offline\");\n          onTestComplete();\n        } else {\n          onTestComplete(history);\n        }\n      }\n    });\n  }\n]);\n\nTinytest.add(\"stream - sockjs urls are computed correctly\", function(test) {\n  var testHasSockjsUrl = function(raw, expectedSockjsUrl) {\n    var actual = LivedataTest.toSockjsUrl(raw);\n    if (expectedSockjsUrl instanceof RegExp)\n      test.isTrue(actual.match(expectedSockjsUrl), actual);\n    else\n      test.equal(actual, expectedSockjsUrl);\n  };\n\n  testHasSockjsUrl(\"http://subdomain.meteor.com/\",\n                   \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"http://subdomain.meteor.com\",\n                   \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"subdomain.meteor.com/\",\n                   \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"subdomain.meteor.com\",\n                   \"http://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"/\", Meteor._relativeToSiteRootUrl(\"/sockjs\"));\n\n  testHasSockjsUrl(\"http://localhost:3000/\", \"http://localhost:3000/sockjs\");\n  testHasSockjsUrl(\"http://localhost:3000\", \"http://localhost:3000/sockjs\");\n  testHasSockjsUrl(\"localhost:3000\", \"http://localhost:3000/sockjs\");\n\n  testHasSockjsUrl(\"https://subdomain.meteor.com/\",\n                   \"https://subdomain.meteor.com/sockjs\");\n  testHasSockjsUrl(\"https://subdomain.meteor.com\",\n                   \"https://subdomain.meteor.com/sockjs\");\n\n  testHasSockjsUrl(\"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\",\n                   /^https:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n  testHasSockjsUrl(\"ddpi+sockjs://ddp--****-foo.meteor.com/sockjs\",\n                   /^http:\\/\\/ddp--\\d\\d\\d\\d-foo\\.meteor\\.com\\/sockjs$/);\n});\n\ntestAsyncMulti(\"stream - /websocket is a websocket endpoint\", [\n  function(test, expect) {\n    //\n    // Verify that /websocket and /websocket/ don't return the main page\n    //\n    _.each(['/websocket', '/websocket/'], function(path) {\n      HTTP.get(Meteor._relativeToSiteRootUrl(path), expect(function(error, result) {\n        test.isNotNull(error);\n        test.equal('Not a valid websocket request', result.content);\n      }));\n    });\n\n    //\n    // For sanity, also verify that /websockets and /websockets/ return\n    // the main page\n    //\n\n    // Somewhat contorted but we can't call nested expects (XXX why?)\n    var pageContent;\n    var wrappedCallback = expect(function(error, result) {\n      test.isNull(error);\n      test.equal(pageContent, result.content);\n    });\n\n    HTTP.get(Meteor._relativeToSiteRootUrl('/'), expect(function(error, result) {\n      test.isNull(error);\n      pageContent = result.content;\n\n      _.each(['/websockets', '/websockets/'], function(path) {\n        HTTP.get(Meteor._relativeToSiteRootUrl(path), wrappedCallback);\n      });\n    }));\n  }\n]);\n"]},"hash":"ec3eb1a6679bfc110c674252369831fc369ed98c"}
