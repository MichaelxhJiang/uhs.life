{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/startup/server/algoliaUpdate.js","filenameRelative":"imports/startup/server/algoliaUpdate.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/startup/server/algoliaUpdate.js.map","sourceFileName":"imports/startup/server/algoliaUpdate.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"algoliaUpdate"},"ignored":false,"code":"//Server side method to be called from client to update an existing announcement\n// api key that connects the client side to Algolia's server\nvar client = AlgoliaSearch(\"GJDCY9DKEW\", \"31f60dc3cc7926270934909c81f867ee\"); // select indice (collection) of data to be accesed. In this case it would be the announcements\n\nvar index = client.initIndex('announcement');\nMeteor.methods({\n    'updateAnnouncement': function (announcement, description, imgId, myID) {\n        //updates object to the indice announcement\n        //myID is hidden and can be accessed using .objectID on the announcement\n        index.saveObject({\n            announcement: announcement,\n            description: description,\n            imgId: imgId,\n            objectID: myID\n        }, function (err, content) {\n            //error catch (server down, or algolia issue)\n            if (err) {\n                console.error('Algolia returned an error', err);\n            } else {\n                //Spits out the updated announcement with the keyword\n                console.log('content', content);\n            }\n        });\n    }\n});","map":{"version":3,"sources":["imports/startup/server/algoliaUpdate.js"],"names":["client","AlgoliaSearch","index","initIndex","Meteor","methods","announcement","description","imgId","myID","saveObject","objectID","err","content","console","error","log"],"mappings":"AAAA;AAEA;AACA,IAAIA,SAASC,cAAc,YAAd,EAA4B,kCAA5B,CAAb,C,CAEA;;AACA,IAAIC,QAAQF,OAAOG,SAAP,CAAiB,cAAjB,CAAZ;AAEAC,OAAOC,OAAP,CAAe;AACX,0BAAuB,UAASC,YAAT,EAAuBC,WAAvB,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiD;AAEpE;AACA;AACAP,cAAMQ,UAAN,CAAiB;AACbJ,0BAAcA,YADD;AAEbC,yBAAaA,WAFA;AAGbC,mBAAOA,KAHM;AAIbG,sBAAUF;AAJG,SAAjB,EAKG,UAASG,GAAT,EAAcC,OAAd,EAAuB;AAEtB;AACA,gBAAGD,GAAH,EAAQ;AACJE,wBAAQC,KAAR,CAAc,2BAAd,EAA2CH,GAA3C;AACH,aAFD,MAEO;AAEH;AACAE,wBAAQE,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACH;AACJ,SAfD;AAkBH;AAvBU,CAAf","file":"imports/startup/server/algoliaUpdate.js.map","sourcesContent":["//Server side method to be called from client to update an existing announcement\r\n\r\n// api key that connects the client side to Algolia's server\r\nvar client = AlgoliaSearch(\"GJDCY9DKEW\", \"31f60dc3cc7926270934909c81f867ee\");\r\n\r\n// select indice (collection) of data to be accesed. In this case it would be the announcements\r\nvar index = client.initIndex('announcement');\r\n\r\nMeteor.methods({\r\n    'updateAnnouncement' : function(announcement, description, imgId, myID) {\r\n\r\n        //updates object to the indice announcement\r\n        //myID is hidden and can be accessed using .objectID on the announcement\r\n        index.saveObject({\r\n            announcement: announcement,\r\n            description: description,\r\n            imgId: imgId,\r\n            objectID: myID\r\n        }, function(err, content) {\r\n\r\n            //error catch (server down, or algolia issue)\r\n            if(err) {\r\n                console.error('Algolia returned an error', err);\r\n            } else {\r\n\r\n                //Spits out the updated announcement with the keyword\r\n                console.log('content', content);\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n});"]},"hash":"df78c0fa8828f45cccb2bb48f4b6c040eda9b3aa"}
