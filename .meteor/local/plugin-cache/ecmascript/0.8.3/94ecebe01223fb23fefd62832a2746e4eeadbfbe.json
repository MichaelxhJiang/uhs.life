{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["AccountsTest"],"specifiers":[{"kind":"named","imported":"AccountsTest","local":"AccountsTest"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/accounts-base/accounts_url_tests.js","filenameRelative":"packages/accounts-base/accounts_url_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/accounts-base/accounts_url_tests.js.map","sourceFileName":"packages/accounts-base/accounts_url_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"accounts_url_tests"},"ignored":false,"code":"var AccountsTest = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  AccountsTest: function (v) {\n    AccountsTest = v;\n  }\n}, 0);\nTinytest.add(\"accounts - parse urls for accounts-password\", function (test) {\n  var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"]; // make sure the callback was called the right number of times\n\n  var actionsParsed = [];\n\n  _.each(actions, function (hashPart) {\n    var fakeToken = \"asdf\";\n    var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n    AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n      test.equal(token, fakeToken);\n      test.equal(action, hashPart); // XXX COMPAT WITH 0.9.3\n\n      if (hashPart === \"reset-password\") {\n        test.equal(Accounts._resetPasswordToken, fakeToken);\n      } else if (hashPart === \"verify-email\") {\n        test.equal(Accounts._verifyEmailToken, fakeToken);\n      } else if (hashPart === \"enroll-account\") {\n        test.equal(Accounts._enrollAccountToken, fakeToken);\n      } // Reset variables for the next test\n\n\n      Accounts._resetPasswordToken = null;\n      Accounts._verifyEmailToken = null;\n      Accounts._enrollAccountToken = null;\n      actionsParsed.push(action);\n    });\n  }); // make sure each action is called once, in order\n\n\n  test.equal(actionsParsed, actions);\n});","map":{"version":3,"sources":["packages/accounts-base/accounts_url_tests.js"],"names":["AccountsTest","module","watch","require","v","Tinytest","add","test","actions","actionsParsed","_","each","hashPart","fakeToken","hashTokenOnly","attemptToMatchHash","token","action","equal","Accounts","_resetPasswordToken","_verifyEmailToken","_enrollAccountToken","push"],"mappings":"AAAA,IAAIA,qBAAJ;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,cAAD,YAAcI,CAAd,EAAgB;AAACJ,mBAAaI,CAAb;AAAe;AAAhC,CAA7C,EAA+E,CAA/E;AAEjBC,SAASC,GAAT,CAAa,6CAAb,EACE,UAAUC,IAAV,EAAgB;AACd,MAAIC,UAAU,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,gBAAnC,CAAd,CADc,CAGd;;AACA,MAAIC,gBAAgB,EAApB;;AAEAC,IAAEC,IAAF,CAAOH,OAAP,EAAgB,UAAUI,QAAV,EAAoB;AAClC,QAAIC,YAAY,MAAhB;AAEA,QAAIC,gBAAgB,OAAOF,QAAP,GAAkB,GAAlB,GAAwBC,SAA5C;AACAb,iBAAae,kBAAb,CAAgCD,aAAhC,EAA+C,UAAUE,KAAV,EAAiBC,MAAjB,EAAyB;AACtEV,WAAKW,KAAL,CAAWF,KAAX,EAAkBH,SAAlB;AACAN,WAAKW,KAAL,CAAWD,MAAX,EAAmBL,QAAnB,EAFsE,CAItE;;AACA,UAAIA,aAAa,gBAAjB,EAAmC;AACjCL,aAAKW,KAAL,CAAWC,SAASC,mBAApB,EAAyCP,SAAzC;AACD,OAFD,MAEO,IAAID,aAAa,cAAjB,EAAiC;AACtCL,aAAKW,KAAL,CAAWC,SAASE,iBAApB,EAAuCR,SAAvC;AACD,OAFM,MAEA,IAAID,aAAa,gBAAjB,EAAmC;AACxCL,aAAKW,KAAL,CAAWC,SAASG,mBAApB,EAAyCT,SAAzC;AACD,OAXqE,CAatE;;;AACAM,eAASC,mBAAT,GAA+B,IAA/B;AACAD,eAASE,iBAAT,GAA6B,IAA7B;AACAF,eAASG,mBAAT,GAA+B,IAA/B;AAEAb,oBAAcc,IAAd,CAAmBN,MAAnB;AACD,KAnBD;AAoBD,GAxBD,EANc,CAgCd;;;AACAV,OAAKW,KAAL,CAAWT,aAAX,EAA0BD,OAA1B;AACD,CAnCH","file":"packages/accounts-base/accounts_url_tests.js.map","sourcesContent":["import {AccountsTest} from \"meteor/accounts-base\";\n\nTinytest.add(\"accounts - parse urls for accounts-password\",\n  function (test) {\n    var actions = [\"reset-password\", \"verify-email\", \"enroll-account\"];\n\n    // make sure the callback was called the right number of times\n    var actionsParsed = [];\n\n    _.each(actions, function (hashPart) {\n      var fakeToken = \"asdf\";\n      \n      var hashTokenOnly = \"#/\" + hashPart + \"/\" + fakeToken;\n      AccountsTest.attemptToMatchHash(hashTokenOnly, function (token, action) {\n        test.equal(token, fakeToken);\n        test.equal(action, hashPart);\n\n        // XXX COMPAT WITH 0.9.3\n        if (hashPart === \"reset-password\") {\n          test.equal(Accounts._resetPasswordToken, fakeToken);\n        } else if (hashPart === \"verify-email\") {\n          test.equal(Accounts._verifyEmailToken, fakeToken);\n        } else if (hashPart === \"enroll-account\") {\n          test.equal(Accounts._enrollAccountToken, fakeToken);\n        }\n\n        // Reset variables for the next test\n        Accounts._resetPasswordToken = null;\n        Accounts._verifyEmailToken = null;\n        Accounts._enrollAccountToken = null;\n\n        actionsParsed.push(action);\n      });\n    });\n\n    // make sure each action is called once, in order\n    test.equal(actionsParsed, actions);\n  });\n"]},"hash":"94ecebe01223fb23fefd62832a2746e4eeadbfbe"}
