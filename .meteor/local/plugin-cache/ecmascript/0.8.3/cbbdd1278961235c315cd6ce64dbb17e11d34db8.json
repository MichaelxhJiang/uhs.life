{"metadata":{"usedHelpers":["typeof","toConsumableArray","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"assert","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"assert"}]},{"source":"fs","imported":["readFileSync"],"specifiers":[{"kind":"named","imported":"readFileSync","local":"readFileSync"}]},{"source":"path","imported":["join","normalize"],"specifiers":[{"kind":"named","imported":"join","local":"pathJoin"},{"kind":"named","imported":"normalize","local":"pathNormalize"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"./security.js","imported":[],"specifiers":[]},{"source":"./client.js","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/dynamic-import/server.js","filenameRelative":"packages/dynamic-import/server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/dynamic-import/server.js.map","sourceFileName":"packages/dynamic-import/server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"var _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar module1 = module;\nvar assert = void 0;\nmodule1.watch(require(\"assert\"), {\n  \"default\": function (v) {\n    assert = v;\n  }\n}, 0);\nvar readFileSync = void 0;\nmodule1.watch(require(\"fs\"), {\n  readFileSync: function (v) {\n    readFileSync = v;\n  }\n}, 1);\nvar pathJoin = void 0,\n    pathNormalize = void 0;\nmodule1.watch(require(\"path\"), {\n  join: function (v) {\n    pathJoin = v;\n  },\n  normalize: function (v) {\n    pathNormalize = v;\n  }\n}, 2);\nvar check = void 0;\nmodule1.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 3);\nmodule1.watch(require(\"./security.js\"));\nmodule1.watch(require(\"./client.js\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nObject.keys(dynamicImportInfo).forEach(function (platform) {\n  var info = dynamicImportInfo[platform];\n\n  if (info.dynamicRoot) {\n    info.dynamicRoot = pathNormalize(info.dynamicRoot);\n  }\n});\nMeteor.methods({\n  __dynamicImport: function (tree) {\n    check(tree, Object);\n    this.unblock();\n    var platform = this.connection ? \"web.browser\" : \"server\";\n    var pathParts = [];\n\n    function walk(node) {\n      if (node && (typeof node === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(node)) === \"object\") {\n        Object.keys(node).forEach(function (name) {\n          pathParts.push(name);\n          node[name] = walk(node[name]);\n          assert.strictEqual(pathParts.pop(), name);\n        });\n      } else {\n        return read(pathParts, platform);\n      }\n\n      return node;\n    }\n\n    return walk(tree);\n  }\n});\n\nfunction read(pathParts, platform) {\n  var dynamicRoot = dynamicImportInfo[platform].dynamicRoot;\n  var absPath = pathNormalize(pathJoin(dynamicRoot, pathJoin.apply(undefined, (0, _toConsumableArray3.default)(pathParts)).replace(/:/g, \"_\")));\n\n  if (!absPath.startsWith(dynamicRoot)) {\n    throw new Meteor.Error(\"bad dynamic module path\");\n  }\n\n  var cache = getCache(platform);\n  return hasOwn.call(cache, absPath) ? cache[absPath] : cache[absPath] = readFileSync(absPath, \"utf8\");\n}\n\nvar cachesByPlatform = Object.create(null);\n\nfunction getCache(platform) {\n  return hasOwn.call(cachesByPlatform, platform) ? cachesByPlatform[platform] : cachesByPlatform[platform] = Object.create(null);\n}\n\nprocess.on(\"message\", function (msg) {\n  // The cache for the \"web.browser\" platform needs to be discarded\n  // whenever a client-only refresh occurs, so that new client code does\n  // not receive stale module data from __dynamicImport. This code handles\n  // the same message listened for by the autoupdate package.\n  if (msg && msg.refresh === \"client\") {\n    delete cachesByPlatform[\"web.browser\"];\n  }\n});","map":{"version":3,"sources":["packages/dynamic-import/server.js"],"names":["module1","module","assert","watch","require","v","readFileSync","pathJoin","pathNormalize","join","normalize","check","hasOwn","Object","prototype","hasOwnProperty","keys","dynamicImportInfo","forEach","info","platform","dynamicRoot","Meteor","methods","__dynamicImport","tree","unblock","connection","pathParts","walk","node","push","name","strictEqual","pop","read","absPath","replace","startsWith","Error","cache","getCache","call","cachesByPlatform","create","process","on","msg","refresh"],"mappings":"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","file":"packages/dynamic-import/server.js.map","sourcesContent":["import assert from \"assert\";\nimport { readFileSync } from \"fs\";\nimport {\n  join as pathJoin,\n  normalize as pathNormalize,\n} from \"path\";\n\nimport { check } from \"meteor/check\";\n\nimport \"./security.js\";\nimport \"./client.js\";\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nObject.keys(dynamicImportInfo).forEach(platform => {\n  const info = dynamicImportInfo[platform];\n  if (info.dynamicRoot) {\n    info.dynamicRoot = pathNormalize(info.dynamicRoot);\n  }\n});\n\nMeteor.methods({\n  __dynamicImport(tree) {\n    check(tree, Object);\n    this.unblock();\n\n    const platform = this.connection ? \"web.browser\" : \"server\";\n    const pathParts = [];\n\n    function walk(node) {\n      if (node && typeof node === \"object\") {\n        Object.keys(node).forEach(name => {\n          pathParts.push(name);\n          node[name] = walk(node[name]);\n          assert.strictEqual(pathParts.pop(), name);\n        });\n      } else {\n        return read(pathParts, platform);\n      }\n      return node;\n    }\n\n    return walk(tree);\n  }\n});\n\nfunction read(pathParts, platform) {\n  const { dynamicRoot } = dynamicImportInfo[platform];\n  const absPath = pathNormalize(pathJoin(\n    dynamicRoot,\n    pathJoin(...pathParts).replace(/:/g, \"_\")\n  ));\n\n  if (! absPath.startsWith(dynamicRoot)) {\n    throw new Meteor.Error(\"bad dynamic module path\");\n  }\n\n  const cache = getCache(platform);\n  return hasOwn.call(cache, absPath)\n    ? cache[absPath]\n    : cache[absPath] = readFileSync(absPath, \"utf8\");\n}\n\nconst cachesByPlatform = Object.create(null);\nfunction getCache(platform) {\n  return hasOwn.call(cachesByPlatform, platform)\n    ? cachesByPlatform[platform]\n    : cachesByPlatform[platform] = Object.create(null);\n}\n\nprocess.on(\"message\", msg => {\n  // The cache for the \"web.browser\" platform needs to be discarded\n  // whenever a client-only refresh occurs, so that new client code does\n  // not receive stale module data from __dynamicImport. This code handles\n  // the same message listened for by the autoupdate package.\n  if (msg && msg.refresh === \"client\") {\n    delete cachesByPlatform[\"web.browser\"];\n  }\n});\n"]},"hash":"cbbdd1278961235c315cd6ce64dbb17e11d34db8"}
