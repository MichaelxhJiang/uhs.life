{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/startup/server/teachAssist.js","filenameRelative":"imports/startup/server/teachAssist.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/startup/server/teachAssist.js.map","sourceFileName":"imports/startup/server/teachAssist.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"teachAssist"},"ignored":false,"code":"Meteor.methods({\n    'getTeachAssistTokens': function (json) {\n        if (!(json.student_number && json.password)) {\n            throw new Meteor.Error(400, \"Need a student number and password\");\n        }\n\n        var response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\n            data: {\n                \"student_number\": json.student_number,\n                \"password\": json.password\n            }\n        });\n        var res = JSON.parse(response.content);\n\n        if (res[0].ERROR) {\n            console.log(res[0].ERROR);\n            throw new Meteor.Error(403, \"Your password is invalid.\");\n        }\n\n        var id = res[0].student_id;\n        var token = res[0].token;\n        return {\n            \"student_id\": id,\n            \"token\": token\n        };\n    },\n    'getTeachAssistCourses': function (json) {\n        if (!(json.student_id && json.token)) {\n            throw new Meteor.Error(400, \"Need a student id and token\");\n        }\n\n        console.log(\"hello courses\");\n        var response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\n            data: {\n                \"student_id\": json.student_id,\n                \"token\": json.token\n            }\n        });\n\n        if (JSON.parse(response.content)[0].ERROR) {\n            throw new Meteor.Error(400, JSON.parse(response.content)[0].ERROR);\n        }\n\n        return JSON.parse(response.content)[0].data[0].subjects;\n    },\n    'getTeachAssistCourseDetails': function (json) {\n        if (!(json.student_id && json.token && json.subject_id)) {\n            throw new Meteor.Error(400, \"Need a student id and token and subject id\");\n        }\n\n        var response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\n            data: {\n                \"student_id\": json.student_id,\n                \"token\": json.token,\n                \"subject_id\": json.subject_id\n            }\n        });\n\n        if (JSON.parse(response.content)[0].ERROR) {\n            throw new Meteor.Error(400, JSON.parse(response.content)[0].ERROR);\n        } //console.log(JSON.parse(response.content)[0]);\n\n\n        var cat = [0, 0, 0, 0, 0]; //K T C A O\n\n        var catWeight = [0, 0, 0, 0, 0];\n        var catExist = [false, false, false, false, false];\n        var timeline = [];\n        var preParse = JSON.parse(response.content)[0];\n        var postParse = JSON.parse(response.content)[0];\n        postParse.data.assessment = [];\n        postParse.categoryMarks = [0, 0, 0, 0, 0];\n        var categories = preParse.data.assessment.data.categories;\n        var cnt = 0;\n\n        _.each(preParse.data.assessment.data, function (k, v) {\n            if (v === 'categories') {\n                postParse.categories = k;\n            } else {\n                var assess = k;\n\n                if (assess.K) {\n                    catExist[0] = true;\n                    cat[0] += parseFloat(assess.K.mark) / parseFloat(assess.K.outOf) * 100 * parseFloat(assess.K.weight);\n                    catWeight[0] += parseFloat(assess.K.weight);\n                }\n\n                if (assess.T) {\n                    catExist[1] = true;\n                    cat[1] += parseFloat(assess.T.mark) / parseFloat(assess.T.outOf) * 100 * parseFloat(assess.T.weight);\n                    catWeight[1] += parseFloat(assess.T.weight);\n                }\n\n                if (assess.C) {\n                    catExist[2] = true;\n                    cat[2] += parseFloat(assess.C.mark) / parseFloat(assess.C.outOf) * 100 * parseFloat(assess.C.weight);\n                    catWeight[2] += parseFloat(assess.C.weight);\n                }\n\n                if (assess.A) {\n                    catExist[3] = true;\n                    cat[3] += parseFloat(assess.A.mark) / parseFloat(assess.A.outOf) * 100 * parseFloat(assess.A.weight);\n                    catWeight[3] += parseFloat(assess.A.weight);\n                    console.log(cat[3] + \" \" + catWeight[3]);\n                }\n\n                if (assess[\"\"]) {\n                    catExist[4] = true;\n                    cat[4] += parseFloat(assess[\"\"].mark) / parseFloat(assess[\"\"].outOf) * 100 * parseFloat(assess[\"\"].weight);\n                    catWeight[4] += parseFloat(assess[\"\"].weight);\n                }\n\n                k.O = k[\"\"]; //transfer to Other\n\n                delete k[\"\"];\n                var mark = 0;\n                var K = void 0,\n                    T = void 0,\n                    C = void 0,\n                    A = void 0,\n                    O = 0;\n                var catTotalWeight = 0;\n\n                if (catExist[0]) {\n                    mark += cat[0] / catWeight[0] * categories.K;\n                    K = cat[0] / catWeight[0];\n                    catTotalWeight += categories.K;\n                }\n\n                if (catExist[1]) {\n                    mark += cat[1] / catWeight[1] * categories.T;\n                    T = cat[1] / catWeight[1];\n                    catTotalWeight += categories.T;\n                }\n\n                if (catExist[2]) {\n                    mark += cat[2] / catWeight[2] * categories.C;\n                    C = cat[2] / catWeight[2];\n                    catTotalWeight += categories.C;\n                }\n\n                if (catExist[3]) {\n                    mark += cat[3] / catWeight[3] * categories.A;\n                    A = cat[3] / catWeight[3];\n                    catTotalWeight += categories.A;\n                }\n\n                if (catExist[4]) {\n                    mark += cat[4] / catWeight[4] * categories.O;\n                    O = cat[4] / catWeight[4];\n                    catTotalWeight += categories.O;\n                }\n\n                mark /= catTotalWeight;\n                timeline[cnt] = {\n                    mark: Math.round(mark * 100) / 100,\n                    K: Math.round(K * 100) / 100,\n                    T: Math.round(T * 100) / 100,\n                    C: Math.round(C * 100) / 100,\n                    A: Math.round(A * 100) / 100,\n                    O: Math.round(O * 100) / 100\n                };\n                postParse.data.assessment[cnt++] = k;\n            }\n        });\n\n        for (var i = 0; i < 5; i++) {\n            if (cat[i] !== 0) {\n                postParse.categoryMarks[i] = Math.round(cat[i] / catWeight[i] * 100) / 100;\n            } else {\n                postParse.categoryMarks[i] = 0;\n            }\n        }\n\n        postParse.timeline = timeline;\n        return postParse;\n    }\n});","map":{"version":3,"sources":["imports/startup/server/teachAssist.js"],"names":["Meteor","methods","json","student_number","password","Error","response","HTTP","call","data","res","JSON","parse","content","ERROR","console","log","id","student_id","token","subjects","subject_id","cat","catWeight","catExist","timeline","preParse","postParse","assessment","categoryMarks","categories","cnt","_","each","k","v","assess","K","parseFloat","mark","outOf","weight","T","C","A","O","catTotalWeight","Math","round","i"],"mappings":"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","file":"imports/startup/server/teachAssist.js.map","sourcesContent":["Meteor.methods({\r\n    'getTeachAssistTokens' : function(json) {\r\n        if (!(json.student_number && json.password)) {\r\n            throw new Meteor.Error(400, \"Need a student number and password\");\r\n        }\r\n        let response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\r\n            data: {\r\n                \"student_number\": json.student_number,\r\n                \"password\": json.password\r\n            }\r\n        });\r\n        let res = JSON.parse(response.content);\r\n        if (res[0].ERROR) {\r\n            console.log(res[0].ERROR);\r\n            throw new Meteor.Error(403, \"Your password is invalid.\");\r\n        }\r\n\r\n        let id = res[0].student_id;\r\n        let token = res[0].token;\r\n\r\n        return {\"student_id\": id, \"token\": token};\r\n    },\r\n    'getTeachAssistCourses' : function(json) {\r\n        if (!(json.student_id && json.token)) {\r\n            throw new Meteor.Error(400, \"Need a student id and token\");\r\n        }\r\n        console.log(\"hello courses\");\r\n        let response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\r\n            data: {\r\n                \"student_id\": json.student_id,\r\n                \"token\": json.token\r\n            }\r\n        });\r\n\r\n        if (JSON.parse(response.content)[0].ERROR) {\r\n            throw new Meteor.Error(400, JSON.parse(response.content)[0].ERROR);\r\n        }\r\n        return JSON.parse(response.content)[0].data[0].subjects;\r\n\r\n    },\r\n    'getTeachAssistCourseDetails' : function(json) {\r\n        if (!(json.student_id && json.token && json.subject_id)) {\r\n            throw new Meteor.Error(400, \"Need a student id and token and subject id\");\r\n        }\r\n        let response = HTTP.call(\"GET\", \"https://ta.yrdsb.ca/v4/students/json.php\", {\r\n            data: {\r\n                \"student_id\": json.student_id,\r\n                \"token\": json.token,\r\n                \"subject_id\": json.subject_id\r\n            }\r\n        });\r\n        if (JSON.parse(response.content)[0].ERROR) {\r\n            throw new Meteor.Error(400, JSON.parse(response.content)[0].ERROR);\r\n        }\r\n        //console.log(JSON.parse(response.content)[0]);\r\n\r\n        let cat = [0, 0, 0, 0, 0]; //K T C A O\r\n        let catWeight = [0, 0, 0, 0, 0];\r\n        let catExist = [false, false, false, false, false];\r\n        let timeline = [];\r\n\r\n        let preParse = JSON.parse(response.content)[0];\r\n        let postParse = JSON.parse(response.content)[0];\r\n\r\n        postParse.data.assessment = [];\r\n        postParse.categoryMarks = [0, 0, 0, 0, 0];\r\n\r\n        let categories = preParse.data.assessment.data.categories;\r\n\r\n        let cnt = 0;\r\n        _.each(preParse.data.assessment.data, function(k, v) {\r\n            if (v === 'categories') {\r\n                postParse.categories = k;\r\n            } else {\r\n                let assess = k;\r\n                if (assess.K) {\r\n                    catExist[0] = true;\r\n                    cat[0] += parseFloat(assess.K.mark) / parseFloat(assess.K.outOf) * 100 * parseFloat(assess.K.weight);\r\n                    catWeight[0] += parseFloat(assess.K.weight);\r\n                }\r\n                if (assess.T) {\r\n                    catExist[1] = true;\r\n                    cat[1] += parseFloat(assess.T.mark) / parseFloat(assess.T.outOf) * 100  * parseFloat(assess.T.weight);\r\n                    catWeight[1] += parseFloat(assess.T.weight);\r\n                }\r\n                if (assess.C) {\r\n                    catExist[2] = true;\r\n                    cat[2] += parseFloat(assess.C.mark) / parseFloat(assess.C.outOf) * 100  * parseFloat(assess.C.weight);\r\n                    catWeight[2] += parseFloat(assess.C.weight);\r\n                }\r\n                if (assess.A) {\r\n                    catExist[3] = true;\r\n                    cat[3] += parseFloat(assess.A.mark) / parseFloat(assess.A.outOf) * 100  * parseFloat(assess.A.weight);\r\n                    catWeight[3] += parseFloat(assess.A.weight);\r\n                    console.log(cat[3] + \" \" + catWeight[3]);\r\n                }\r\n                if (assess[\"\"]) {\r\n                    catExist[4] = true;\r\n                    cat[4] += parseFloat(assess[\"\"].mark) / parseFloat(assess[\"\"].outOf) * 100  * parseFloat(assess[\"\"].weight);\r\n                    catWeight[4] += parseFloat(assess[\"\"].weight);\r\n                }\r\n                k.O = k[\"\"];    //transfer to Other\r\n                delete k[\"\"];\r\n                let mark = 0;\r\n                let K, T, C, A, O = 0;\r\n                let catTotalWeight = 0;\r\n                if (catExist[0]) {\r\n                    mark += cat[0] / catWeight[0] * categories.K;\r\n                    K = cat[0] / catWeight[0];\r\n                    catTotalWeight += categories.K;\r\n                }\r\n                if (catExist[1]) {\r\n                    mark += cat[1] / catWeight[1] * categories.T;\r\n                    T = cat[1] / catWeight[1];\r\n                    catTotalWeight += categories.T;\r\n                }\r\n                if (catExist[2]) {\r\n                    mark += cat[2] / catWeight[2] * categories.C;\r\n                    C = cat[2] / catWeight[2];\r\n                    catTotalWeight += categories.C;\r\n                }\r\n                if (catExist[3]) {\r\n                    mark += cat[3] / catWeight[3] * categories.A;\r\n                    A = cat[3] / catWeight[3];\r\n                    catTotalWeight += categories.A;\r\n                }\r\n                if (catExist[4]) {\r\n                    mark += cat[4] / catWeight[4] * categories.O;\r\n                    O = cat[4] / catWeight[4];\r\n                    catTotalWeight += categories.O;\r\n                }\r\n                mark /= catTotalWeight;\r\n                timeline[cnt] = {\r\n                    mark: Math.round(mark * 100) / 100,\r\n                    K: Math.round(K * 100) / 100,\r\n                    T: Math.round(T * 100) / 100,\r\n                    C: Math.round(C * 100) / 100,\r\n                    A: Math.round(A * 100) / 100,\r\n                    O: Math.round(O * 100) / 100\r\n                };\r\n                postParse.data.assessment[cnt++] = k;\r\n            }\r\n        })\r\n        for (var i = 0;i < 5; i++) {\r\n            if (cat[i] !== 0) {\r\n                postParse.categoryMarks[i] = Math.round(cat[i]/catWeight[i] * 100) / 100;\r\n            } else {\r\n                postParse.categoryMarks[i] = 0;\r\n            }\r\n        }\r\n        postParse.timeline = timeline;\r\n        return postParse;\r\n    }\r\n});\r\n"]},"hash":"ca22fb3ea79feb29238193786f3703587baf2929"}
