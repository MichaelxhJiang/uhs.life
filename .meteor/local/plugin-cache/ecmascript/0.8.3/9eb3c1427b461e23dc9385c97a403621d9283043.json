{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./namespace.js","imported":["LivedataTest"],"specifiers":[{"kind":"named","imported":"LivedataTest","local":"LivedataTest"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/ddp-client/stream_client_tests.js","filenameRelative":"packages/ddp-client/stream_client_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ddp-client/stream_client_tests.js.map","sourceFileName":"packages/ddp-client/stream_client_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"stream_client_tests"},"ignored":false,"code":"var LivedataTest = void 0;\nmodule.watch(require(\"./namespace.js\"), {\n  LivedataTest: function (v) {\n    LivedataTest = v;\n  }\n}, 0);\n\nvar Fiber = Npm.require('fibers');\n\ntestAsyncMulti(\"stream client - callbacks run in a fiber\", [function (test, expect) {\n  var stream = new LivedataTest.ClientStream(Meteor.absoluteUrl());\n  var messageFired = false;\n  var resetFired = false;\n  stream.on('message', expect(function () {\n    test.isTrue(Fiber.current);\n    if (resetFired) stream.disconnect();\n    messageFired = true;\n  }));\n  stream.on('reset', expect(function () {\n    test.isTrue(Fiber.current);\n    if (messageFired) stream.disconnect();\n    resetFired = true;\n  }));\n}]);","map":{"version":3,"sources":["packages/ddp-client/stream_client_tests.js"],"names":["LivedataTest","module","watch","require","v","Fiber","Npm","testAsyncMulti","test","expect","stream","ClientStream","Meteor","absoluteUrl","messageFired","resetFired","on","isTrue","current","disconnect"],"mappings":"AAAA,IAAIA,qBAAJ;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACH,cAAD,YAAcI,CAAd,EAAgB;AAACJ,mBAAaI,CAAb;AAAe;AAAhC,CAAvC,EAAyE,CAAzE;;AAEjB,IAAIC,QAAQC,IAAIH,OAAJ,CAAY,QAAZ,CAAZ;;AAEAI,eAAe,0CAAf,EAA2D,CACzD,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACtB,MAAIC,SAAS,IAAIV,aAAaW,YAAjB,CAA8BC,OAAOC,WAAP,EAA9B,CAAb;AAEA,MAAIC,eAAe,KAAnB;AACA,MAAIC,aAAa,KAAjB;AAEAL,SAAOM,EAAP,CAAU,SAAV,EAAqBP,OAAO,YAAY;AACtCD,SAAKS,MAAL,CAAYZ,MAAMa,OAAlB;AACA,QAAIH,UAAJ,EACEL,OAAOS,UAAP;AACFL,mBAAe,IAAf;AACD,GALoB,CAArB;AAOAJ,SAAOM,EAAP,CAAU,OAAV,EAAmBP,OAAO,YAAY;AACpCD,SAAKS,MAAL,CAAYZ,MAAMa,OAAlB;AACA,QAAIJ,YAAJ,EACEJ,OAAOS,UAAP;AACFJ,iBAAa,IAAb;AACD,GALkB,CAAnB;AAMD,CApBwD,CAA3D","file":"packages/ddp-client/stream_client_tests.js.map","sourcesContent":["import { LivedataTest } from \"./namespace.js\";\n\nvar Fiber = Npm.require('fibers');\n\ntestAsyncMulti(\"stream client - callbacks run in a fiber\", [\n  function (test, expect) {\n    var stream = new LivedataTest.ClientStream(Meteor.absoluteUrl());\n\n    var messageFired = false;\n    var resetFired = false;\n\n    stream.on('message', expect(function () {\n      test.isTrue(Fiber.current);\n      if (resetFired)\n        stream.disconnect();\n      messageFired = true;\n    }));\n\n    stream.on('reset', expect(function () {\n      test.isTrue(Fiber.current);\n      if (messageFired)\n        stream.disconnect();\n      resetFired = true;\n    }));\n  }\n]);\n"]},"hash":"9eb3c1427b461e23dc9385c97a403621d9283043"}
