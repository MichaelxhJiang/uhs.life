{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./bigPicture.html","imported":[],"specifiers":[]},{"source":"../../api/images/images.js","imported":["Images"],"specifiers":[{"kind":"named","imported":"Images","local":"Images"}]},{"source":"flickity","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"flickity"}]},{"source":"imagesloaded","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"imagesLoaded"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/bigPicture.js","filenameRelative":"imports/ui/pages/bigPicture.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/bigPicture.js.map","sourceFileName":"imports/ui/pages/bigPicture.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"bigPicture"},"ignored":false,"code":"module.watch(require(\"./bigPicture.html\"));\nvar Images = void 0;\nmodule.watch(require(\"../../api/images/images.js\"), {\n    Images: function (v) {\n        Images = v;\n    }\n}, 0);\nvar flickity = void 0;\nmodule.watch(require(\"flickity\"), {\n    \"default\": function (v) {\n        flickity = v;\n    }\n}, 1);\nvar imagesLoaded = void 0;\nmodule.watch(require(\"imagesloaded\"), {\n    \"default\": function (v) {\n        imagesLoaded = v;\n    }\n}, 2);\nvar morphSettings = {\n    // The [in] animation type. Refer to Animate.css for a list of available animations.\n    animation: \"flipInX\",\n    // An array of phrases to rotate are created based on this separator. Change it if you wish to separate the phrases differently (e.g. So Simple | Very Doge | Much Wow | Such Cool).\n    separator: \";;\",\n    // The delay between the changing of each phrase in milliseconds.\n    speed: 8000,\n    complete: function () {// Called after the entrance animation is executed.\n    }\n};\nTemplate.bigPicture.onRendered(function () {\n    Tracker.autorun(function () {\n        var newsSub = Meteor.subscribe('announcements', 10, Meteor.userId());\n        var imageSub = Meteor.subscribe('images');\n\n        if (newsSub.ready()) {\n            $('.flickity').flickity({\n                cellAlign: 'left',\n                contain: true,\n                imagesLoaded: true,\n                lazyLoad: true,\n                autoPlay: 5000,\n                pageDots: false,\n                prevNextButtons: false,\n                pauseAutoPlayOnHover: false,\n                selectedAttraction: 0.01,\n                friction: 0.15\n            });\n            $('.dot').css('width', $('.flickity-page-dots').width() / $('.dot').length + 'px');\n        }\n    });\n});\nTemplate.bigPicture.helpers({\n    'announcement': function () {\n        return Posts.find({});\n    }\n});\nTemplate.bigPictureItem.helpers({\n    'imageLink': function () {\n        try {\n            return Images.findOne({\n                _id: this.imgId\n            }).url();\n        } catch (e) {}\n    }\n});\nTemplate.bottomBar.onRendered(function () {\n    $(document).ready(function () {\n        displayTime();\n        $(\"#rotatingMessage\").Morphext(morphSettings);\n    });\n});\n\nfunction displayTime() {\n    var time = moment().format('h:mm');\n    $('#clock').html(time);\n    setTimeout(displayTime, 1000);\n}","map":{"version":3,"sources":["imports/ui/pages/bigPicture.js"],"names":["module","watch","require","Images","v","flickity","imagesLoaded","morphSettings","animation","separator","speed","complete","Template","bigPicture","onRendered","Tracker","autorun","newsSub","Meteor","subscribe","userId","imageSub","ready","$","cellAlign","contain","lazyLoad","autoPlay","pageDots","prevNextButtons","pauseAutoPlayOnHover","selectedAttraction","friction","css","width","length","helpers","Posts","find","bigPictureItem","findOne","_id","imgId","url","e","bottomBar","document","displayTime","Morphext","time","moment","format","html","setTimeout"],"mappings":"AAAAA,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb;AAA2C,IAAIC,eAAJ;AAAWH,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAACC,UAAD,YAAQC,CAAR,EAAU;AAACD,iBAAOC,CAAP;AAAS;AAApB,CAAnD,EAAyE,CAAzE;AAA4E,IAAIC,iBAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAAA,yBAASE,CAAT,EAAW;AAACC,mBAASD,CAAT;AAAW;AAAvB,CAAjC,EAA0D,CAA1D;AAA6D,IAAIE,qBAAJ;AAAiBN,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA,yBAASE,CAAT,EAAW;AAACE,uBAAaF,CAAb;AAAe;AAA3B,CAArC,EAAkE,CAAlE;AAQ7N,IAAIG,gBAAgB;AAChB;AACAC,eAAW,SAFK;AAGhB;AACAC,eAAW,IAJK;AAKhB;AACAC,WAAO,IANS;AAOhBC,cAAU,YAAY,CAClB;AACH;AATe,CAApB;AAWAC,SAASC,UAAT,CAAoBC,UAApB,CAA+B,YAAY;AACvCC,YAAQC,OAAR,CAAgB,YAAY;AACxB,YAAIC,UAAUC,OAAOC,SAAP,CAAiB,eAAjB,EAAkC,EAAlC,EAAsCD,OAAOE,MAAP,EAAtC,CAAd;AACA,YAAIC,WAAWH,OAAOC,SAAP,CAAiB,QAAjB,CAAf;;AACA,YAAGF,QAAQK,KAAR,EAAH,EAAmB;AACfC,cAAE,WAAF,EAAelB,QAAf,CAAwB;AACpBmB,2BAAW,MADS;AAEpBC,yBAAS,IAFW;AAGpBnB,8BAAc,IAHM;AAIpBoB,0BAAU,IAJU;AAKpBC,0BAAU,IALU;AAMpBC,0BAAU,KANU;AAOpBC,iCAAiB,KAPG;AAQpBC,sCAAsB,KARF;AASpBC,oCAAoB,IATA;AAUpBC,0BAAU;AAVU,aAAxB;AAYAT,cAAE,MAAF,EAAUU,GAAV,CAAc,OAAd,EAAsBV,EAAE,qBAAF,EAAyBW,KAAzB,KAAiCX,EAAE,MAAF,EAAUY,MAA3C,GAAoD,IAA1E;AACH;AACJ,KAlBD;AAmBH,CApBD;AAsBAvB,SAASC,UAAT,CAAoBuB,OAApB,CAA4B;AACxB,oBAAgB,YAAY;AACxB,eAAOC,MAAMC,IAAN,CAAW,EAAX,CAAP;AACH;AAHuB,CAA5B;AAMA1B,SAAS2B,cAAT,CAAwBH,OAAxB,CAAgC;AAC5B,iBAAa,YAAY;AACrB,YAAG;AACC,mBAAOjC,OAAOqC,OAAP,CAAe;AAACC,qBAAK,KAAKC;AAAX,aAAf,EAAkCC,GAAlC,EAAP;AACH,SAFD,CAEC,OAAMC,CAAN,EAAQ,CAAE;AAEd;AAN2B,CAAhC;AASAhC,SAASiC,SAAT,CAAmB/B,UAAnB,CAA8B,YAAY;AACtCS,MAAEuB,QAAF,EAAYxB,KAAZ,CAAkB,YAAW;AACzByB;AACAxB,UAAE,kBAAF,EAAsByB,QAAtB,CAA+BzC,aAA/B;AACH,KAHD;AAIH,CALD;;AAOA,SAASwC,WAAT,GAAuB;AACnB,QAAIE,OAAOC,SAASC,MAAT,CAAgB,MAAhB,CAAX;AACA5B,MAAE,QAAF,EAAY6B,IAAZ,CAAiBH,IAAjB;AACAI,eAAWN,WAAX,EAAwB,IAAxB;AACH","file":"imports/ui/pages/bigPicture.js.map","sourcesContent":["/**\r\n * Created by Yonglin Wang on 9/24/2017.\r\n */\r\nimport './bigPicture.html'\r\nimport { Images } from '../../api/images/images.js';\r\nimport flickity from 'flickity';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nlet morphSettings = {\r\n    // The [in] animation type. Refer to Animate.css for a list of available animations.\r\n    animation: \"flipInX\",\r\n    // An array of phrases to rotate are created based on this separator. Change it if you wish to separate the phrases differently (e.g. So Simple | Very Doge | Much Wow | Such Cool).\r\n    separator: \";;\",\r\n    // The delay between the changing of each phrase in milliseconds.\r\n    speed: 8000,\r\n    complete: function () {\r\n        // Called after the entrance animation is executed.\r\n    }\r\n};\r\nTemplate.bigPicture.onRendered(function () {\r\n    Tracker.autorun(function () {\r\n        let newsSub = Meteor.subscribe('announcements', 10, Meteor.userId());\r\n        let imageSub = Meteor.subscribe('images');\r\n        if(newsSub.ready()){\r\n            $('.flickity').flickity({\r\n                cellAlign: 'left',\r\n                contain: true,\r\n                imagesLoaded: true,\r\n                lazyLoad: true,\r\n                autoPlay: 5000,\r\n                pageDots: false,\r\n                prevNextButtons: false,\r\n                pauseAutoPlayOnHover: false,\r\n                selectedAttraction: 0.01,\r\n                friction: 0.15\r\n            });\r\n            $('.dot').css('width',$('.flickity-page-dots').width()/$('.dot').length + 'px')\r\n        }\r\n    });\r\n});\r\n\r\nTemplate.bigPicture.helpers({\r\n    'announcement': function () {\r\n        return Posts.find({});\r\n    }\r\n});\r\n\r\nTemplate.bigPictureItem.helpers({\r\n    'imageLink': function () {\r\n        try{\r\n            return Images.findOne({_id: this.imgId}).url();\r\n        }catch(e){}\r\n\r\n    }\r\n});\r\n\r\nTemplate.bottomBar.onRendered(function () {\r\n    $(document).ready(function() {\r\n        displayTime();\r\n        $(\"#rotatingMessage\").Morphext(morphSettings);\r\n    });\r\n});\r\n\r\nfunction displayTime() {\r\n    var time = moment().format('h:mm');\r\n    $('#clock').html(time);\r\n    setTimeout(displayTime, 1000);\r\n}"]},"hash":"ca0148e57ecc53ae00bce7e1d4cde1193f1046e8"}
