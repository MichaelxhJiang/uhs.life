{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../../api/images/images.js","imported":["Images"],"specifiers":[{"kind":"named","imported":"Images","local":"Images"}]},{"source":"./editor.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/components/editor.js","filenameRelative":"imports/ui/components/editor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/editor.js.map","sourceFileName":"imports/ui/components/editor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"editor"},"ignored":false,"code":"var Images = void 0;\nmodule.watch(require(\"../../api/images/images.js\"), {\n    Images: function (v) {\n        Images = v;\n    }\n}, 0);\nmodule.watch(require(\"./editor.html\"));\nvar operationStack = ['.editor-open'];\nvar hasUnsplash = false;\nvar originalTitle = \"\";\nvar allPosts = null;\nTemplate.allPosts.onRendered(function () {\n    Tracker.autorun(function () {\n        allPosts = Meteor.subscribeWithPagination('postsByUser', 10);\n        Meteor.subscribe('images');\n    });\n});\nTemplate.blogDraft.onRendered(function () {\n    Tracker.autorun(function () {\n        Meteor.subscribeWithPagination('drafts', 10);\n        Meteor.subscribe('images');\n    });\n});\nTemplate.blogEditor.onRendered(function () {\n    Tracker.autorun(function () {\n        var categorySub = Meteor.subscribe('blogCategories');\n        var courseSub = Meteor.subscribe('allCourses', 1000);\n        var clubSub = Meteor.subscribe('allClubs', 1000);\n\n        if (categorySub.ready()) {\n            var categories = BlogCategories.find({});\n            categories.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name, fields.name);\n                    $('#blogCategorySelect').append(newCat);\n                }\n            });\n        }\n\n        if (courseSub.ready() && clubSub.ready()) {\n            var courses = Courses.find({});\n            var clubs = Clubs.find({});\n            courses.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name + \" - \" + fields.code, fields.code);\n                    $('#blogOrganizationSelect').append(newCat);\n                }\n            });\n            clubs.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name, fields.code);\n                    $('#blogOrganizationSelect').append(newCat);\n                }\n            });\n        }\n    });\n    $(document).ready(function () {\n        $('#blogCategorySelect').select2({\n            placeholder: \"Click to select matching categories\",\n            allowClear: true\n        });\n        $('#blogOrganizationSelect').select2({\n            placeholder: \"Click to select matching categories\",\n            allowClear: true\n        }); // Append it to the select\n\n        $('.visibility-select').select2({\n            placeholder: \"Click to select the scope of this post\"\n        });\n        $('.input-date').datepicker({\n            startDate: '+1d'\n        });\n        var $editor = $('.editable');\n        $editor.froalaEditor({\n            scaytAutoload: false,\n            //This setting can be completely ignored.\n            scaytOptions: {\n                enableOnTouchDevices: false,\n                localization: 'en',\n                extraModules: 'ui',\n                DefaultSelection: 'American English',\n                spellcheckLang: 'en_US',\n                contextMenuSections: 'suggest|moresuggest',\n                serviceProtocol: 'https',\n                servicePort: '80',\n                serviceHost: 'svc.webspellchecker.net',\n                servicePath: 'spellcheck/script/ssrv.cgi',\n                contextMenuForMisspelledOnly: true,\n                scriptPath: 'https://demo.webspellchecker.net/froala/customscayt.js'\n            },\n            //ignore end\n            toolbarButtons: ['fullscreen', '|', 'paragraphFormat', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', '|', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertFile', 'insertVideo', 'insertTable', '|', 'emoticons', 'specialCharacters', 'insertHR', '|', 'print', 'help', '|', 'undo', 'redo'],\n            toolbarButtonsSM: ['fullscreen', '|', 'bold', 'italic', 'underline', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertFile', 'insertVideo', 'insertTable', '|', 'specialCharacters', 'insertHR', 'selectAll', 'clearFormatting', '|', 'print', 'help', '|', 'undo', 'redo'],\n            placeholderText: 'Tell your story here...',\n            tableStyles: {\n                class1: 'table'\n            },\n            paragraphFormat: {\n                N: 'Normal',\n                H2: 'Title',\n                PRE: 'Code'\n            },\n            fileAllowedTypes: ['application/pdf', 'application/msword']\n        });\n        $editor.on('froalaEditor.image.beforeUpload', function (e, editor, images) {\n            var self = $(this);\n            Images.insert(images[0], function (err, fileObj) {\n                //console.log(\"editor \",  editor);\n                //console.log(\"after insert:\", fileObj._id);\n                Tracker.autorun(function (c) {\n                    fileObj = Images.findOne(fileObj._id);\n                    var url = fileObj.url();\n\n                    if (url) {\n                        var imgList = $('img.fr-fic');\n                        self.froalaEditor('image.insert', url, true);\n                        imgList[imgList.length - 1].remove();\n                        return {\n                            link: url\n                        };\n                    }\n                });\n            });\n        });\n\n        if (Meteor.isClient) {\n            Dropzone.autoDiscover = false;\n            $(\".tags\").tagsinput('items');\n            var blogDrop = initDropZone('dropzone', {\n                number: 1,\n                size: 8,\n                message: \"Drop an image here to be the featured image, or click to select an image using the browser.\"\n            });\n        }\n    });\n});\nTemplate.announcementEditor.onRendered(function () {\n    Tracker.autorun(function () {\n        var categorySub = Meteor.subscribe('categories');\n        var clubSub = Meteor.subscribe('allClubs', 100);\n\n        if (categorySub.ready()) {\n            var categories = Categories.find({});\n            categories.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name, fields.name);\n                    $('.announcement-category').append(newCat);\n                }\n            });\n        }\n\n        if (clubSub.ready()) {\n            var clubs = Clubs.find({});\n            clubs.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name, fields.name);\n                    $('.clubs-category').append(newCat);\n                }\n            });\n        }\n    });\n    $(document).ready(function () {\n        $('.category-select').select2({\n            placeholder: \"Click to select matching categories\",\n            allowClear: true\n        });\n        $('.input-daterange').datepicker({\n            startDate: '+1d'\n        });\n\n        if (Meteor.isClient) {\n            var arrayOfImageIds = [];\n            Dropzone.autoDiscover = false;\n            $(\".tags\").tagsinput('items');\n            var announcementDrop = initDropZone(\"announcementImage\", {\n                number: 1,\n                size: 8,\n                message: \"Drop your poster here, or click to select an image using the browser.\"\n            });\n            var announcementImageTwo = initDropZone(\"announcementImageTwo\", {\n                number: 1,\n                size: 8,\n                message: \"Drop your poster here, or click to select an image using the browser.\"\n            });\n        }\n    });\n});\nTemplate.suggestionEditor.onRendered(function () {\n    var suggestionDrop = initDropZone('suggestionImage', {\n        number: 1,\n        size: 8\n    });\n});\nTemplate.announcementOptions.onRendered(function () {\n    this.$(\".announce-tags\").tagsinput('items');\n});\nTemplate.editor.helpers({\n    'canEdit': function () {\n        return Roles.userIsInRole(Meteor.userId(), ['teacher', 'blogEditor', 'announcementEditor', 'admin']);\n    },\n    'canWriteAnnounce': function () {\n        return Roles.userIsInRole(Meteor.userId(), ['teacher', 'admin', 'announcementEditor']);\n    },\n    'canWriteBlog': function () {\n        return Roles.userIsInRole(Meteor.userId(), ['teacher', 'admin', 'blogEditor']);\n    }\n});\nTemplate.blogDraft.helpers({\n    'drafts': function () {\n        return Drafts.find({});\n    },\n    'draftedDate': function () {\n        return moment(this.draftedDate).format('MMMM Do YYYY');\n    },\n    'imageLink': function () {\n        if (this.unsplash) {\n            return this.unsplash.urls.full;\n        } else {\n            try {\n                return Images.findOne({\n                    _id: this.imgId\n                }).url();\n            } catch (e) {//console.log('error getting photo')\n            }\n        }\n    },\n    'isBlog': function () {\n        return this.type === 'blog';\n    }\n});\nTemplate.allPosts.helpers({\n    'post': function () {\n        return Posts.find({\n            'author': Meteor.userId()\n        });\n    },\n    'draftedDate': function () {\n        return moment(this.draftedDate).format('MMMM Do YYYY');\n    },\n    'imageLink': function () {\n        if (this.unsplash) {\n            return this.unsplash.urls.full;\n        } else {\n            try {\n                return Images.findOne({\n                    _id: this.imgId\n                }).url();\n            } catch (e) {//console.log('error getting photo')\n            }\n        }\n    },\n    'isBlog': function () {\n        return this.type === 'blog';\n    },\n    'stage': function () {\n        return this.meta.screeningStage;\n    },\n    'stageCaption': function () {\n        var text = 'Post Submitted';\n\n        if (this.meta.screeningStage === 3) {\n            text = \"Post Approved\";\n        } else if (this.meta.screeningStage === -1) {\n            text = \"Post Rejected\";\n        }\n\n        return text;\n    }\n}); /* Events */\nTemplate.editor.events({\n    'click #openEditor': function () {\n        originalTitle = Session.get('DocumentTitle');\n        Session.set('DocumentTitle', 'Composer | uhs.life');\n        swapElements('.editor-open', '.editor-main');\n\n        if (operationStack.length === 1) {\n            operationStack.push('.blog-intro');\n        }\n\n        $('html, body').css({\n            overflow: 'hidden'\n        }); // Disables the Scrolling\n    },\n    'click #startNewDraft': function () {\n        swapElements('.blog-intro', '.post-type');\n        operationStack.push('.post-type');\n    },\n    'click #checkDrafts': function () {\n        swapElements('.blog-intro', '.blog-drafts');\n        operationStack.push('.blog-drafts');\n    },\n    'click #checkAll': function () {\n        swapElements('.blog-intro', '.all-posts');\n        operationStack.push('.all-posts');\n    },\n    'click #startBlog': function () {\n        swapElements('.post-type', '.blog-editor');\n        operationStack.push('.blog-editor');\n        Session.set('announcementType', 'blog');\n    },\n    'click #startAnnouncement': function () {\n        swapElements('.post-type', '.announcement-menu');\n        operationStack.push('.announcement-menu');\n    },\n    'click #startSuggestion': function () {\n        swapElements('.post-type', '.suggestions');\n        operationStack.push('.suggestions');\n        Session.set('announcementType', 'suggestion');\n    },\n    'click .editor-close': function () {\n        Session.set('DocumentTitle', originalTitle);\n        swapElements('.editor-main', '.editor-open');\n        $('html, body').css({\n            overflow: 'visible'\n        }); // Disables the Scrolling\n    },\n    'click .editor-back': function () {\n        if (operationStack.length - 2 === 0) {\n            Session.set('DocumentTitle', originalTitle);\n            swapElements('.editor-main', '.editor-open');\n            $('html, body').css({\n                overflow: 'visible'\n            }); // Enables the Scrolling\n        } else {\n            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n        }\n\n        operationStack.pop();\n    },\n    'click #imageOnly': function () {\n        swapElements('.announcement-menu', '.image-only');\n        operationStack.push('.image-only');\n        Session.set('announcementType', 'imageOnly');\n    },\n    'click #textOnly': function () {\n        swapElements('.announcement-menu', '.text-only');\n        operationStack.push('.text-only');\n        Session.set('announcementType', 'textOnly');\n    },\n    'click #textAndImage': function () {\n        swapElements('.announcement-menu', '.text-and-image');\n        operationStack.push('.text-and-image');\n        Session.set('announcementType', 'textAndImage');\n    },\n    'input .announcement-text': function (evt) {\n        var maxlength = $(evt.target).attr(\"maxlength\");\n        var length = $(evt.target).val().length;\n\n        if (length >= maxlength) {\n            console.log(\"You have reached the maximum number of characters.\");\n            $('.announcement-counter').text(0);\n        } else {\n            $('.announcement-counter').text(maxlength - length);\n        }\n    },\n    'click .priority-toggle': function (evt) {\n        var priority = $(evt.target).attr('data-priority');\n        $('.is-checked').removeClass('is-checked');\n        $(evt.target).addClass('is-checked');\n        Session.set('priority', priority);\n    }\n});\nTemplate.allPosts.events({\n    'click .load-more-posts': function (evt) {\n        evt.preventDefault();\n        allPosts.loadNextPage();\n    },\n    'click .draft-item': function (evt) {\n        if (!$(evt.target).hasClass('btn-delete-post') && !$(evt.target).hasClass('btn-republish-post')) {\n            var obj = $(evt.target).closest($('.draft-item'));\n            var id = obj.attr('id');\n            setEditorContent(Posts.findOne({\n                _id: id\n            }));\n        }\n    },\n    'click .btn-delete-post': function (evt) {\n        evt.preventDefault();\n        var obj = $(evt.target).closest($('.draft-item'));\n        var id = obj.attr('id');\n        alertConfirm('Are you sure', 'This action cannot be reverted, if you don\\'t want this post to show up in the list, we recommend you archive it.', function (accepted) {\n            if (accepted) {\n                Posts.remove({\n                    _id: id\n                }, function (err) {\n                    if (err) {\n                        alertError(\"Error Removing Post\", \"Please try again later.\\n\" + err.message);\n                    } else {\n                        alertSuccess(\"Successfully Removed Post\", \"\");\n                    }\n                });\n            }\n        });\n    }\n});\nTemplate.blogEditor.events({\n    'click .publish': function (event, template) {\n        var json = constructBlogJson();\n        Meteor.call('posts.postBlog', json, function (err) {\n            if (err) {\n                alertError('Post Failed!', err.message);\n            } else {\n                alertSuccess('Success!', 'The post has been submitted.');\n                Drafts.remove({\n                    _id: Session.get('draftEditItem')\n                });\n                Session.set('draftEditItem', null);\n                wipeEditor('blog'); // Go back\n\n                if (operationStack.length - 2 === 0) {\n                    swapElements('.editor-main', '.editor-open');\n                    $('html, body').css({\n                        overflow: 'visible'\n                    }); // Enables the Scrolling\n                } else {\n                    swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                }\n\n                operationStack.pop();\n            }\n        });\n    },\n    'click .save-draft': function () {\n        var json = constructBlogJson();\n\n        if (Session.get('draftEditItem')) {\n            Drafts.update({\n                _id: Session.get('draftEditItem')\n            }, json, function (err) {\n                if (err) {\n                    alertError('Saving Draft Failed!', err.message);\n                } else {\n                    alertSuccess(\"Saved!\", \"\");\n                }\n            });\n        } else {\n            Meteor.call('drafts.postDraftBlog', json, function (err) {\n                if (err) {\n                    alertError('Saving Draft Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The draft has been saved.');\n                }\n            });\n        }\n    },\n    'click #getFeaturedUnsplash': function (evt, template) {\n        $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\n        Meteor.call('setupUnsplash', function (err) {\n            if (err) {\n                console.log(err);\n                hasUnsplash = false;\n            } else {\n                var list = getKeyWord($('.editable').froalaEditor('html.get'));\n                var agent = 0;\n\n                var getImg = function () {\n                    Meteor.call('searchKeyword', list[agent], function (err, data) {\n                        if (err) {\n                            console.log(err);\n                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\n                            hasUnsplash = false;\n                        } else {\n                            console.log(data);\n\n                            if (data.results.length <= 0) {\n                                agent++;\n\n                                if (agent <= list.length) {\n                                    console.log('no image found');\n                                    getImg();\n                                } else {\n                                    $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\n                                    Meteor.call('getRandomPhoto', function (err, data) {\n                                        if (err) {\n                                            console.log(err);\n                                            $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\n                                            var blogDrop = initDropZone('dropzone', {\n                                                number: 1,\n                                                size: 8,\n                                                message: \"Drop an image here to be the featured image, or click to select an image using the browser.\"\n                                            });\n                                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one instead.\");\n                                            hasUnsplash = false;\n                                        } else {\n                                            console.log(data);\n                                            Session.set('unsplash_img', data.id);\n                                            Session.set('unsplashData', data);\n                                            $('#dropzone').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\n                                            $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\" + data.user.links.html + \"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\" + data.user.name + \"</a> from \" + data.user.location + \" via <b>Unsplash</b>. <br><br> Want a differnt one? <a href='' id='newUnsplash'>Click Here</a>. Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\n                                        }\n                                    });\n                                }\n                            } else {\n                                var num = getRandomInt(0, data.results.length - 1);\n                                Session.set('unsplash_img', data.results[num].id);\n                                Session.set('unsplashData', data.results[num]);\n                                hasUnsplash = true;\n                                $('#dropzone').replaceWith(\"<img src='\" + data.results[num].urls.regular + \"' class='img-responsive unsplash-container'/>\");\n                                $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\" + data.results[num].user.links.html + \"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\" + data.results[num].user.name + \"</a> from \" + data.results[num].user.location + \" via <b>Unsplash</b>. <br><br> This will be your featured image, if you want another one <a href='' id='newUnsplash'>Click Here</a> Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\n                            }\n                        }\n                    });\n                };\n\n                getImg();\n            }\n        });\n    },\n    'click #newUnsplash': function () {\n        $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\n        Meteor.call('getRandomPhoto', function (err, data) {\n            if (err) {\n                console.log(err);\n                $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\n                var blogDrop = initDropZone('dropzone', {\n                    number: 1,\n                    size: 8,\n                    message: \"Drop an image here to be the featured image, or click to select an image using the browser.\"\n                });\n                $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one instead.\");\n                hasUnsplash = false;\n            } else {\n                console.log(data);\n                Session.set('unsplash_img', data.id);\n                Session.set('unsplashData', data);\n                $('.unsplash-container').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\n                $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\" + data.user.links.html + \"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\" + data.user.name + \"</a> from \" + data.user.location + \" via <b>Unsplash</b>. <br><br> Want a differnt one? <a href='' id='newUnsplash'>Click Here</a>. Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\n            }\n        });\n    },\n    'click #newUpload': function () {\n        $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\n        var blogDrop = initDropZone('dropzone', {\n            number: 1,\n            size: 8,\n            message: \"Drop an image here to be the featured image, or click to select an image using the browser.\"\n        });\n        $('#unsplashPrompt').html(\"Want to avoid the hassle? <a href='' id='getFeaturedUnsplash'>Click here</a> and we will find an image for you!\");\n    },\n    'click .btn-preview': function () {\n        var imageID = hasUnsplash ? Session.get('unsplash_img') : Session.get('newImageId');\n        var previewPost = {\n            title: $('#blogTitle').val() + \" (This is a preview)\",\n            subtitle: $('#blogSubTitle').val(),\n            content: $('.editable').froalaEditor('html.get'),\n            tags: $(\".tags\").val(),\n            unsplash: Session.get('unsplashData'),\n            imgId: imageID,\n            meta: {\n                hasUnsplash: hasUnsplash\n            }\n        };\n        Session.setPersistent('preview_json', previewPost);\n        $('html, body').css({\n            overflow: 'visible'\n        }); // Enables the Scrolling\n\n        window.open('/blog/preview', '_blank');\n    }\n});\nTemplate.announcementOptions.events({\n    'click .btn-post': function (event, template) {\n        var type = Session.get('announcementType');\n        var json = constructAnnouncementJson(type);\n\n        if (type === \"imageOnly\") {\n            Meteor.call('posts.postImage', json, function (err) {\n                if (err) {\n                    alertError('Posting Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: Session.get('draftEditItem')\n                    });\n                    Session.set('draftEditItem', null);\n                    wipeEditor('announcement', 'imageOnly');\n\n                    if (operationStack.length - 2 === 0) {\n                        swapElements('.editor-main', '.editor-open');\n                        $('html, body').css({\n                            overflow: 'visible'\n                        }); // Enables the Scrolling\n                    } else {\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                    }\n\n                    operationStack.pop();\n                }\n            });\n        } else if (type === \"textOnly\") {\n            Meteor.call('posts.postText', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: Session.get('draftEditItem')\n                    });\n                    Session.set('draftEditItem', null);\n                    wipeEditor('announcement', 'textOnly');\n\n                    if (operationStack.length - 2 === 0) {\n                        swapElements('.editor-main', '.editor-open');\n                        $('html, body').css({\n                            overflow: 'visible'\n                        }); // Enables the Scrolling\n                    } else {\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                    }\n\n                    operationStack.pop();\n                }\n            });\n        } else if (type === 'textAndImage') {\n            Meteor.call('posts.postTextImage', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: Session.get('draftEditItem')\n                    });\n                    Session.set('draftEditItem', null);\n                    wipeEditor('announcement', 'imageText');\n\n                    if (operationStack.length - 2 === 0) {\n                        swapElements('.editor-main', '.editor-open');\n                        $('html, body').css({\n                            overflow: 'visible'\n                        }); // Enables the Scrolling\n                    } else {\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                    }\n\n                    operationStack.pop();\n                }\n            });\n        }\n    },\n    'click .btn-save': function () {\n        var type = Session.get('announcementType');\n        var json = constructAnnouncementJson(type);\n\n        if (Session.get('draftEditItem')) {\n            Drafts.update({\n                _id: Session.get('draftEditItem')\n            }, json, function (err) {\n                if (err) {\n                    alertError('Saving Draft Failed!', err.message);\n                } else {\n                    alertSuccess(\"Saved!\", \"\");\n\n                    if (operationStack.length - 2 === 0) {\n                        swapElements('.editor-main', '.editor-open');\n                        $('html, body').css({\n                            overflow: 'visible'\n                        }); // Enables the Scrolling\n                    } else {\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                    }\n\n                    operationStack.pop();\n                }\n            });\n        } else {\n            if (type === \"imageOnly\") {\n                Meteor.call('drafts.postDraftImage', json, function (err) {\n                    if (err) {\n                        alertError('Saving Draft Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The draft has been saved.');\n                        wipeEditor('announcement', 'imageOnly');\n\n                        if (operationStack.length - 2 === 0) {\n                            swapElements('.editor-main', '.editor-open');\n                            $('html, body').css({\n                                overflow: 'visible'\n                            }); // Enables the Scrolling\n                        } else {\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                        }\n\n                        operationStack.pop();\n                    }\n                });\n            } else if (type === \"textOnly\") {\n                Meteor.call('drafts.postDraftText', json, function (err) {\n                    if (err) {\n                        alertError('Saving Draft Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The draft has been saved.');\n                        wipeEditor('announcement', 'textOnly');\n\n                        if (operationStack.length - 2 === 0) {\n                            swapElements('.editor-main', '.editor-open');\n                            $('html, body').css({\n                                overflow: 'visible'\n                            }); // Enables the Scrolling\n                        } else {\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                        }\n\n                        operationStack.pop();\n                    }\n                });\n            } else if (type === 'textAndImage') {\n                Meteor.call('drafts.postDraftTextImage', json, function (err) {\n                    if (err) {\n                        alertError('Saving Draft Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The draft has been saved.');\n                        wipeEditor('announcement', 'imageText');\n\n                        if (operationStack.length - 2 === 0) {\n                            swapElements('.editor-main', '.editor-open');\n                            $('html, body').css({\n                                overflow: 'visible'\n                            }); // Enables the Scrolling\n                        } else {\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                        }\n\n                        operationStack.pop();\n                    }\n                });\n            }\n        }\n    }\n});\nTemplate.blogDraft.events({\n    'click .btn-delete-draft': function (evt) {\n        evt.preventDefault();\n        var obj = $(evt.target).closest($('.draft-item'));\n        var id = obj.attr('id');\n        Meteor.call('drafts.remove', id, function (err) {\n            if (err) {\n                alertError(\"Something went wrong when deleting the draft\", err.message);\n            }\n        });\n    },\n    'click .btn-post-draft': function (evt) {\n        evt.preventDefault();\n        var obj = $(evt.target).closest($('.draft-item'));\n        var id = obj.attr('id');\n        var json = Drafts.findOne({\n            _id: id\n        });\n        var type = json.type;\n\n        if (type === \"imageOnly\") {\n            Meteor.call('posts.postImage', json, function (err) {\n                if (err) {\n                    alertError('Posting Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: id\n                    });\n                }\n            });\n        } else if (type === \"textOnly\") {\n            Meteor.call('posts.postText', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: id\n                    });\n                }\n            });\n        } else if (type === 'textAndImage') {\n            Meteor.call('posts.postTextImage', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: id\n                    });\n                }\n            });\n        } else if (type === 'blog') {\n            Meteor.call('posts.postBlog', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: id\n                    });\n                }\n            });\n        }\n    },\n    'click .btn-publish-draft': function (evt) {\n        var obj = $(evt.target).closest($('.draft-item'));\n        var id = obj.attr('id');\n        var json = Drafts.findOne({\n            _id: id\n        });\n        var type = json.subType;\n\n        if (json.type === 'blog') {\n            Meteor.call('posts.postBlog', json, function (err) {\n                if (err) {\n                    alertError('Post Failed!', err.message);\n                } else {\n                    alertSuccess('Success!', 'The post has been submitted.');\n                    Drafts.remove({\n                        _id: id\n                    });\n                }\n            });\n        } else {\n            if (type === \"imageOnly\") {\n                Meteor.call('posts.postImage', json, function (err) {\n                    if (err) {\n                        alertError('Posting Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The post has been submitted.');\n                        Drafts.remove({\n                            _id: id\n                        });\n                    }\n                });\n            } else if (type === \"textOnly\") {\n                Meteor.call('posts.postText', json, function (err) {\n                    if (err) {\n                        alertError('Post Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The post has been submitted.');\n                        Drafts.remove({\n                            _id: id\n                        });\n                    }\n                });\n            } else if (type === 'textAndImage') {\n                Meteor.call('posts.postTextImage', json, function (err) {\n                    if (err) {\n                        alertError('Post Failed!', err.message);\n                    } else {\n                        alertSuccess('Success!', 'The post has been submitted.');\n                        Drafts.remove({\n                            _id: id\n                        });\n                    }\n                });\n            }\n        }\n    },\n    'click .draft-item': function (evt) {\n        if (!$(evt.target).hasClass('btn-delete-draft') && !$(evt.target).hasClass('btn-publish-draft')) {\n            var obj = $(evt.target).closest($('.draft-item'));\n            var id = obj.attr('id');\n            Session.set('draftEditItem', id);\n            setEditorContent(Drafts.findOne({\n                _id: id\n            }));\n            console.log(Session.get('draftEditItem'));\n        }\n    }\n});\nTemplate.suggestionEditor.events({\n    'click .btn-post': function () {\n        var headline = $('#suggestionHeadline').val();\n        var content = $('.announcement-text')[2].value;\n        var imgId = Session.get('newImageId');\n        var authorId = Meteor.userId();\n        var draftedDate = new Date();\n\n        if (!imgId) {\n            //TODO\n            console.log('No image uploaded');\n        }\n\n        if (!headline) {\n            //TODO\n            console.log('No headline entered');\n        }\n\n        if (!content) {\n            //TODO\n            console.log('No content entered');\n        }\n\n        var json = {\n            author: authorId,\n            type: 'suggestion',\n            headline: headline,\n            content: content,\n            draftedDate: draftedDate,\n            imgId: imgId\n        };\n        console.log(json);\n        Meteor.call('suggestions.postSuggestion', json, function (err) {\n            console.log('posted');\n\n            if (err) {\n                alertError('Post Failed!', err.message);\n            } else {\n                alertSuccess('Success!', 'The post has been submitted.');\n\n                if (operationStack.length - 2 === 0) {\n                    swapElements('.editor-main', '.editor-open');\n                    $('html, body').css({\n                        overflow: 'visible'\n                    }); // Enables the Scrolling\n                } else {\n                    swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\n                }\n\n                operationStack.pop();\n            }\n        });\n    }\n});\n\nfunction initDropZone(id, info) {\n    return new Dropzone(\"form#\" + id, {\n        maxFiles: info.number || 1,\n        maxFilesize: info.size || 8,\n        thumbnailWidth: 400,\n        addRemoveLinks: true,\n        dictDefaultMessage: info.message || \"Drop your image here, or click to select an image using the browser.\",\n        accept: function (file, done) {\n            $('.quick-image-prompt').html('');\n            var FSFile = new FS.File(file);\n            Images.insert(FSFile, function (err, fileObj) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    Images.remove({\n                        _id: Session.get('newImageId')\n                    }, function (err) {\n                        if (err) {\n                            console.log(\"error removing image:\\n\" + err);\n                        }\n                    });\n                    hasUnsplash = false;\n                    Session.set('newFileLink', fileObj.extension()); //update the file type\n\n                    Session.set('newImageId', fileObj._id); //update the image id to current image\n\n                    done();\n                }\n            });\n        }\n    });\n}\n\nfunction swapElements(a, b) {\n    $(a).fadeOut('fast', function () {\n        $(b).fadeIn(\"slow\");\n    });\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction setEditorContent(json) {\n    if (json.type === 'blog') {\n        $('#blogTitle').val(json.title);\n        $('#blogSubTitle').val(json.subtitle);\n        $('.editable').froalaEditor('html.set', json.content);\n\n        _.forEach(json.tags, function (item) {\n            $('.tags').tagsinput('add', item);\n        });\n\n        $('.visibility-select').val(json.meta.visibility).trigger(\"change\");\n        $(\".category-select\").val(json.categories).trigger(\"change\");\n        $(\"#blogOrganizationSelect\").val(json.organizationsValues).trigger(\"change\");\n        $('.input-date').datepicker('update', json.releaseDate);\n\n        if (json.unsplash) {\n            Meteor.call('setupUnsplash', function (err) {\n                if (err) {\n                    console.log(err);\n                    $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\n                } else {\n                    Meteor.call('getPhoto', json.imgId, function (err, data) {\n                        if (err) {\n                            console.log(err);\n                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\n                        } else {\n                            Session.set('unsplash_img', data.id);\n                            Session.set('unsplashData', data);\n                            hasUnsplash = true;\n                            $('#dropzone').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\n                            $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\" + data.user.links.html + \"'>\" + data.user.name + \"</a> from \" + data.user.location + \" via <b>Unsplash</b>. <br><br> This will be your featured image, if you want another one <a href='' id='newUnsplash'>Click Here</a> Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\n                        }\n                    });\n                }\n            });\n        }\n\n        swapElements('.blog-drafts', '.blog-editor');\n        operationStack.push('.blog-editor');\n        Session.set('announcementType', 'blog');\n    } else if (json.type === 'announcement') {\n        if (json.subType === 'imageOnly') {\n            $('#imageOnlyHeadline').val(json.headline);\n\n            if (json.imgId) {\n                Session.set('newImageId', json.imgId);\n                $('.quick-image-prompt').html('You have already uploaded an image, if you would like to change it, simply add a different one. Otherwise, simply ignore the box.');\n            }\n\n            _.forEach(json.tags, function (item) {\n                $('.announce-tags:eq(0)').tagsinput('add', item);\n            });\n\n            $(\".announcement-category:eq(0)\").val(json.categories).trigger(\"change\");\n            $(\".clubs-category:eq(0)\").val(json.clubs).trigger(\"change\");\n            $('.startDate:eq(0)').datepicker('update', json.startDate);\n            $('.endDate:eq(0)').datepicker('update', json.endDate);\n            swapElements('.blog-drafts', '.image-only');\n            operationStack.push('.image-only');\n            Session.set('announcementType', 'imageOnly');\n        } else if (json.subType === 'textOnly') {\n            $('#textOnlyHeadline').val(json.headline);\n            $('.announcement-text:eq(0)').val(json.content);\n\n            _.forEach(json.tags, function (item) {\n                $('.announce-tags:eq(1)').tagsinput('add', item);\n            });\n\n            $(\".announcement-category:eq(1)\").val(json.categories).trigger(\"change\");\n            $(\".clubs-category:eq(1)\").val(json.clubs).trigger(\"change\");\n            $('.startDate:eq(1)').datepicker('update', json.startDate);\n            $('.endDate:eq(1)').datepicker('update', json.endDate);\n            swapElements('.blog-drafts', '.text-only');\n            operationStack.push('.text-only');\n            Session.set('announcementType', 'textOnly');\n        } else if (json.subType === 'imageText') {\n            $('#textImageHeadline').val(json.headline);\n\n            if (json.imgId) {\n                Session.set('newImageId', json.imgId);\n                $('.quick-image-prompt').html('You have already uploaded an image, if you would like to change it, simply add a different one. Otherwise, simply ignore the box.');\n            }\n\n            $('.announcement-text:eq(1)').val(json.content);\n            $(\".announcement-category:eq(2)\").val(json.categories).trigger(\"change\");\n            $(\".clubs-category:eq(2)\").val(json.clubs).trigger(\"change\");\n            $('.startDate:eq(2)').datepicker('update', json.startDate);\n            $('.endDate:eq(2)').datepicker('update', json.endDate);\n            Session.set('priority', json.meta.priority);\n            $('.is-checked').removeClass('is-checked');\n            $(\".priority-toggle[data-priority=\" + Session.get('priority') + \"]\").addClass('is-checked');\n            swapElements('.blog-drafts', '.text-and-image');\n            operationStack.push('.text-and-image');\n            Session.set('announcementType', 'textAndImage');\n        }\n    }\n}\n\nfunction wipeEditor(type, subType) {\n    if (type === 'blog') {\n        $('#blogTitle').val(null);\n        $('#blogSubTitle').val(null);\n        $('.editable').froalaEditor('html.set', '');\n        $('.tags').tagsinput('removeAll');\n        $('.visibility-select').val(null).trigger(\"change\");\n        $(\".category-select\").val(null).trigger(\"change\");\n        $('.input-date').datepicker('update', null);\n        Session.set('unsplash_img', null);\n        Session.set('unsplashData', null);\n        Session.set('newImageId', null);\n        var blogDrop = initDropZone('dropzone', {\n            number: 1,\n            size: 8,\n            message: \"Drop an image here to be the featured image, or click to select an image using the browser.\"\n        });\n        $('#unsplashPrompt').html(\"Want to avoid the hassle? <a href='' id='getFeaturedUnsplash'>Click here</a> and we will find an image for you!\");\n    } else if (type === 'announcement') {\n        if (subType === 'imageOnly') {\n            $('#imageOnlyHeadline').val(null);\n            Session.set('newImageId', null);\n            $('#announcementImage').replaceWith(\"<form action='/file-upload' class='dropzone' id='announcementImage'></form>\");\n            var announcementDrop = initDropZone(\"announcementImage\", {\n                number: 1,\n                size: 8,\n                message: \"Drop your poster here, or click to select an image using the browser.\"\n            });\n            $('.quick-image-prompt').html(\"\");\n            $('.announce-tags:eq(0)').tagsinput('removeAll');\n            $(\".announcement-category:eq(0)\").val(null).trigger(\"change\");\n            $(\".clubs-category:eq(0)\").val(null).trigger(\"change\");\n            $('.startDate:eq(0)').datepicker('update', null);\n            $('.endDate:eq(0)').datepicker('update', null);\n        } else if (subType === 'textOnly') {\n            $('#textOnlyHeadline').val(null);\n            $('.announcement-text:eq(0)').val(null);\n            $('.announce-tags:eq(1)').tagsinput('removeAll');\n            $(\".announcement-category:eq(1)\").val(null).trigger(\"change\");\n            $(\".clubs-category:eq(1)\").val(null).trigger(\"change\");\n            $('.startDate:eq(1)').datepicker('update', null);\n            $('.endDate:eq(1)').datepicker('update', null);\n        } else if (subType === 'imageText') {\n            $('#textImageHeadline').val(null);\n            Session.set('newImageId', null);\n            $('#announcementImageTwo').replaceWith(\"<form action='/file-upload' class='dropzone' id='announcementImageTwo'></form>\");\n\n            var _announcementDrop = initDropZone(\"announcementImageTwo\", {\n                number: 1,\n                size: 8,\n                message: \"Drop your poster here, or click to select an image using the browser.\"\n            });\n\n            $('.quick-image-prompt').html('');\n            $('.announcement-text:eq(1)').val(null);\n            $('.announce-tags:eq(2)').tagsinput('removeAll');\n            $(\".announcement-category:eq(2)\").val(null).trigger(\"change\");\n            $(\".clubs-category:eq(2)\").val(null).trigger(\"change\");\n            $('.startDate:eq(2)').datepicker('update', null);\n            $('.endDate:eq(2)').datepicker('update', null);\n            Session.set('priority', 'image');\n            $('.is-checked').removeClass('is-checked');\n            $(\".priority-toggle[data-priority=\" + Session.get('priority') + \"]\").addClass('is-checked');\n        }\n    }\n}\n\nfunction constructBlogJson() {\n    var title = $('#blogTitle').val();\n    var subtitle = $('#blogSubTitle').val();\n    var content = $('.editable').froalaEditor('html.get');\n    var str = $(\".tags\").val();\n    var separators = [' , ', ', ', ',', ' ,'];\n    var tags = str.split(new RegExp(separators.join('|'), 'g'));\n    var imgId = hasUnsplash ? Session.get('unsplash_img') : Session.get('newImageId');\n    var releaseDate = new Date($('.input-date').val());\n    var draftedDate = new Date();\n    var options = $('.category-select')[0].options;\n    var categories = [];\n\n    for (var i = 0; i < options.length; i++) {\n        var opt = options[i];\n\n        if (opt.selected) {\n            categories.push(opt.value);\n        }\n    }\n\n    var orgOptions = document.getElementById('blogOrganizationSelect').options;\n    var orgNames = [],\n        orgVal = [];\n\n    for (var _i = 0; _i < orgOptions.length; _i++) {\n        var _opt = orgOptions[_i];\n\n        if (_opt.selected) {\n            orgNames.push(_opt.text);\n            orgVal.push(_opt.value);\n        }\n    }\n\n    var authorId = Meteor.userId();\n    var imageFirst = null; //meta\n\n    var visibility = $('.visibility-select')[0].value;\n    return {\n        author: authorId,\n        type: 'blog',\n        releaseDate: releaseDate,\n        draftedDate: draftedDate,\n        title: title,\n        subtitle: subtitle,\n        content: content,\n        tags: tags,\n        categories: categories,\n        imgId: imgId,\n        unsplash: Session.get('unsplashData'),\n        organizationsNames: orgNames,\n        organizationsValues: orgVal,\n        meta: {\n            imageFirst: imageFirst,\n            hasUnsplash: hasUnsplash,\n            visibility: visibility\n        }\n    };\n}\n\nfunction constructAnnouncementJson(type) {\n    if (type === \"imageOnly\") {\n        console.log('constructing image only');\n        var headline = $('#imageOnlyHeadline').val();\n        var imgId = Session.get('newImageId');\n        var separators = [' , ', ', ', ',', ' ,'];\n        var tags = $(\".announce-tags\")[0].value.split(new RegExp(separators.join('|'), 'g'));\n        var options = $('.announcement-category')[0].options;\n        var categories = [];\n\n        for (var i = 0; i < options.length; i++) {\n            var opt = options[i];\n\n            if (opt.selected) {\n                categories.push(opt.value);\n            }\n        }\n\n        var clubs = $('.clubs-category')[0].options;\n        var clubList = [];\n\n        for (var _i2 = 0; _i2 < clubs.length; _i2++) {\n            var _opt2 = clubs[_i2];\n\n            if (_opt2.selected) {\n                clubList.push(_opt2.value);\n            }\n        }\n\n        var authorId = Meteor.userId();\n        var startDate = new Date($('.startDate')[0].value);\n        var endDate = new Date($('.endDate')[0].value);\n        var draftedDate = new Date();\n        var visibility = $('.visibility-select')[1].value;\n\n        if (!imgId) {\n            alertError('Post Incomplete!', \"You haven't uploaded an image yet!\");\n        }\n\n        if (!headline) {\n            //TODO\n            alertError('Post Incomplete!', \"You haven't added a headline!\");\n        }\n\n        if (!startDate || !endDate) {\n            alertError('Post Incomplete!', \"You haven't added a date!\");\n        }\n\n        return {\n            author: authorId,\n            type: 'announcement',\n            subType: 'imageOnly',\n            startDate: startDate,\n            endDate: endDate,\n            draftedDate: draftedDate,\n            headline: headline,\n            tags: tags,\n            categories: categories,\n            imgId: imgId,\n            clubs: clubList,\n            meta: {\n                hasUnsplash: hasUnsplash,\n                visibility: visibility\n            }\n        };\n    } else if (type === \"textOnly\") {\n        var _headline = $('#textOnlyHeadline').val();\n\n        var content = $('.announcement-text')[0].value;\n        var _separators = [' , ', ', ', ',', ' ,'];\n\n        var _tags = $(\".announce-tags\")[1].value.split(new RegExp(_separators.join('|'), 'g'));\n\n        var _options = $('.announcement-category')[1].options;\n        var _categories = [];\n\n        for (var _i3 = 0; _i3 < _options.length; _i3++) {\n            var _opt3 = _options[_i3];\n\n            if (_opt3.selected) {\n                _categories.push(_opt3.value);\n            }\n        }\n\n        var _visibility = $('.visibility-select')[2].value;\n\n        var _authorId = Meteor.userId();\n\n        var _startDate = new Date($('.startDate')[1].value);\n\n        var _endDate = new Date($('.endDate')[1].value);\n\n        var _draftedDate = new Date();\n\n        var _clubs = $('.clubs-category')[1].options;\n        var _clubList = [];\n\n        for (var _i4 = 0; _i4 < _clubs.length; _i4++) {\n            var _opt4 = _clubs[_i4];\n\n            if (_opt4.selected) {\n                _clubList.push(_opt4.value);\n            }\n        } //meta\n\n\n        if (!content) {\n            alertError('Post Incomplete!', \"You haven't added any content yet!\");\n        }\n\n        if (!_headline) {\n            //TODO\n            alertError('Post Incomplete!', \"You haven't added a headline!\");\n        }\n\n        if (!_startDate || !_endDate) {\n            alertError('Post Incomplete!', \"You haven't added a date!\");\n        }\n\n        return {\n            author: _authorId,\n            type: 'announcement',\n            subType: 'textOnly',\n            startDate: _startDate,\n            endDate: _endDate,\n            draftedDate: _draftedDate,\n            headline: _headline,\n            content: content,\n            tags: _tags || [],\n            categories: _categories || [],\n            clubs: _clubList,\n            meta: {\n                hasUnsplash: hasUnsplash,\n                visibility: _visibility\n            }\n        };\n    } else if (type === 'textAndImage') {\n        var _headline2 = $('#textImageHeadline').val();\n\n        var _content = $('.announcement-text')[1].value;\n\n        var _imgId = Session.get('newImageId');\n\n        var str = $(\".announce-tags\")[2].value;\n        var _separators2 = [' , ', ', ', ',', ' ,'];\n\n        var _tags2 = str.split(new RegExp(_separators2.join('|'), 'g'));\n\n        var _options2 = $('.announcement-category')[2].options;\n        var _categories2 = [];\n\n        for (var _i5 = 0; _i5 < _options2.length; _i5++) {\n            var _opt5 = _options2[_i5];\n\n            if (_opt5.selected) {\n                _categories2.push(_opt5.value);\n            }\n        }\n\n        var _visibility2 = $('.visibility-select')[3].value;\n\n        var _authorId2 = Meteor.userId();\n\n        var _startDate2 = new Date($('.startDate')[2].value);\n\n        var _endDate2 = new Date($('.endDate')[2].value);\n\n        var _draftedDate2 = new Date();\n\n        var _clubs2 = $('.clubs-category')[2].options;\n        var _clubList2 = [];\n\n        for (var _i6 = 0; _i6 < _clubs2.length; _i6++) {\n            var _opt6 = _clubs2[_i6];\n\n            if (_opt6.selected) {\n                _clubList2.push(_opt6.value);\n            }\n        } //meta\n\n\n        var priority = Session.get('priority');\n\n        if (!_imgId) {\n            alertError('Post Incomplete!', \"You haven't uploaded an image yet!\");\n        }\n\n        if (!_headline2) {\n            //TODO\n            alertError('Post Incomplete!', \"You haven't added a headline!\");\n        }\n\n        if (!_startDate2 || !_endDate2) {\n            alertError('Post Incomplete!', \"You haven't added a date!\");\n        }\n\n        if (!_content) {\n            //TODO\n            alertError('Post Incomplete!', \"You haven't added any information!\");\n        }\n\n        return {\n            author: _authorId2,\n            type: 'announcement',\n            subType: 'imageText',\n            headline: _headline2,\n            content: _content,\n            startDate: _startDate2,\n            endDate: _endDate2,\n            draftedDate: _draftedDate2,\n            tags: _tags2 || [],\n            categories: _categories2 || [],\n            imgId: _imgId,\n            clubs: _clubList2,\n            meta: {\n                priority: priority || 'image',\n                hasUnsplash: hasUnsplash,\n                visibility: _visibility2\n            }\n        };\n    }\n}\n\nfunction getKeyWord(text) {\n    var keyword_extractor = require(\"keyword-extractor\");\n\n    var keywords = $(text).text(); //  Extract the keywords\n\n    var extraction_result = keyword_extractor.extract(keywords, {\n        language: \"english\",\n        remove_digits: true,\n        return_changed_case: true,\n        remove_duplicates: false,\n        remove_max_ngrams: 10\n    });\n    return extraction_result;\n}","map":{"version":3,"sources":["imports/ui/components/editor.js"],"names":["Images","module","watch","require","v","operationStack","hasUnsplash","originalTitle","allPosts","Template","onRendered","Tracker","autorun","Meteor","subscribeWithPagination","subscribe","blogDraft","blogEditor","categorySub","courseSub","clubSub","ready","categories","BlogCategories","find","observeChanges","added","id","fields","newCat","Option","name","$","append","courses","Courses","clubs","Clubs","code","document","select2","placeholder","allowClear","datepicker","startDate","$editor","froalaEditor","scaytAutoload","scaytOptions","enableOnTouchDevices","localization","extraModules","DefaultSelection","spellcheckLang","contextMenuSections","serviceProtocol","servicePort","serviceHost","servicePath","contextMenuForMisspelledOnly","scriptPath","toolbarButtons","toolbarButtonsSM","placeholderText","tableStyles","class1","paragraphFormat","N","H2","PRE","fileAllowedTypes","on","e","editor","images","self","insert","err","fileObj","c","findOne","_id","url","imgList","length","remove","link","isClient","Dropzone","autoDiscover","tagsinput","blogDrop","initDropZone","number","size","message","announcementEditor","Categories","arrayOfImageIds","announcementDrop","announcementImageTwo","suggestionEditor","suggestionDrop","announcementOptions","helpers","Roles","userIsInRole","userId","Drafts","moment","draftedDate","format","unsplash","urls","full","imgId","type","Posts","meta","screeningStage","text","events","Session","get","set","swapElements","push","css","overflow","pop","evt","maxlength","target","attr","val","console","log","priority","removeClass","addClass","preventDefault","loadNextPage","hasClass","obj","closest","setEditorContent","alertConfirm","accepted","alertError","alertSuccess","event","template","json","constructBlogJson","call","wipeEditor","update","html","list","getKeyWord","agent","getImg","data","results","replaceWith","regular","user","links","location","num","getRandomInt","imageID","previewPost","title","subtitle","content","tags","setPersistent","window","open","constructAnnouncementJson","subType","headline","value","authorId","Date","author","info","maxFiles","maxFilesize","thumbnailWidth","addRemoveLinks","dictDefaultMessage","accept","file","done","FSFile","FS","File","extension","a","b","fadeOut","fadeIn","min","max","Math","floor","random","_","forEach","item","visibility","trigger","organizationsValues","releaseDate","endDate","str","separators","split","RegExp","join","options","i","opt","selected","orgOptions","getElementById","orgNames","orgVal","imageFirst","organizationsNames","clubList","keyword_extractor","keywords","extraction_result","extract","language","remove_digits","return_changed_case","remove_duplicates","remove_max_ngrams"],"mappings":"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","file":"imports/ui/components/editor.js.map","sourcesContent":["/**\r\n * Created by Yonglin Wang on 8/4/2017.\r\n */\r\nimport {Images} from '../../api/images/images.js';\r\n\r\nimport './editor.html';\r\nlet operationStack = ['.editor-open'];\r\nlet hasUnsplash = false;\r\nlet originalTitle = \"\";\r\nlet allPosts = null;\r\nTemplate.allPosts.onRendered(function () {\r\n    Tracker.autorun(function () {\r\n        allPosts = Meteor.subscribeWithPagination('postsByUser', 10);\r\n        Meteor.subscribe('images')\r\n    })\r\n});\r\n\r\nTemplate.blogDraft.onRendered(function () {\r\n    Tracker.autorun(function () {\r\n        Meteor.subscribeWithPagination('drafts', 10);\r\n        Meteor.subscribe('images')\r\n    })\r\n});\r\n\r\nTemplate.blogEditor.onRendered(function () {\r\n    Tracker.autorun(function () {\r\n        let categorySub = Meteor.subscribe('blogCategories');\r\n        let courseSub = Meteor.subscribe('allCourses',1000);\r\n        let clubSub = Meteor.subscribe('allClubs',1000);\r\n        if(categorySub.ready()){\r\n            let categories = BlogCategories.find({});\r\n            categories.observeChanges({\r\n                added: function(id, fields) {\r\n                    let newCat = new Option(fields.name, fields.name);\r\n                    $('#blogCategorySelect').append(newCat);\r\n                }\r\n            });\r\n        }\r\n        if(courseSub.ready() && clubSub.ready()){\r\n            let courses = Courses.find({});\r\n            let clubs = Clubs.find({});\r\n            courses.observeChanges({\r\n                added: function (id, fields) {\r\n                    let newCat = new Option(fields.name + \" - \" + fields.code, fields.code);\r\n                    $('#blogOrganizationSelect').append(newCat)\r\n                }\r\n            });\r\n            clubs.observeChanges({\r\n                added: function (id, fields) {\r\n                    let newCat = new Option(fields.name, fields.code);\r\n                    $('#blogOrganizationSelect').append(newCat)\r\n                }\r\n            })\r\n        }\r\n    });\r\n    $(document).ready(function () {\r\n        $('#blogCategorySelect').select2({\r\n            placeholder: \"Click to select matching categories\",\r\n            allowClear: true\r\n        });\r\n        $('#blogOrganizationSelect').select2({\r\n            placeholder: \"Click to select matching categories\",\r\n            allowClear: true\r\n        });\r\n        // Append it to the select\r\n        $('.visibility-select').select2({\r\n            placeholder: \"Click to select the scope of this post\",\r\n        });\r\n        $('.input-date').datepicker({\r\n            startDate: '+1d'\r\n        });\r\n        let $editor = $('.editable');\r\n        $editor.froalaEditor({\r\n            scaytAutoload: false,\r\n            //This setting can be completely ignored.\r\n            scaytOptions: {\r\n                enableOnTouchDevices: false,\r\n                localization: 'en',\r\n                extraModules: 'ui',\r\n                DefaultSelection: 'American English',\r\n                spellcheckLang: 'en_US',\r\n                contextMenuSections: 'suggest|moresuggest',\r\n                serviceProtocol: 'https',\r\n                servicePort: '80',\r\n                serviceHost: 'svc.webspellchecker.net',\r\n                servicePath: 'spellcheck/script/ssrv.cgi',\r\n                contextMenuForMisspelledOnly: true,\r\n                scriptPath: 'https://demo.webspellchecker.net/froala/customscayt.js'\r\n            },\r\n            //ignore end\r\n            toolbarButtons: ['fullscreen', '|', 'paragraphFormat', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', '|', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertFile', 'insertVideo', 'insertTable', '|', 'emoticons', 'specialCharacters', 'insertHR', '|', 'print', 'help', '|', 'undo', 'redo'],\r\n            toolbarButtonsSM: ['fullscreen', '|', 'bold', 'italic', 'underline', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertFile', 'insertVideo', 'insertTable', '|', 'specialCharacters', 'insertHR', 'selectAll', 'clearFormatting', '|', 'print', 'help', '|', 'undo', 'redo'],\r\n            placeholderText: 'Tell your story here...',\r\n            tableStyles: {\r\n                class1: 'table',\r\n            },\r\n            paragraphFormat: {\r\n                N: 'Normal',\r\n                H2: 'Title',\r\n                PRE: 'Code'\r\n            },\r\n            fileAllowedTypes: ['application/pdf', 'application/msword']\r\n        });\r\n        $editor.on('froalaEditor.image.beforeUpload', function (e, editor, images) {\r\n            let self = $(this);\r\n\r\n            Images.insert(images[0], function (err, fileObj) {\r\n                //console.log(\"editor \",  editor);\r\n                //console.log(\"after insert:\", fileObj._id);\r\n                Tracker.autorun(function (c) {\r\n                    fileObj = Images.findOne(fileObj._id);\r\n                    let url = fileObj.url();\r\n                    if (url) {\r\n                        let imgList = $('img.fr-fic');\r\n                        self.froalaEditor('image.insert', url, true);\r\n                        imgList[imgList.length - 1].remove();\r\n                        return {\r\n                            link: url\r\n                        };\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        if (Meteor.isClient) {\r\n            Dropzone.autoDiscover = false;\r\n            $(\".tags\").tagsinput('items');\r\n            let blogDrop = initDropZone('dropzone', {\r\n                number: 1,\r\n                size: 8,\r\n                message: \"Drop an image here to be the featured image, or click to select an image using the browser.\",\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\nTemplate.announcementEditor.onRendered(function () {\r\n    Tracker.autorun(function () {\r\n        let categorySub = Meteor.subscribe('categories');\r\n        let clubSub = Meteor.subscribe('allClubs',100);\r\n        if(categorySub.ready()){\r\n            let categories = Categories.find({});\r\n            categories.observeChanges({\r\n                added: function(id, fields) {\r\n                    let newCat = new Option(fields.name, fields.name);\r\n                    $('.announcement-category').append(newCat);\r\n                }\r\n            });\r\n        }\r\n        if(clubSub.ready()){\r\n            let clubs = Clubs.find({});\r\n            clubs.observeChanges({\r\n                added: function(id, fields) {\r\n                    let newCat = new Option(fields.name, fields.name);\r\n                    $('.clubs-category').append(newCat);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    $(document).ready(function () {\r\n        $('.category-select').select2({\r\n            placeholder: \"Click to select matching categories\",\r\n            allowClear: true\r\n        });\r\n        $('.input-daterange').datepicker({\r\n            startDate: '+1d'\r\n        });\r\n        if (Meteor.isClient) {\r\n            let arrayOfImageIds = [];\r\n            Dropzone.autoDiscover = false;\r\n            $(\".tags\").tagsinput('items');\r\n            let announcementDrop = initDropZone(\"announcementImage\", {\r\n                number: 1,\r\n                size: 8,\r\n                message: \"Drop your poster here, or click to select an image using the browser.\",\r\n            });\r\n            let announcementImageTwo = initDropZone(\"announcementImageTwo\", {\r\n                number: 1,\r\n                size: 8,\r\n                message: \"Drop your poster here, or click to select an image using the browser.\"\r\n            });\r\n        }\r\n\r\n    });\r\n});\r\n\r\nTemplate.suggestionEditor.onRendered(function () {\r\n    let suggestionDrop = initDropZone('suggestionImage', {\r\n        number: 1,\r\n        size: 8\r\n    });\r\n});\r\n\r\nTemplate.announcementOptions.onRendered(function () {\r\n    this.$(\".announce-tags\").tagsinput('items');\r\n});\r\n\r\nTemplate.editor.helpers({\r\n    'canEdit': function () {\r\n        return Roles.userIsInRole(Meteor.userId(),['teacher','blogEditor','announcementEditor','admin']);\r\n    },\r\n    'canWriteAnnounce': function () {\r\n        return Roles.userIsInRole(Meteor.userId(),['teacher','admin','announcementEditor'])\r\n    },\r\n    'canWriteBlog': function () {\r\n        return Roles.userIsInRole(Meteor.userId(),['teacher','admin','blogEditor'])\r\n    }\r\n});\r\n\r\nTemplate.blogDraft.helpers({\r\n    'drafts': function () {\r\n        return Drafts.find({})\r\n    },\r\n    'draftedDate': function () {\r\n        return moment(this.draftedDate).format('MMMM Do YYYY')\r\n    },\r\n    'imageLink': function () {\r\n        if(this.unsplash){\r\n            return this.unsplash.urls.full;\r\n        }else{\r\n            try{\r\n                return Images.findOne({_id: this.imgId}).url();\r\n            }catch(e){\r\n                //console.log('error getting photo')\r\n            }\r\n        }\r\n    },\r\n    'isBlog': function () {\r\n        return this.type === 'blog'\r\n    }\r\n});\r\n\r\nTemplate.allPosts.helpers({\r\n    'post': function () {\r\n        return Posts.find({\r\n            'author': Meteor.userId()\r\n        });\r\n    },\r\n    'draftedDate': function () {\r\n        return moment(this.draftedDate).format('MMMM Do YYYY')\r\n    },\r\n    'imageLink': function () {\r\n        if(this.unsplash){\r\n            return this.unsplash.urls.full;\r\n        }else{\r\n            try{\r\n                return Images.findOne({_id: this.imgId}).url();\r\n            }catch(e){\r\n                //console.log('error getting photo')\r\n            }\r\n        }\r\n    },\r\n    'isBlog': function () {\r\n        return this.type === 'blog'\r\n    },\r\n    'stage': function () {\r\n        return this.meta.screeningStage;\r\n    },\r\n    'stageCaption': function () {\r\n        let text = 'Post Submitted';\r\n        if(this.meta.screeningStage === 3){\r\n            text = \"Post Approved\"\r\n        }else if(this.meta.screeningStage === -1){\r\n            text = \"Post Rejected\"\r\n        }\r\n        return text;\r\n    }\r\n});\r\n\r\n\r\n/* Events */\r\nTemplate.editor.events({\r\n    'click #openEditor': function () {\r\n        originalTitle = Session.get('DocumentTitle');\r\n        Session.set('DocumentTitle', 'Composer | uhs.life');\r\n\r\n        swapElements('.editor-open', '.editor-main');\r\n        if (operationStack.length === 1) {\r\n            operationStack.push('.blog-intro');\r\n        }\r\n        $('html, body').css({\r\n            overflow: 'hidden'\r\n        }); // Disables the Scrolling\r\n    },\r\n    'click #startNewDraft': function () {\r\n        swapElements('.blog-intro', '.post-type');\r\n        operationStack.push('.post-type');\r\n    },\r\n    'click #checkDrafts': function () {\r\n        swapElements('.blog-intro', '.blog-drafts');\r\n        operationStack.push('.blog-drafts');\r\n    },\r\n    'click #checkAll': function () {\r\n        swapElements('.blog-intro', '.all-posts');\r\n        operationStack.push('.all-posts');\r\n    },\r\n    'click #startBlog': function () {\r\n        swapElements('.post-type', '.blog-editor');\r\n        operationStack.push('.blog-editor');\r\n        Session.set('announcementType', 'blog');\r\n    },\r\n    'click #startAnnouncement': function () {\r\n        swapElements('.post-type', '.announcement-menu');\r\n        operationStack.push('.announcement-menu');\r\n    },\r\n    'click #startSuggestion': function () {\r\n        swapElements('.post-type', '.suggestions');\r\n        operationStack.push('.suggestions');\r\n        Session.set('announcementType', 'suggestion');\r\n    },\r\n    'click .editor-close': function () {\r\n        Session.set('DocumentTitle', originalTitle);\r\n        swapElements('.editor-main', '.editor-open');\r\n        $('html, body').css({\r\n            overflow: 'visible'\r\n        }); // Disables the Scrolling\r\n    },\r\n    'click .editor-back': function () {\r\n        if (operationStack.length - 2 === 0) {\r\n            Session.set('DocumentTitle', originalTitle);\r\n            swapElements('.editor-main', '.editor-open');\r\n            $('html, body').css({\r\n                overflow: 'visible'\r\n            }); // Enables the Scrolling\r\n        } else {\r\n            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n        }\r\n        operationStack.pop();\r\n    },\r\n    'click #imageOnly': function () {\r\n        swapElements('.announcement-menu', '.image-only');\r\n        operationStack.push('.image-only');\r\n        Session.set('announcementType', 'imageOnly');\r\n    },\r\n    'click #textOnly': function () {\r\n        swapElements('.announcement-menu', '.text-only');\r\n        operationStack.push('.text-only');\r\n        Session.set('announcementType', 'textOnly');\r\n    },\r\n    'click #textAndImage': function () {\r\n        swapElements('.announcement-menu', '.text-and-image');\r\n        operationStack.push('.text-and-image');\r\n        Session.set('announcementType', 'textAndImage');\r\n    },\r\n    'input .announcement-text': function (evt) {\r\n        let maxlength = $(evt.target).attr(\"maxlength\");\r\n        let length = $(evt.target).val().length;\r\n\r\n        if (length >= maxlength) {\r\n            console.log(\"You have reached the maximum number of characters.\");\r\n            $('.announcement-counter').text(0);\r\n        } else {\r\n            $('.announcement-counter').text(maxlength - length);\r\n        }\r\n    },\r\n    'click .priority-toggle': function (evt) {\r\n        let priority = $(evt.target).attr('data-priority');\r\n        $('.is-checked').removeClass('is-checked');\r\n        $(evt.target).addClass('is-checked');\r\n        Session.set('priority', priority);\r\n    }\r\n});\r\nTemplate.allPosts.events({\r\n    'click .load-more-posts': function (evt) {\r\n        evt.preventDefault();\r\n        allPosts.loadNextPage();\r\n    },\r\n    'click .draft-item': function (evt) {\r\n        if(!$(evt.target).hasClass('btn-delete-post') && !$(evt.target).hasClass('btn-republish-post')){\r\n            let obj = $(evt.target).closest($('.draft-item'));\r\n            let id = obj.attr('id');\r\n            setEditorContent(Posts.findOne({_id: id}));\r\n        }\r\n    },\r\n    'click .btn-delete-post': function (evt) {\r\n        evt.preventDefault();\r\n        let obj = $(evt.target).closest($('.draft-item'));\r\n        let id = obj.attr('id');\r\n        alertConfirm('Are you sure','This action cannot be reverted, if you don\\'t want this post to show up in the list, we recommend you archive it.', function (accepted) {\r\n            if(accepted){\r\n                Posts.remove({_id: id}, function (err) {\r\n                    if(err){\r\n                        alertError(\"Error Removing Post\", \"Please try again later.\\n\"+ err.message)\r\n                    }else{\r\n                        alertSuccess(\"Successfully Removed Post\", \"\")\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n});\r\nTemplate.blogEditor.events({\r\n    'click .publish': function (event, template) {\r\n        let json = constructBlogJson();\r\n\r\n        Meteor.call('posts.postBlog', json, function (err) {\r\n            if (err) {\r\n                alertError('Post Failed!', err.message);\r\n            } else {\r\n                alertSuccess('Success!', 'The post has been submitted.');\r\n                Drafts.remove({_id: Session.get('draftEditItem')});\r\n                Session.set('draftEditItem', null);\r\n                wipeEditor('blog');\r\n                // Go back\r\n                if (operationStack.length - 2 === 0) {\r\n                    swapElements('.editor-main', '.editor-open');\r\n                    $('html, body').css({\r\n                        overflow: 'visible'\r\n                    }); // Enables the Scrolling\r\n                } else {\r\n                    swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                }\r\n                operationStack.pop();\r\n            }\r\n        });\r\n    },\r\n    'click .save-draft' : function() {\r\n        let json = constructBlogJson();\r\n        if(Session.get('draftEditItem')){\r\n            Drafts.update({_id: Session.get('draftEditItem')}, json, function (err) {\r\n                if(err){\r\n                    alertError('Saving Draft Failed!', err.message);\r\n                }else{\r\n                    alertSuccess(\"Saved!\",\"\")\r\n                }\r\n            });\r\n        }else{\r\n            Meteor.call('drafts.postDraftBlog', json, function (err) {\r\n                if (err) {\r\n                    alertError('Saving Draft Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The draft has been saved.');\r\n                }\r\n            });\r\n        }\r\n    },\r\n    'click #getFeaturedUnsplash': function (evt, template) {\r\n        $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\r\n        Meteor.call('setupUnsplash', function (err) {\r\n            if (err) {\r\n                console.log(err);\r\n                hasUnsplash = false;\r\n            } else {\r\n                let list = getKeyWord($('.editable').froalaEditor('html.get'));\r\n                let agent = 0;\r\n                let getImg = function(){\r\n                    Meteor.call('searchKeyword', list[agent], function (err, data) {\r\n                        if (err) {\r\n                            console.log(err);\r\n                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\r\n                            hasUnsplash = false;\r\n                        } else {\r\n                            console.log(data);\r\n                            if(data.results.length <= 0){\r\n                                agent++;\r\n                                if(agent <= list.length){\r\n                                    console.log('no image found');\r\n                                    getImg();\r\n                                }else{\r\n                                    $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\r\n                                    Meteor.call('getRandomPhoto', function (err, data) {\r\n                                        if (err) {\r\n                                            console.log(err);\r\n                                            $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\r\n                                            let blogDrop = initDropZone('dropzone', {\r\n                                                number: 1,\r\n                                                size: 8,\r\n                                                message: \"Drop an image here to be the featured image, or click to select an image using the browser.\",\r\n                                            });\r\n                                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one instead.\");\r\n                                            hasUnsplash = false;\r\n                                        } else {\r\n                                            console.log(data);\r\n                                            Session.set('unsplash_img', data.id);\r\n                                            Session.set('unsplashData',data);\r\n                                            $('#dropzone').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\r\n                                            $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\"+ data.user.links.html +\"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\"+ data.user.name +\"</a> from \"+ data.user.location +\" via <b>Unsplash</b>. <br><br> Want a differnt one? <a href='' id='newUnsplash'>Click Here</a>. Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }else{\r\n                                let num = getRandomInt(0, data.results.length-1);\r\n                                Session.set('unsplash_img', data.results[num].id);\r\n                                Session.set('unsplashData',data.results[num]);\r\n                                hasUnsplash = true;\r\n                                $('#dropzone').replaceWith(\"<img src='\" + data.results[num].urls.regular + \"' class='img-responsive unsplash-container'/>\");\r\n                                $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\"+ data.results[num].user.links.html +\"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\"+ data.results[num].user.name +\"</a> from \"+ data.results[num].user.location +\" via <b>Unsplash</b>. <br><br> This will be your featured image, if you want another one <a href='' id='newUnsplash'>Click Here</a> Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                };\r\n                getImg();\r\n            }\r\n        })\r\n    },\r\n    'click #newUnsplash': function () {\r\n        $('#unsplashPrompt').html(\"<i class='fa fa-spinner fa-pulse fa-fw'></i> Please Wait...\");\r\n        Meteor.call('getRandomPhoto', function (err, data) {\r\n            if (err) {\r\n                console.log(err);\r\n                $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\r\n                let blogDrop = initDropZone('dropzone', {\r\n                    number: 1,\r\n                    size: 8,\r\n                    message: \"Drop an image here to be the featured image, or click to select an image using the browser.\",\r\n                });\r\n                $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one instead.\");\r\n                hasUnsplash = false;\r\n            } else {\r\n                console.log(data);\r\n                Session.set('unsplash_img', data.id);\r\n                Session.set('unsplashData',data);\r\n                $('.unsplash-container').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\r\n                $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\"+ data.user.links.html +\"?utm_source=uhs.life&utm_medium=referral&utm_campaign=api-credit'>\"+ data.user.name +\"</a> from \"+ data.user.location +\" via <b>Unsplash</b>. <br><br> Want a differnt one? <a href='' id='newUnsplash'>Click Here</a>. Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\r\n            }\r\n        })\r\n    },\r\n    'click #newUpload': function () {\r\n        $('.unsplash-container').replaceWith(\"<form action='/file-upload' class='dropzone' id='dropzone'></form>\");\r\n        let blogDrop = initDropZone('dropzone', {\r\n            number: 1,\r\n            size: 8,\r\n            message: \"Drop an image here to be the featured image, or click to select an image using the browser.\",\r\n        });\r\n        $('#unsplashPrompt').html(\"Want to avoid the hassle? <a href='' id='getFeaturedUnsplash'>Click here</a> and we will find an image for you!\");\r\n    },\r\n    'click .btn-preview': function () {\r\n        let imageID = (hasUnsplash) ? Session.get('unsplash_img') : Session.get('newImageId');\r\n        let previewPost = {\r\n            title: $('#blogTitle').val() + \" (This is a preview)\",\r\n            subtitle: $('#blogSubTitle').val(),\r\n            content: $('.editable').froalaEditor('html.get'),\r\n            tags: $(\".tags\").val(),\r\n            unsplash: Session.get('unsplashData'),\r\n            imgId: imageID,\r\n            meta: {\r\n                hasUnsplash: hasUnsplash,\r\n            }\r\n        };\r\n        Session.setPersistent('preview_json', previewPost);\r\n        $('html, body').css({\r\n            overflow: 'visible'\r\n        }); // Enables the Scrolling\r\n        window.open('/blog/preview', '_blank');\r\n    }\r\n});\r\nTemplate.announcementOptions.events({\r\n    'click .btn-post': function (event, template) {\r\n        let type = Session.get('announcementType');\r\n        let json = constructAnnouncementJson(type);\r\n        if (type === \"imageOnly\") {\r\n            Meteor.call('posts.postImage', json, function (err) {\r\n                if (err) {\r\n                    alertError('Posting Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: Session.get('draftEditItem')});\r\n                    Session.set('draftEditItem', null);\r\n                    wipeEditor('announcement','imageOnly');\r\n                    if (operationStack.length - 2 === 0) {\r\n                        swapElements('.editor-main', '.editor-open');\r\n                        $('html, body').css({\r\n                            overflow: 'visible'\r\n                        }); // Enables the Scrolling\r\n                    } else {\r\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                    }\r\n                    operationStack.pop();\r\n                }\r\n            });\r\n\r\n        } else if (type === \"textOnly\") {\r\n            Meteor.call('posts.postText', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: Session.get('draftEditItem')});\r\n                    Session.set('draftEditItem', null);\r\n                    wipeEditor('announcement','textOnly');\r\n                    if (operationStack.length - 2 === 0) {\r\n                        swapElements('.editor-main', '.editor-open');\r\n                        $('html, body').css({\r\n                            overflow: 'visible'\r\n                        }); // Enables the Scrolling\r\n                    } else {\r\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                    }\r\n                    operationStack.pop();\r\n                }\r\n            });\r\n        } else if (type === 'textAndImage') {\r\n            Meteor.call('posts.postTextImage', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: Session.get('draftEditItem')});\r\n                    Session.set('draftEditItem', null);\r\n                    wipeEditor('announcement','imageText');\r\n                    if (operationStack.length - 2 === 0) {\r\n                        swapElements('.editor-main', '.editor-open');\r\n                        $('html, body').css({\r\n                            overflow: 'visible'\r\n                        }); // Enables the Scrolling\r\n                    } else {\r\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                    }\r\n                    operationStack.pop();\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n    'click .btn-save': function() {\r\n        let type = Session.get('announcementType');\r\n        let json = constructAnnouncementJson(type);\r\n\r\n        if(Session.get('draftEditItem')){\r\n            Drafts.update({_id: Session.get('draftEditItem')}, json, function (err) {\r\n                if(err){\r\n                    alertError('Saving Draft Failed!', err.message);\r\n                }else{\r\n                    alertSuccess(\"Saved!\",\"\");\r\n                    if (operationStack.length - 2 === 0) {\r\n                        swapElements('.editor-main', '.editor-open');\r\n                        $('html, body').css({\r\n                            overflow: 'visible'\r\n                        }); // Enables the Scrolling\r\n                    } else {\r\n                        swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                    }\r\n                    operationStack.pop();\r\n                }\r\n            });\r\n        }else{\r\n            if (type === \"imageOnly\") {\r\n\r\n                Meteor.call('drafts.postDraftImage', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Saving Draft Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The draft has been saved.');\r\n                        wipeEditor('announcement','imageOnly');\r\n                        if (operationStack.length - 2 === 0) {\r\n                            swapElements('.editor-main', '.editor-open');\r\n                            $('html, body').css({\r\n                                overflow: 'visible'\r\n                            }); // Enables the Scrolling\r\n                        } else {\r\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                        }\r\n                        operationStack.pop();\r\n                    }\r\n                });\r\n\r\n            } else if (type === \"textOnly\") {\r\n\r\n                Meteor.call('drafts.postDraftText', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Saving Draft Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The draft has been saved.');\r\n                        wipeEditor('announcement','textOnly');\r\n                        if (operationStack.length - 2 === 0) {\r\n                            swapElements('.editor-main', '.editor-open');\r\n                            $('html, body').css({\r\n                                overflow: 'visible'\r\n                            }); // Enables the Scrolling\r\n                        } else {\r\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                        }\r\n                        operationStack.pop();\r\n                    }\r\n                });\r\n            } else if (type === 'textAndImage') {\r\n                Meteor.call('drafts.postDraftTextImage', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Saving Draft Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The draft has been saved.');\r\n                        wipeEditor('announcement','imageText');\r\n                        if (operationStack.length - 2 === 0) {\r\n                            swapElements('.editor-main', '.editor-open');\r\n                            $('html, body').css({\r\n                                overflow: 'visible'\r\n                            }); // Enables the Scrolling\r\n                        } else {\r\n                            swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                        }\r\n                        operationStack.pop();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n});\r\nTemplate.blogDraft.events({\r\n    'click .btn-delete-draft': function (evt) {\r\n        evt.preventDefault();\r\n        let obj = $(evt.target).closest($('.draft-item'));\r\n        let id = obj.attr('id');\r\n        Meteor.call('drafts.remove', id, function (err) {\r\n            if(err){\r\n                alertError(\"Something went wrong when deleting the draft\", err.message);\r\n            }\r\n        })\r\n    },\r\n    'click .btn-post-draft': function (evt) {\r\n        evt.preventDefault();\r\n        let obj = $(evt.target).closest($('.draft-item'));\r\n        let id = obj.attr('id');\r\n        const json = Drafts.findOne({_id: id});\r\n        let type = json.type;\r\n        if (type === \"imageOnly\") {\r\n            Meteor.call('posts.postImage', json, function (err) {\r\n                if (err) {\r\n                    alertError('Posting Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: id});\r\n                }\r\n            });\r\n\r\n        } else if (type === \"textOnly\") {\r\n            Meteor.call('posts.postText', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: id});\r\n                }\r\n            });\r\n        } else if (type === 'textAndImage') {\r\n            Meteor.call('posts.postTextImage', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: id});\r\n                }\r\n            });\r\n        } else if (type === 'blog'){\r\n            Meteor.call('posts.postBlog', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: id});\r\n                }\r\n            });\r\n        }\r\n    },\r\n    'click .btn-publish-draft': function (evt) {\r\n        let obj = $(evt.target).closest($('.draft-item'));\r\n        let id = obj.attr('id');\r\n        let json = Drafts.findOne({_id: id});\r\n        let type = json.subType;\r\n        if(json.type === 'blog'){\r\n            Meteor.call('posts.postBlog', json, function (err) {\r\n                if (err) {\r\n                    alertError('Post Failed!', err.message);\r\n                } else {\r\n                    alertSuccess('Success!', 'The post has been submitted.');\r\n                    Drafts.remove({_id: id});\r\n                }\r\n            })\r\n        }else{\r\n            if (type === \"imageOnly\") {\r\n                Meteor.call('posts.postImage', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Posting Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The post has been submitted.');\r\n                        Drafts.remove({_id: id});\r\n                    }\r\n                });\r\n\r\n            } else if (type === \"textOnly\") {\r\n                Meteor.call('posts.postText', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Post Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The post has been submitted.');\r\n                        Drafts.remove({_id: id});\r\n                    }\r\n                });\r\n            } else if (type === 'textAndImage') {\r\n                Meteor.call('posts.postTextImage', json, function (err) {\r\n                    if (err) {\r\n                        alertError('Post Failed!', err.message);\r\n                    } else {\r\n                        alertSuccess('Success!', 'The post has been submitted.');\r\n                        Drafts.remove({_id: id});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    },\r\n    'click .draft-item': function (evt) {\r\n        if(!$(evt.target).hasClass('btn-delete-draft') && !$(evt.target).hasClass('btn-publish-draft')){\r\n            let obj = $(evt.target).closest($('.draft-item'));\r\n            let id = obj.attr('id');\r\n            Session.set('draftEditItem', id);\r\n            setEditorContent(Drafts.findOne({_id: id}));\r\n            console.log(Session.get('draftEditItem'));\r\n        }\r\n    }\r\n});\r\nTemplate.suggestionEditor.events({\r\n    'click .btn-post': function () {\r\n        let headline = $('#suggestionHeadline').val();\r\n        let content = $('.announcement-text')[2].value;\r\n        let imgId = Session.get('newImageId');\r\n\r\n        let authorId = Meteor.userId();\r\n        let draftedDate = new Date();\r\n\r\n        if (!imgId) {\r\n            //TODO\r\n            console.log('No image uploaded');\r\n        }\r\n        if (!headline) {\r\n            //TODO\r\n            console.log('No headline entered');\r\n        }\r\n        if (!content) {\r\n            //TODO\r\n            console.log('No content entered')\r\n        }\r\n\r\n        let json = {\r\n            author: authorId,\r\n            type: 'suggestion',\r\n            headline: headline,\r\n            content: content,\r\n            draftedDate: draftedDate,\r\n            imgId: imgId\r\n        };\r\n        console.log(json);\r\n\r\n        Meteor.call('suggestions.postSuggestion', json, function (err) {\r\n            console.log('posted');\r\n            if (err) {\r\n                alertError('Post Failed!', err.message);\r\n            } else {\r\n                alertSuccess('Success!', 'The post has been submitted.');\r\n                if (operationStack.length - 2 === 0) {\r\n                    swapElements('.editor-main', '.editor-open');\r\n                    $('html, body').css({\r\n                        overflow: 'visible'\r\n                    }); // Enables the Scrolling\r\n                } else {\r\n                    swapElements(operationStack[operationStack.length - 1], operationStack[operationStack.length - 2]);\r\n                }\r\n                operationStack.pop();\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nfunction initDropZone(id, info) {\r\n    return new Dropzone(\"form#\" + id, {\r\n        maxFiles: info.number || 1,\r\n        maxFilesize: info.size || 8,\r\n        thumbnailWidth: 400,\r\n        addRemoveLinks: true,\r\n        dictDefaultMessage: info.message || \"Drop your image here, or click to select an image using the browser.\",\r\n        accept: function (file, done) {\r\n            $('.quick-image-prompt').html('');\r\n            let FSFile = new FS.File(file);\r\n            Images.insert(FSFile, function (err, fileObj) {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    Images.remove({_id: Session.get('newImageId')}, function (err) {\r\n                        if (err) {\r\n                            console.log(\"error removing image:\\n\" + err);\r\n                        }\r\n                    });\r\n                    hasUnsplash = false;\r\n                    Session.set('newFileLink', fileObj.extension());   //update the file type\r\n                    Session.set('newImageId', fileObj._id); //update the image id to current image\r\n                    done();\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction swapElements(a, b) {\r\n    $(a).fadeOut('fast', function () {\r\n        $(b).fadeIn(\"slow\");\r\n    });\r\n}\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction setEditorContent(json) {\r\n    if(json.type === 'blog'){\r\n        $('#blogTitle').val(json.title);\r\n        $('#blogSubTitle').val(json.subtitle);\r\n        $('.editable').froalaEditor('html.set', json.content);\r\n        _.forEach(json.tags,function (item) {\r\n            $('.tags').tagsinput('add', item);\r\n        });\r\n        $('.visibility-select').val(json.meta.visibility).trigger(\"change\");\r\n        $(\".category-select\").val(json.categories).trigger(\"change\");\r\n        $(\"#blogOrganizationSelect\").val(json.organizationsValues).trigger(\"change\");\r\n        $('.input-date').datepicker('update', json.releaseDate);\r\n        if(json.unsplash){\r\n            Meteor.call('setupUnsplash', function (err) {\r\n                if (err) {\r\n                    console.log(err);\r\n                    $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\r\n                } else {\r\n                    Meteor.call('getPhoto', json.imgId, function (err, data) {\r\n                        if (err) {\r\n                            console.log(err);\r\n                            $('#unsplashPrompt').html(\"Sorry... We failed to find an image for you. Please upload one.\");\r\n                        } else {\r\n                            Session.set('unsplash_img', data.id);\r\n                            Session.set('unsplashData',data);\r\n                            hasUnsplash = true;\r\n                            $('#dropzone').replaceWith(\"<img src='\" + data.urls.regular + \"' class='img-responsive unsplash-container'/>\");\r\n                            $('#unsplashPrompt').html(\"Here you go! This image is by <a href='\"+ data.user.links.html +\"'>\"+ data.user.name +\"</a> from \"+ data.user.location +\" via <b>Unsplash</b>. <br><br> This will be your featured image, if you want another one <a href='' id='newUnsplash'>Click Here</a> Changed your mind? click here to <a href='' id='newUpload'>upload a new image</a>\");\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        swapElements('.blog-drafts', '.blog-editor');\r\n        operationStack.push('.blog-editor');\r\n        Session.set('announcementType', 'blog');\r\n    }else if(json.type === 'announcement'){\r\n        if(json.subType === 'imageOnly'){\r\n            $('#imageOnlyHeadline').val(json.headline);\r\n            if(json.imgId){\r\n                Session.set('newImageId', json.imgId);\r\n                $('.quick-image-prompt').html('You have already uploaded an image, if you would like to change it, simply add a different one. Otherwise, simply ignore the box.')\r\n            }\r\n            _.forEach(json.tags,function (item) {\r\n                $('.announce-tags:eq(0)').tagsinput('add', item);\r\n            });\r\n            $(\".announcement-category:eq(0)\").val(json.categories).trigger(\"change\");\r\n            $(\".clubs-category:eq(0)\").val(json.clubs).trigger(\"change\");\r\n            $('.startDate:eq(0)').datepicker('update',json.startDate);\r\n            $('.endDate:eq(0)').datepicker('update',json.endDate);\r\n            swapElements('.blog-drafts', '.image-only');\r\n            operationStack.push('.image-only');\r\n            Session.set('announcementType', 'imageOnly');\r\n        }else if(json.subType === 'textOnly'){\r\n            $('#textOnlyHeadline').val(json.headline);\r\n            $('.announcement-text:eq(0)').val(json.content);\r\n            _.forEach(json.tags,function (item) {\r\n                $('.announce-tags:eq(1)').tagsinput('add', item);\r\n            });\r\n            $(\".announcement-category:eq(1)\").val(json.categories).trigger(\"change\");\r\n            $(\".clubs-category:eq(1)\").val(json.clubs).trigger(\"change\");\r\n            $('.startDate:eq(1)').datepicker('update',json.startDate);\r\n            $('.endDate:eq(1)').datepicker('update',json.endDate);\r\n            swapElements('.blog-drafts', '.text-only');\r\n            operationStack.push('.text-only');\r\n            Session.set('announcementType', 'textOnly');\r\n        }else if(json.subType === 'imageText'){\r\n            $('#textImageHeadline').val(json.headline);\r\n            if(json.imgId){\r\n                Session.set('newImageId', json.imgId);\r\n                $('.quick-image-prompt').html('You have already uploaded an image, if you would like to change it, simply add a different one. Otherwise, simply ignore the box.')\r\n            }\r\n            $('.announcement-text:eq(1)').val(json.content);\r\n            $(\".announcement-category:eq(2)\").val(json.categories).trigger(\"change\");\r\n            $(\".clubs-category:eq(2)\").val(json.clubs).trigger(\"change\");\r\n            $('.startDate:eq(2)').datepicker('update',json.startDate);\r\n            $('.endDate:eq(2)').datepicker('update',json.endDate);\r\n            Session.set('priority', json.meta.priority);\r\n            $('.is-checked').removeClass('is-checked');\r\n            $(\".priority-toggle[data-priority=\"+ Session.get('priority') +\"]\").addClass('is-checked');\r\n            swapElements('.blog-drafts', '.text-and-image');\r\n            operationStack.push('.text-and-image');\r\n            Session.set('announcementType', 'textAndImage');\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipeEditor(type, subType) {\r\n    if(type === 'blog'){\r\n        $('#blogTitle').val(null);\r\n        $('#blogSubTitle').val(null);\r\n        $('.editable').froalaEditor('html.set', '');\r\n        $('.tags').tagsinput('removeAll');\r\n        $('.visibility-select').val(null).trigger(\"change\");\r\n        $(\".category-select\").val(null).trigger(\"change\");\r\n        $('.input-date').datepicker('update', null);\r\n        Session.set('unsplash_img', null);\r\n        Session.set('unsplashData', null);\r\n        Session.set('newImageId', null);\r\n        let blogDrop = initDropZone('dropzone', {\r\n            number: 1,\r\n            size: 8,\r\n            message: \"Drop an image here to be the featured image, or click to select an image using the browser.\",\r\n        });\r\n        $('#unsplashPrompt').html(\"Want to avoid the hassle? <a href='' id='getFeaturedUnsplash'>Click here</a> and we will find an image for you!\");\r\n    }else if(type === 'announcement'){\r\n        if(subType === 'imageOnly'){\r\n            $('#imageOnlyHeadline').val(null);\r\n            Session.set('newImageId', null);\r\n            $('#announcementImage').replaceWith(\"<form action='/file-upload' class='dropzone' id='announcementImage'></form>\");\r\n            let announcementDrop = initDropZone(\"announcementImage\", {\r\n                number: 1,\r\n                size: 8,\r\n                message: \"Drop your poster here, or click to select an image using the browser.\",\r\n            });\r\n            $('.quick-image-prompt').html(\"\");\r\n            $('.announce-tags:eq(0)').tagsinput('removeAll');\r\n            $(\".announcement-category:eq(0)\").val(null).trigger(\"change\");\r\n            $(\".clubs-category:eq(0)\").val(null).trigger(\"change\");\r\n            $('.startDate:eq(0)').datepicker('update',null);\r\n            $('.endDate:eq(0)').datepicker('update',null);\r\n        }else if(subType === 'textOnly'){\r\n            $('#textOnlyHeadline').val(null);\r\n            $('.announcement-text:eq(0)').val(null);\r\n            $('.announce-tags:eq(1)').tagsinput('removeAll');\r\n            $(\".announcement-category:eq(1)\").val(null).trigger(\"change\");\r\n            $(\".clubs-category:eq(1)\").val(null).trigger(\"change\");\r\n            $('.startDate:eq(1)').datepicker('update',null);\r\n            $('.endDate:eq(1)').datepicker('update',null);\r\n        }else if(subType === 'imageText'){\r\n            $('#textImageHeadline').val(null);\r\n            Session.set('newImageId', null);\r\n            $('#announcementImageTwo').replaceWith(\"<form action='/file-upload' class='dropzone' id='announcementImageTwo'></form>\");\r\n            let announcementDrop = initDropZone(\"announcementImageTwo\", {\r\n                number: 1,\r\n                size: 8,\r\n                message: \"Drop your poster here, or click to select an image using the browser.\",\r\n            });\r\n            $('.quick-image-prompt').html('');\r\n            $('.announcement-text:eq(1)').val(null);\r\n            $('.announce-tags:eq(2)').tagsinput('removeAll');\r\n            $(\".announcement-category:eq(2)\").val(null).trigger(\"change\");\r\n            $(\".clubs-category:eq(2)\").val(null).trigger(\"change\");\r\n            $('.startDate:eq(2)').datepicker('update',null);\r\n            $('.endDate:eq(2)').datepicker('update',null);\r\n            Session.set('priority', 'image');\r\n            $('.is-checked').removeClass('is-checked');\r\n            $(\".priority-toggle[data-priority=\"+ Session.get('priority') +\"]\").addClass('is-checked');\r\n        }\r\n    }\r\n}\r\nfunction constructBlogJson(){\r\n    let title = $('#blogTitle').val();\r\n    let subtitle = $('#blogSubTitle').val();\r\n    let content = $('.editable').froalaEditor('html.get');\r\n    let str = $(\".tags\").val();\r\n    let separators = [' , ', ', ', ',', ' ,'];\r\n    let tags = str.split(new RegExp(separators.join('|'), 'g'));\r\n    let imgId = (hasUnsplash) ? Session.get('unsplash_img') : Session.get('newImageId');\r\n    let releaseDate = new Date($('.input-date').val());\r\n    let draftedDate = new Date();\r\n    let options = $('.category-select')[0].options;\r\n    let categories = [];\r\n    for (let i = 0; i < options.length; i++) {\r\n        let opt = options[i];\r\n        if (opt.selected) {\r\n            categories.push(opt.value);\r\n        }\r\n    }\r\n    let orgOptions = document.getElementById('blogOrganizationSelect').options;\r\n    let orgNames = [], orgVal = [];\r\n    for (let i = 0; i < orgOptions.length; i++) {\r\n        let opt = orgOptions[i];\r\n        if (opt.selected) {\r\n            orgNames.push(opt.text);\r\n            orgVal.push(opt.value);\r\n        }\r\n    }\r\n    let authorId = Meteor.userId();\r\n    let imageFirst = null;\r\n    //meta\r\n    let visibility = $('.visibility-select')[0].value;\r\n\r\n    return {\r\n        author: authorId,\r\n        type: 'blog',\r\n        releaseDate: releaseDate,\r\n        draftedDate: draftedDate,\r\n        title: title,\r\n        subtitle: subtitle,\r\n        content: content,\r\n        tags: tags,\r\n        categories: categories,\r\n        imgId: imgId,\r\n        unsplash: Session.get('unsplashData'),\r\n        organizationsNames: orgNames,\r\n        organizationsValues: orgVal,\r\n        meta: {\r\n            imageFirst: imageFirst,\r\n            hasUnsplash: hasUnsplash,\r\n            visibility: visibility\r\n        }\r\n    };\r\n}\r\nfunction constructAnnouncementJson(type){\r\n    if (type === \"imageOnly\") {\r\n        console.log('constructing image only');\r\n        let headline = $('#imageOnlyHeadline').val();\r\n        let imgId = Session.get('newImageId');\r\n        let separators = [' , ', ', ', ',', ' ,'];\r\n        let tags = $(\".announce-tags\")[0].value.split(new RegExp(separators.join('|'), 'g'));\r\n        let options = $('.announcement-category')[0].options;\r\n        let categories = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            let opt = options[i];\r\n            if (opt.selected) {\r\n                categories.push(opt.value);\r\n            }\r\n        }\r\n        let clubs = $('.clubs-category')[0].options;\r\n        let clubList = [];\r\n        for (let i = 0; i < clubs.length; i++) {\r\n            let opt = clubs[i];\r\n            if (opt.selected) {\r\n                clubList.push(opt.value);\r\n            }\r\n        }\r\n        let authorId = Meteor.userId();\r\n        let startDate = new Date($('.startDate')[0].value);\r\n        let endDate = new Date($('.endDate')[0].value);\r\n        let draftedDate = new Date();\r\n        let visibility = $('.visibility-select')[1].value;\r\n        if (!imgId) {\r\n            alertError('Post Incomplete!', \"You haven't uploaded an image yet!\")\r\n        }\r\n        if (!headline) {\r\n            //TODO\r\n            alertError('Post Incomplete!', \"You haven't added a headline!\")\r\n        }\r\n        if(!startDate || !endDate){\r\n            alertError('Post Incomplete!', \"You haven't added a date!\")\r\n        }\r\n        return {\r\n            author: authorId,\r\n            type: 'announcement',\r\n            subType: 'imageOnly',\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            draftedDate: draftedDate,\r\n            headline: headline,\r\n            tags: tags,\r\n            categories: categories,\r\n            imgId: imgId,\r\n            clubs: clubList,\r\n            meta: {\r\n                hasUnsplash: hasUnsplash,\r\n                visibility: visibility\r\n            }\r\n        };\r\n    } else if (type === \"textOnly\") {\r\n        let headline = $('#textOnlyHeadline').val();\r\n        let content = $('.announcement-text')[0].value;\r\n        let separators = [' , ', ', ', ',', ' ,'];\r\n        let tags = $(\".announce-tags\")[1].value.split(new RegExp(separators.join('|'), 'g'));\r\n\r\n        let options = $('.announcement-category')[1].options;\r\n        let categories = [];\r\n\r\n        for (let i = 0; i < options.length; i++) {\r\n            let opt = options[i];\r\n            if (opt.selected) {\r\n                categories.push(opt.value);\r\n            }\r\n        }\r\n        let visibility = $('.visibility-select')[2].value;\r\n        let authorId = Meteor.userId();\r\n        let startDate = new Date($('.startDate')[1].value);\r\n        let endDate = new Date($('.endDate')[1].value);\r\n        let draftedDate = new Date();\r\n        let clubs = $('.clubs-category')[1].options;\r\n        let clubList = [];\r\n        for (let i = 0; i < clubs.length; i++) {\r\n            let opt = clubs[i];\r\n            if (opt.selected) {\r\n                clubList.push(opt.value);\r\n            }\r\n        }\r\n        //meta\r\n\r\n        if (!content) {\r\n            alertError('Post Incomplete!', \"You haven't added any content yet!\")\r\n        }\r\n        if (!headline) {\r\n            //TODO\r\n            alertError('Post Incomplete!', \"You haven't added a headline!\")\r\n        }\r\n        if(!startDate || !endDate){\r\n            alertError('Post Incomplete!', \"You haven't added a date!\")\r\n        }\r\n\r\n        return {\r\n            author: authorId,\r\n            type: 'announcement',\r\n            subType: 'textOnly',\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            draftedDate: draftedDate,\r\n            headline: headline,\r\n            content: content,\r\n            tags: tags || [],\r\n            categories: categories || [],\r\n            clubs: clubList,\r\n            meta: {\r\n                hasUnsplash: hasUnsplash,\r\n                visibility: visibility\r\n            }\r\n        };\r\n    } else if (type === 'textAndImage') {\r\n        let headline = $('#textImageHeadline').val();\r\n        let content = $('.announcement-text')[1].value;\r\n        let imgId = Session.get('newImageId');\r\n        let str = $(\".announce-tags\")[2].value;\r\n        let separators = [' , ', ', ', ',', ' ,'];\r\n        let tags = str.split(new RegExp(separators.join('|'), 'g'));\r\n\r\n        let options = $('.announcement-category')[2].options;\r\n        let categories = [];\r\n\r\n        for (let i = 0; i < options.length; i++) {\r\n            let opt = options[i];\r\n            if (opt.selected) {\r\n                categories.push(opt.value);\r\n            }\r\n        }\r\n        let visibility = $('.visibility-select')[3].value;\r\n        let authorId = Meteor.userId();\r\n        let startDate = new Date($('.startDate')[2].value);\r\n        let endDate = new Date($('.endDate')[2].value);\r\n        let draftedDate = new Date();\r\n        let clubs = $('.clubs-category')[2].options;\r\n        let clubList = [];\r\n        for (let i = 0; i < clubs.length; i++) {\r\n            let opt = clubs[i];\r\n            if (opt.selected) {\r\n                clubList.push(opt.value);\r\n            }\r\n        }\r\n        //meta\r\n        let priority = Session.get('priority');\r\n        if (!imgId) {\r\n            alertError('Post Incomplete!', \"You haven't uploaded an image yet!\")\r\n        }\r\n        if (!headline) {\r\n            //TODO\r\n            alertError('Post Incomplete!', \"You haven't added a headline!\")\r\n        }\r\n        if(!startDate || !endDate){\r\n            alertError('Post Incomplete!', \"You haven't added a date!\")\r\n        }\r\n        if (!content) {\r\n            //TODO\r\n            alertError('Post Incomplete!', \"You haven't added any information!\")\r\n        }\r\n\r\n        return {\r\n            author: authorId,\r\n            type: 'announcement',\r\n            subType: 'imageText',\r\n            headline: headline,\r\n            content: content,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            draftedDate: draftedDate,\r\n            tags: tags || [],\r\n            categories: categories || [],\r\n            imgId: imgId,\r\n            clubs: clubList,\r\n            meta: {\r\n                priority: priority || 'image',\r\n                hasUnsplash: hasUnsplash,\r\n                visibility: visibility\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nfunction getKeyWord(text) {\r\n    let keyword_extractor = require(\"keyword-extractor\");\r\n\r\n    let keywords = ($(text).text());\r\n//  Extract the keywords\r\n    let extraction_result = keyword_extractor.extract(keywords,{\r\n        language:\"english\",\r\n        remove_digits: true,\r\n        return_changed_case:true,\r\n        remove_duplicates: false,\r\n        remove_max_ngrams: 10\r\n    });\r\n    return extraction_result;\r\n}"]},"hash":"3d2898d2cf8dcff5465ef00acf16fb45477573a3"}
