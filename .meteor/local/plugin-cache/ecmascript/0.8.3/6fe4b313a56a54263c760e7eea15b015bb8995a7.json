{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/imports/startup/server","imported":[],"specifiers":[]},{"source":"../imports/api/posts/posts.js","imported":["Posts"],"specifiers":[{"kind":"named","imported":"Posts","local":"Posts"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"server/main.js","filenameRelative":"server/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"server/main.js.map","sourceFileName":"server/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 0);\nmodule.watch(require(\"/imports/startup/server\"));\nvar Posts = void 0;\nmodule.watch(require(\"../imports/api/posts/posts.js\"), {\n    Posts: function (v) {\n        Posts = v;\n    }\n}, 1);\nMeteor.startup(function () {\n    Accounts.loginServiceConfiguration.remove({\n        service: \"google\"\n    });\n    Accounts.loginServiceConfiguration.insert({\n        service: \"google\",\n        clientId: \"152156454960-h8olc9vhu7juk77p71et1aekkr6qslm1.apps.googleusercontent.com\",\n        secret: \"nL2ZzKMfrfwja7VHa9jmlhvU\"\n    }); //on server restart, always re-run scheduler to reschedule all announcements\n    //TODO\n\n    Posts.find({\n        'meta.approved': true,\n        'meta.screeningStage': 3\n    }).forEach(function (obj) {\n        Meteor.call('scheduleAnnouncement', obj._id, function (err, res) {\n            if (err) {\n                console.log(err);\n            }\n        });\n    }); /*\r\n         Meteor.call('posts.getApprovedPosts', function(err, data) {\r\n         console.log(\"getting approved posts\");\r\n         if (err) {\r\n         console.log (err);\r\n         } else {\r\n         //console.log(data);\r\n         data.forEach(function(obj) {\r\n         Meteor.call('scheduleAnnouncement', obj._id, function(err, res) {\r\n         if (err) {\r\n         console.log(err);\r\n         }\r\n         });\r\n         });\r\n         }\r\n         })*/\n});","map":{"version":3,"sources":["server/main.js"],"names":["Meteor","module","watch","require","v","Posts","startup","Accounts","loginServiceConfiguration","remove","service","insert","clientId","secret","find","forEach","obj","call","_id","err","res","console","log"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,UAAD,YAAQI,CAAR,EAAU;AAACJ,iBAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+DH,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb;AAAiD,IAAIE,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,+BAAR,CAAb,EAAsD;AAACE,SAAD,YAAOD,CAAP,EAAS;AAACC,gBAAMD,CAAN;AAAQ;AAAlB,CAAtD,EAA0E,CAA1E;AAMrIJ,OAAOM,OAAP,CAAe,YAAM;AACjBC,aAASC,yBAAT,CAAmCC,MAAnC,CAA0C;AACtCC,iBAAS;AAD6B,KAA1C;AAGAH,aAASC,yBAAT,CAAmCG,MAAnC,CAA0C;AACtCD,iBAAS,QAD6B;AAEtCE,kBAAU,0EAF4B;AAGtCC,gBAAQ;AAH8B,KAA1C,EAJiB,CASrB;AACA;;AACIR,UAAMS,IAAN,CAAW;AAAC,yBAAgB,IAAjB;AAAuB,+BAAuB;AAA9C,KAAX,EAA6DC,OAA7D,CAAqE,UAASC,GAAT,EAAc;AAC/EhB,eAAOiB,IAAP,CAAY,sBAAZ,EAAoCD,IAAIE,GAAxC,EAA6C,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5D,gBAAID,GAAJ,EAAS;AACLE,wBAAQC,GAAR,CAAYH,GAAZ;AACH;AACJ,SAJD;AAKH,KAND,EAXiB,CAkBjB;;;;;;;;;;;;;;;;AAgBH,CAlCD","file":"server/main.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\n\r\nimport '/imports/startup/server'\r\n\r\nimport {Posts} from '../imports/api/posts/posts.js';\r\n\r\nMeteor.startup(() => {\r\n    Accounts.loginServiceConfiguration.remove({\r\n        service: \"google\"\r\n    });\r\n    Accounts.loginServiceConfiguration.insert({\r\n        service: \"google\",\r\n        clientId: \"152156454960-h8olc9vhu7juk77p71et1aekkr6qslm1.apps.googleusercontent.com\",\r\n        secret: \"nL2ZzKMfrfwja7VHa9jmlhvU\"\r\n    });\r\n//on server restart, always re-run scheduler to reschedule all announcements\r\n//TODO\r\n    Posts.find({'meta.approved':true, 'meta.screeningStage': 3}).forEach(function(obj) {\r\n        Meteor.call('scheduleAnnouncement', obj._id, function(err, res) {\r\n            if (err) {\r\n                console.log(err);\r\n            }\r\n        });\r\n    })\r\n    /*\r\n     Meteor.call('posts.getApprovedPosts', function(err, data) {\r\n     console.log(\"getting approved posts\");\r\n     if (err) {\r\n     console.log (err);\r\n     } else {\r\n     //console.log(data);\r\n     data.forEach(function(obj) {\r\n     Meteor.call('scheduleAnnouncement', obj._id, function(err, res) {\r\n     if (err) {\r\n     console.log(err);\r\n     }\r\n     });\r\n     });\r\n     }\r\n     })*/\r\n});\r\n"]},"hash":"6fe4b313a56a54263c760e7eea15b015bb8995a7"}
