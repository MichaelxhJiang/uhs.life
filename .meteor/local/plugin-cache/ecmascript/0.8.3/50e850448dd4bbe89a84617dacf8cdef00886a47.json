{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/http/test_responder.js","filenameRelative":"packages/http/test_responder.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/http/test_responder.js.map","sourceFileName":"packages/http/test_responder.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"test_responder"},"ignored":false,"code":"var TEST_RESPONDER_ROUTE = \"/http_test_responder\";\n\nvar respond = function (req, res) {\n  if (req.url.slice(0, 5) === \"/slow\") {\n    setTimeout(function () {\n      res.statusCode = 200;\n      res.end(\"A SLOW RESPONSE\");\n    }, 5000);\n    return;\n  } else if (req.url === \"/fail\") {\n    res.statusCode = 500;\n    res.end(\"SOME SORT OF SERVER ERROR. foo\" + _.times(100, function () {\n      return \"MAKE THIS LONG TO TEST THAT WE TRUNCATE\";\n    }).join(' '));\n    return;\n  } else if (req.url === \"/redirect\") {\n    res.statusCode = 301; // XXX shouldn't be redirecting to a relative URL, per HTTP spec,\n    // but browsers etc. seem to tolerate it.\n\n    res.setHeader(\"Location\", TEST_RESPONDER_ROUTE + \"/foo\");\n    res.end(\"REDIRECT TO FOO\");\n    return;\n  } else if (req.url.slice(0, 6) === \"/login\") {\n    var username = 'meteor'; // get password from query string\n\n    var password = req.url.slice(7); // realm is displayed in dialog box if one pops up, avoid confusion\n\n    var realm = TEST_RESPONDER_ROUTE + \"/login\";\n\n    var validate = function (user, pass) {\n      return user === username && pass === password;\n    };\n\n    var connect = WebAppInternals.NpmModules.connect.module;\n    var checker = connect.basicAuth(validate, realm);\n    var success = false;\n    checker(req, res, function () {\n      success = true;\n    });\n    if (!success) return;\n  } else if (req.url === \"/headers\") {\n    res.statusCode = 201;\n    res.setHeader(\"A-Silly-Header\", \"Tis a\");\n    res.setHeader(\"Another-Silly-Header\", \"Silly place.\");\n    res.end(\"A RESPONSE WITH SOME HEADERS\");\n    return;\n  }\n\n  var chunks = [];\n  req.setEncoding(\"utf8\");\n  req.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n  req.on(\"end\", function () {\n    var body = chunks.join('');\n\n    if (body.charAt(0) === '{') {\n      body = JSON.parse(body);\n    }\n\n    var response_data = {\n      method: req.method,\n      url: req.url,\n      headers: req.headers,\n      body: body\n    };\n    var response_string = \"\";\n    if (req.method !== \"HEAD\") response_string = JSON.stringify(response_data);\n    res.statusCode = 200;\n    res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n    res.end(response_string);\n  });\n};\n\nvar run_responder = function () {\n  WebApp.connectHandlers.stack.unshift({\n    route: TEST_RESPONDER_ROUTE,\n    handle: respond\n  });\n};\n\nrun_responder();","map":{"version":3,"sources":["packages/http/test_responder.js"],"names":["TEST_RESPONDER_ROUTE","respond","req","res","url","slice","setTimeout","statusCode","end","_","times","join","setHeader","username","password","realm","validate","user","pass","connect","WebAppInternals","NpmModules","module","checker","basicAuth","success","chunks","setEncoding","on","chunk","push","body","charAt","JSON","parse","response_data","method","headers","response_string","stringify","run_responder","WebApp","connectHandlers","stack","unshift","route","handle"],"mappings":"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","file":"packages/http/test_responder.js.map","sourcesContent":["var TEST_RESPONDER_ROUTE = \"/http_test_responder\";\n\nvar respond = function(req, res) {\n\n  if (req.url.slice(0,5) === \"/slow\") {\n    setTimeout(function() {\n      res.statusCode = 200;\n      res.end(\"A SLOW RESPONSE\");\n    }, 5000);\n    return;\n  } else if (req.url === \"/fail\") {\n    res.statusCode = 500;\n    res.end(\"SOME SORT OF SERVER ERROR. foo\" +\n            _.times(100, function () {\n              return \"MAKE THIS LONG TO TEST THAT WE TRUNCATE\";\n            }).join(' '));\n    return;\n  } else if (req.url === \"/redirect\") {\n    res.statusCode = 301;\n    // XXX shouldn't be redirecting to a relative URL, per HTTP spec,\n    // but browsers etc. seem to tolerate it.\n    res.setHeader(\"Location\", TEST_RESPONDER_ROUTE+\"/foo\");\n    res.end(\"REDIRECT TO FOO\");\n    return;\n  } else if (req.url.slice(0,6) === \"/login\") {\n    var username = 'meteor';\n    // get password from query string\n    var password = req.url.slice(7);\n    // realm is displayed in dialog box if one pops up, avoid confusion\n    var realm = TEST_RESPONDER_ROUTE+\"/login\";\n    var validate = function(user, pass) {\n      return user === username && pass === password;\n    };\n    var connect = WebAppInternals.NpmModules.connect.module;\n    var checker = connect.basicAuth(validate, realm);\n    var success = false;\n    checker(req, res, function() {\n      success = true;\n    });\n    if (! success)\n      return;\n  } else if (req.url === \"/headers\") {\n    res.statusCode = 201;\n    res.setHeader(\"A-Silly-Header\", \"Tis a\");\n    res.setHeader(\"Another-Silly-Header\", \"Silly place.\");\n    res.end(\"A RESPONSE WITH SOME HEADERS\");\n    return;\n  }\n\n  var chunks = [];\n  req.setEncoding(\"utf8\");\n  req.on(\"data\", function(chunk) {\n    chunks.push(chunk); });\n  req.on(\"end\", function() {\n    var body = chunks.join('');\n\n    if (body.charAt(0) === '{') {\n      body = JSON.parse(body);\n    }\n\n    var response_data = {\n      method: req.method,\n      url: req.url,\n      headers: req.headers,\n      body: body\n    };\n    var response_string = \"\";\n    if (req.method !== \"HEAD\")\n      response_string = JSON.stringify(response_data);\n\n    res.statusCode = 200;\n    res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n    res.end(response_string);\n  });\n\n};\n\nvar run_responder = function() {\n  WebApp.connectHandlers.stack.unshift(\n    { route: TEST_RESPONDER_ROUTE, handle: respond });\n};\n\nrun_responder();\n"]},"hash":"50e850448dd4bbe89a84617dacf8cdef00886a47"}
