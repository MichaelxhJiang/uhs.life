{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./dashboard.html","imported":[],"specifiers":[]},{"source":"../../api/images/images.js","imported":["Images"],"specifiers":[{"kind":"named","imported":"Images","local":"Images"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/dashboard.js","filenameRelative":"imports/ui/pages/dashboard.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/dashboard.js.map","sourceFileName":"imports/ui/pages/dashboard.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"dashboard"},"ignored":false,"code":"module.watch(require(\"./dashboard.html\"));\nvar Images = void 0;\nmodule.watch(require(\"../../api/images/images.js\"), {\n    Images: function (v) {\n        Images = v;\n    }\n}, 0);\n//import {Suggestions} from '../../api/suggestions/suggestions.js';\nvar courseSub = void 0;\nvar clubSub = void 0;\nTemplate.dashboard.onRendered(function () {});\nTemplate.dashCategories.onRendered(function () {\n    setTitle('Manage Categories');\n});\nTemplate.dashHome.onRendered(function () {\n    setTitle('Home');\n    Tracker.autorun(function () {\n        Meteor.subscribe('posts');\n        Meteor.subscribe('categories');\n        Meteor.subscribe('blogCategories');\n        Meteor.subscribe('images');\n    });\n});\nTemplate.dashSuggestions.onRendered(function () {\n    setTitle('Suggestion');\n    Tracker.autorun(function () {\n        Meteor.subscribe('suggestions');\n    });\n});\nTemplate.dashOrganizations.onRendered(function () {\n    setTitle('Manage Organizations');\n    Tracker.autorun(function () {\n        courseSub = Meteor.subscribeWithPagination('allCourses', 10);\n        clubSub = Meteor.subscribeWithPagination('allClubs', 10);\n    });\n});\nTemplate.dashUsers.onRendered(function () {\n    setTitle('Manage Organizations');\n    Tracker.autorun(function () {\n        Meteor.subscribe('allUsers');\n    });\n});\nTemplate.dashHome.helpers({\n    'post': function () {\n        return Posts.find({\n            'meta.approved': false,\n            'type': 'announcement',\n            'meta.screeningStage': 0\n        });\n    },\n    'blogPost': function () {\n        return Posts.find({\n            'meta.approved': false,\n            'type': 'blog'\n        });\n    },\n    'writer': function () {\n        //console.log(this);\n        return Meteor.users.findOne({\n            _id: this.author\n        }).services.google.name;\n    },\n    'noImage': function () {\n        return this.subType === 'textOnly';\n    },\n    'imageLink': function () {\n        try {\n            return Images.findOne({\n                _id: this.imgId\n            }).url();\n        } catch (e) {//console.log('error getting photo')\n        }\n    },\n    'hasContent': function () {\n        return this.subType !== 'imageOnly';\n    },\n    'draftedDate': function () {\n        return moment(this.draftedDate).format(\"MMMM Do YYYY\");\n    },\n    'releaseDate': function () {\n        return moment(this.releaseDate).format(\"MMMM Do YYYY\");\n    }\n});\nTemplate.dashAnnouncements.helpers({\n    'post': function () {\n        return Posts.find({\n            'meta.approved': true,\n            'type': 'announcement'\n        });\n    },\n    'blogPost': function () {\n        return Posts.find({\n            'type': 'blog'\n        });\n    },\n    'writer': function () {\n        //console.log(this);\n        return Meteor.users.findOne({\n            _id: this.author\n        }).services.google.name;\n    },\n    'noImage': function () {\n        return this.subType === 'textOnly';\n    },\n    'imageLink': function () {\n        console.log(this);\n\n        try {\n            return Images.findOne({\n                _id: this.imgId\n            }).url();\n        } catch (e) {//console.log('error getting photo')\n        }\n    },\n    'hasContent': function () {\n        return this.subType !== 'imageOnly';\n    }\n});\nTemplate.dashSuggestions.helpers({\n    'suggestion': function () {\n        return Suggestions.find({});\n    },\n    'writer': function () {\n        //console.log(this);\n        return Meteor.users.findOne({\n            _id: this.author\n        }).services.google.name;\n    },\n    'noImage': function () {\n        return this.imgId === null;\n    },\n    'imageLink': function () {\n        try {\n            return Images.findOne({\n                _id: this.imgId\n            }).url();\n        } catch (e) {//console.log('error getting photo from Images - dashboard')\n        }\n    },\n    'draftedDate': function () {\n        return moment(this.draftedDate).format(\"MMMM Do YYYY\");\n    }\n});\nTemplate.dashSuggestions.events({\n    'click .btn-reject-suggestion': function (evt) {\n        var obj = $(evt.target).closest($('.new-post'));\n        var id = obj.attr('id');\n        Meteor.call('suggestions.removeSuggestions', id, function (err) {\n            if (err) {\n                alertError(\"Error Occurred When Removing Suggestion\", err.message);\n            }\n        });\n    }\n});\nTemplate.dashCategories.helpers({\n    'category': function () {\n        return Categories.find({});\n    },\n    'featured': function () {\n        return this.featured ? 'Yes' : 'No';\n    },\n    'date': function () {\n        return moment(this.createdDate).format(\"MMMM Do YYYY\");\n    },\n    'blogCategory': function () {\n        return BlogCategories.find({});\n    }\n});\nTemplate.dashUsers.helpers({\n    'userList': function () {\n        return Meteor.users.find({});\n    },\n    'img': function () {\n        return this.services.google.picture;\n    },\n    'name': function () {\n        return this.services.google.name;\n    },\n    'id': function () {\n        return this._id;\n    }\n});\nTemplate.dashOrganizations.helpers({\n    'courses': function () {\n        return Courses.find({});\n    },\n    'clubs': function () {\n        return Clubs.find({});\n    }\n});\nTemplate.dashboard.events({\n    'click .new-post': function (evt) {\n        var obj = $(evt.target).closest($('.new-post'));\n        var id = obj.attr('id');\n        Session.set('editingId', id);\n        var info = Posts.findOne({\n            _id: id\n        });\n        Session.set('dashEditorData', info);\n        if (!$(evt.target).attr('class').includes('btn-reject') && !$(evt.target).attr('class').includes('btn-approve')) Modal.show('dashPostEditor');\n    },\n    'click .btn-approve': function (evt) {\n        var obj = $(evt.target).closest($('.new-post'));\n        var id = obj.attr('id');\n        Meteor.call('posts.approvePost', id, function (err) {\n            if (err) {\n                alertError(\"Error Occurred When Approving Post\", err.message);\n            }\n        }); //Post on Facebook\n        /*setupFacebook(function(err, response) {\r\n         if (err) {\r\n         console.log(err);\r\n         } else {\r\n         let post = Session.get('dashEditorData');\r\n         let type = post.type;\r\n         if (type === 'announcement') {\r\n         let subType = post.subType;\r\n         if (subType === 'textOnly') {\r\n         postTextFacebook(post);\r\n         } else if (subType === 'imageOnly') {\r\n         postImageFacebook(post);\r\n         } else {\r\n         postTextImageFacebook(post);\r\n         }\r\n         }\r\n         }\r\n         });*/\n    },\n    'click .btn-reject': function (evt) {\n        var obj = $(evt.target).closest($('.new-post'));\n        var id = obj.attr('id');\n        var reason = null;\n        alertPrompt(\"Please give the reason of rejection\", function (result) {\n            if (result) {\n                Meteor.call('posts.rejectPost', id, result, function (err) {\n                    if (err) {\n                        alertError(\"Error Occurred When Removing Post\", err.message);\n                    }\n                });\n            }\n        });\n    }\n});\nTemplate.dashCategories.events({\n    'click .btn-create-category': function (evt) {\n        if ($(evt.target).attr('data-category') === 'blog') {\n            Session.set('editingBlogCategory', true);\n        } else Session.set('editingBlogCategory', false);\n\n        Modal.show('dashCategoryEditor');\n    },\n    'click .btn-delete-category': function (evt) {\n        var obj = $(evt.target).closest($('.dash-category-container'));\n        var type = obj.attr('data-category');\n        var id = obj.attr('id');\n\n        if (type === 'blog') {\n            Meteor.call('blogCategory.remove', id, function (err) {\n                if (err) {\n                    alertError('Something Terrible Happened...', err.message);\n                }\n            });\n        } else {\n            Meteor.call('category.remove', id, function (err) {\n                if (err) {\n                    alertError('Something Terrible Happened...', err.message);\n                }\n            });\n        }\n    }\n});\nTemplate.dashUsers.events({\n    'click .btn-modify-roles': function (evt) {\n        var obj = $(evt.target).closest($('.dash-user-container'));\n        var id = obj.attr('id');\n        Session.set('editingUser', Meteor.users.findOne({\n            _id: id\n        }));\n        Modal.show('dashRoleEditor');\n    },\n    'click .btn-ban-user': function (evt) {\n        var obj = $(evt.target).closest($('.dash-user-container'));\n        var id = obj.attr('id');\n        alertPrompt(\"This doesn't have to happen. Please give a reason for the banning.\", function (result) {\n            Meteor.call('accounts.ban', id, result, function (err) {\n                if (err) {\n                    alertError(\"Failed to ban user\", err.message);\n                } else {\n                    alertSuccess(\"User has been successfully banned\", \"\");\n                }\n            });\n        });\n    }\n});\nTemplate.dashOrganizations.events({\n    'click #uploadCourses': function () {\n        var names = $('#courseNames').val();\n        var codes = $('#courseCodes').val();\n        Meteor.call('courses.addSeveral', names, codes, function (err) {\n            if (err) {\n                alertError(\"Failed\", err.message);\n            } else {\n                alertSuccess('yeah', 'it didnt fail.');\n            }\n        });\n    },\n    'click #coursesLoadMore': function () {\n        courseSub.loadNextPage();\n        clubSub.loadNextPage();\n    },\n    'click #createNewClub': function () {\n        Modal.show('dashClubEditor');\n    },\n    'click .btn-delete': function (evt) {\n        var obj = $(evt.target).closest($('.editor-options'));\n        var type = obj.attr('data-category');\n        var id = obj.attr('id');\n\n        if (type === 'club') {\n            Meteor.call('clubs.remove', id, function (err) {\n                if (err) {\n                    alertError('Something Terrible Happened...', err.message);\n                }\n            });\n        } else {\n            Meteor.call('course.remove', id, function (err) {\n                if (err) {\n                    alertError('Something Terrible Happened...', err.message);\n                }\n            });\n        }\n    }\n});\nTemplate.dashRoleEditor.onRendered(function () {\n    var data = Session.get('editingUser');\n    console.log(data);\n    $(document).ready(function () {\n        $('#newUserRoles').select2({\n            placeholder: \"Click to select...\",\n            allowClear: false\n        });\n        $(\"#newUserRoles\").val(data.roles).trigger(\"change\");\n    });\n});\nTemplate.dashRoleEditor.helpers({\n    'name': function () {\n        return Session.get('editingUser').services.google.name;\n    }\n});\nTemplate.dashRoleEditor.events({\n    'submit .dash-role-edit': function (evt) {\n        var data = Session.get('editingUser');\n        evt.preventDefault();\n        console.log($('#newUserRoles').val());\n        Meteor.call('addUserToRole', data._id, $('#newUserRoles').val(), function (err) {\n            if (err) {\n                alertError(\"Role Modification Failed!\", err.message);\n            } else {\n                Modal.hide('dashRoleEditor');\n                alertSuccess(\"Success!\", \"User Role has been successfully modified!\");\n            }\n        });\n    }\n});\nTemplate.dashClubEditor.onRendered(function () {\n    var drop = initDropZone('newClubImage', {\n        number: 1,\n        size: 10,\n        message: \"Drop your image here or click to use the file browser\"\n    });\n});\nTemplate.dashCategoryEditor.onRendered(function () {\n    var drop = initDropZone('newCategoryImage', {\n        number: 1,\n        size: 10,\n        message: \"Drop your image here or click to use the file browser\"\n    });\n});\nTemplate.dashPostEditor.onRendered(function () {\n    var data = Session.get('dashEditorData');\n\n    if (data.subType === 'imageOnly') {\n        $('#newPostBody').hide();\n    } else {\n        $('#newPostBody').val(data.content);\n    }\n\n    $('#newPostHeadline').val(data.headline);\n    $(\"#newPostTags\").tagsinput('items');\n\n    _.forEach(data.tags, function (item) {\n        $('#newPostTags').tagsinput('add', item);\n    });\n\n    Tracker.autorun(function () {\n        var categorySub = Meteor.subscribe('categories');\n\n        if (categorySub.ready()) {\n            var categories = Categories.find({});\n            categories.observeChanges({\n                added: function (id, fields) {\n                    var newCat = new Option(fields.name, fields.name);\n                    $('#newPostCategories').append(newCat);\n                }\n            });\n            $(\"#newPostCategories\").val(data.categories).trigger(\"change\");\n        }\n    });\n    $(document).ready(function () {\n        $('#newPostCategories').select2({\n            placeholder: \"Click to select matching categories\",\n            allowClear: true\n        });\n    });\n});\nTemplate.dashCategoryEditor.events({\n    'submit .dash-category-edit': function (evt) {\n        evt.preventDefault();\n        var json = {\n            name: $('#newCategoryName').val(),\n            description: $('#newCategoryDescription').val(),\n            imgId: Session.get('categoryImageId'),\n            featured: $('#newCategoryFeatured').is(':checked')\n        }; //console.log(json);\n\n        if (!Session.get('editingBlogCategory')) {\n            Meteor.call('category.addNew', json, function (err) {\n                Modal.hide('dashCategoryEditor');\n\n                if (err) {\n                    alertError('Something Wrong Happened...', err.message);\n                }\n            });\n        } else {\n            Meteor.call('blogCategory.addNew', json, function (err) {\n                Modal.hide('dashCategoryEditor');\n\n                if (err) {\n                    alertError('Something Wrong Happened...', err.message);\n                }\n            });\n        }\n    }\n});\nTemplate.dashClubEditor.events({\n    'submit .dash-club-edit': function (evt) {\n        evt.preventDefault();\n        var json = {\n            name: $('#newClubName').val(),\n            description: $('#newClubDescription').val(),\n            room: $('#newClubRoom').val(),\n            schedule: $('#newClubSchedule').val(),\n            imgId: Session.get('categoryImageId')\n        };\n        Meteor.call('clubs.add', json, function (err) {\n            if (err) {\n                alertError(\"Error Creating Club\", err.message);\n            } else {\n                Modal.hide('dashClubEditor');\n                alertSuccess(\"Yah!\", \"Club successfully created!\");\n            }\n        });\n    }\n});\nTemplate.dashPostEditor.events({\n    'submit .dash-announcement-edit': function (evt) {\n        evt.preventDefault();\n        var separators = [' , ', ', ', ',', ' ,'];\n        var tags = $('#newPostTags').val().split(new RegExp(separators.join('|'), 'g'));\n        var json = {\n            headline: $('#newPostHeadline').val(),\n            content: $('#newPostBody').val(),\n            tags: tags\n        };\n        Posts.update({\n            _id: Session.get('editingId')\n        }, {\n            $set: json\n        });\n        Modal.hide();\n    }\n});\n\nfunction initDropZone(id, info) {\n    return new Dropzone(\"form#\" + id, {\n        maxFiles: info.number || 1,\n        maxFilesize: info.size || 8,\n        thumbnailWidth: 400,\n        addRemoveLinks: true,\n        dictDefaultMessage: info.message || \"Drop your image here, or click to select an image using the browser.\",\n        accept: function (file, done) {\n            var FSFile = new FS.File(file);\n            Images.insert(FSFile, function (err, fileObj) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    //remove the currently uploaded image\n                    //if there is none, this will not do anything\n                    Images.remove({\n                        _id: Session.get('newImageId')\n                    }, function (err) {\n                        if (err) {\n                            console.log(\"error removing image:\\n\" + err);\n                        }\n                    }); //retreive file extension\n\n                    hasUnsplash = false;\n                    Session.set('newFileType', fileObj.extension()); //update the file type\n\n                    Session.set('categoryImageId', fileObj._id); //update the image id to current image\n\n                    done();\n                }\n            });\n        }\n    });\n}","map":{"version":3,"sources":["imports/ui/pages/dashboard.js"],"names":["module","watch","require","Images","v","courseSub","clubSub","Template","dashboard","onRendered","dashCategories","setTitle","dashHome","Tracker","autorun","Meteor","subscribe","dashSuggestions","dashOrganizations","subscribeWithPagination","dashUsers","helpers","Posts","find","users","findOne","_id","author","services","google","name","subType","imgId","url","e","moment","draftedDate","format","releaseDate","dashAnnouncements","console","log","Suggestions","events","evt","obj","$","target","closest","id","attr","call","err","alertError","message","Categories","featured","createdDate","BlogCategories","picture","Courses","Clubs","Session","set","info","includes","Modal","show","reason","alertPrompt","result","type","alertSuccess","names","val","codes","loadNextPage","dashRoleEditor","data","get","document","ready","select2","placeholder","allowClear","roles","trigger","preventDefault","hide","dashClubEditor","drop","initDropZone","number","size","dashCategoryEditor","dashPostEditor","content","headline","tagsinput","_","forEach","tags","item","categorySub","categories","observeChanges","added","fields","newCat","Option","append","json","description","is","room","schedule","separators","split","RegExp","join","update","$set","Dropzone","maxFiles","maxFilesize","thumbnailWidth","addRemoveLinks","dictDefaultMessage","accept","file","done","FSFile","FS","File","insert","fileObj","remove","hasUnsplash","extension"],"mappings":"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","file":"imports/ui/pages/dashboard.js.map","sourcesContent":["import './dashboard.html'\r\nimport { Images } from '../../api/images/images.js';\r\n//import {Suggestions} from '../../api/suggestions/suggestions.js';\r\nlet courseSub;\r\nlet clubSub;\r\nTemplate.dashboard.onRendered(function () {\r\n});\r\nTemplate.dashCategories.onRendered(function () {\r\n    setTitle('Manage Categories');\r\n});\r\nTemplate.dashHome.onRendered(function () {\r\n    setTitle('Home');\r\n    Tracker.autorun(function () {\r\n        Meteor.subscribe('posts');\r\n        Meteor.subscribe('categories');\r\n        Meteor.subscribe('blogCategories');\r\n        Meteor.subscribe('images');\r\n    });\r\n});\r\nTemplate.dashSuggestions.onRendered(function () {\r\n    setTitle('Suggestion');\r\n    Tracker.autorun(function () {\r\n        Meteor.subscribe('suggestions');\r\n    });\r\n});\r\nTemplate.dashOrganizations.onRendered(function () {\r\n    setTitle('Manage Organizations');\r\n    Tracker.autorun(function () {\r\n        courseSub = Meteor.subscribeWithPagination('allCourses', 10);\r\n        clubSub = Meteor.subscribeWithPagination('allClubs', 10);\r\n    });\r\n});\r\nTemplate.dashUsers.onRendered(function () {\r\n    setTitle('Manage Organizations');\r\n    Tracker.autorun(function () {\r\n        Meteor.subscribe('allUsers');\r\n    });\r\n});\r\n\r\nTemplate.dashHome.helpers({\r\n    'post': function () {\r\n        return Posts.find({\r\n            'meta.approved': false,\r\n            'type': 'announcement',\r\n            'meta.screeningStage': 0\r\n        });\r\n    },\r\n    'blogPost': function () {\r\n        return Posts.find({\r\n            'meta.approved': false,\r\n            'type': 'blog'\r\n        });\r\n    },\r\n    'writer': function () {\r\n        //console.log(this);\r\n        return Meteor.users.findOne({_id: this.author}).services.google.name;\r\n    },\r\n    'noImage': function () {\r\n        return (this.subType === 'textOnly')\r\n    },\r\n    'imageLink': function () {\r\n        try{\r\n            return Images.findOne({_id: this.imgId}).url();\r\n        }catch(e){\r\n            //console.log('error getting photo')\r\n        }\r\n    },\r\n    'hasContent': function () {\r\n        return this.subType !== 'imageOnly'\r\n    },\r\n    'draftedDate': function () {\r\n        return moment(this.draftedDate).format(\"MMMM Do YYYY\")\r\n    },\r\n    'releaseDate': function () {\r\n        return moment(this.releaseDate).format(\"MMMM Do YYYY\")\r\n    }\r\n});\r\n\r\nTemplate.dashAnnouncements.helpers({\r\n    'post': function () {\r\n        return Posts.find({\r\n            'meta.approved': true,\r\n            'type': 'announcement'\r\n        });\r\n    },\r\n    'blogPost': function () {\r\n        return Posts.find({\r\n            'type': 'blog'\r\n        });\r\n    },\r\n    'writer': function () {\r\n        //console.log(this);\r\n        return Meteor.users.findOne({_id: this.author}).services.google.name;\r\n    },\r\n    'noImage': function () {\r\n        return (this.subType === 'textOnly')\r\n    },\r\n    'imageLink': function () {\r\n        console.log(this);\r\n        try{\r\n            return Images.findOne({_id: this.imgId}).url();\r\n        }catch(e){\r\n            //console.log('error getting photo')\r\n        }\r\n\r\n    },\r\n    'hasContent': function () {\r\n        return this.subType !== 'imageOnly'\r\n    }\r\n});\r\n\r\nTemplate.dashSuggestions.helpers({\r\n    'suggestion': function () {\r\n        return Suggestions.find({});\r\n    },\r\n    'writer': function () {\r\n        //console.log(this);\r\n        return Meteor.users.findOne({_id: this.author}).services.google.name;\r\n    },\r\n    'noImage': function () {\r\n        return (this.imgId === null)\r\n    },\r\n    'imageLink': function () {\r\n        try{\r\n            return Images.findOne({_id: this.imgId}).url();\r\n        }catch(e){\r\n            //console.log('error getting photo from Images - dashboard')\r\n        }\r\n    },\r\n    'draftedDate': function () {\r\n        return moment(this.draftedDate).format(\"MMMM Do YYYY\")\r\n    }\r\n});\r\n\r\nTemplate.dashSuggestions.events({\r\n    'click .btn-reject-suggestion': function (evt) {\r\n        let obj = $(evt.target).closest($('.new-post'));\r\n        let id = obj.attr('id');\r\n        Meteor.call('suggestions.removeSuggestions', id, function (err) {\r\n            if(err){\r\n                alertError(\"Error Occurred When Removing Suggestion\", err.message)\r\n            }\r\n        })\r\n    }\r\n});\r\n\r\nTemplate.dashCategories.helpers({\r\n    'category': function () {\r\n        return Categories.find({});\r\n    },\r\n    'featured': function () {\r\n        return (this.featured) ? 'Yes' : 'No';\r\n    },\r\n    'date': function () {\r\n        return moment(this.createdDate).format(\"MMMM Do YYYY\")\r\n    },\r\n    'blogCategory': function () {\r\n        return BlogCategories.find({});\r\n    }\r\n});\r\n\r\nTemplate.dashUsers.helpers({\r\n    'userList': function () {\r\n        return Meteor.users.find({});\r\n    },\r\n    'img': function () {\r\n        return this.services.google.picture;\r\n    },\r\n    'name': function () {\r\n        return this.services.google.name;\r\n    },\r\n    'id': function () {\r\n        return this._id;\r\n    }\r\n});\r\n\r\nTemplate.dashOrganizations.helpers({\r\n    'courses': function () {\r\n        return Courses.find({});\r\n    },\r\n    'clubs': function () {\r\n        return Clubs.find({});\r\n    }\r\n});\r\n\r\nTemplate.dashboard.events({\r\n    'click .new-post': function (evt) {\r\n        let obj = $(evt.target).closest($('.new-post'));\r\n        let id = obj.attr('id');\r\n        Session.set('editingId', id);\r\n        let info = Posts.findOne({_id: id});\r\n        Session.set('dashEditorData', info);\r\n\r\n        if(!$(evt.target).attr('class').includes('btn-reject') && !$(evt.target).attr('class').includes('btn-approve'))\r\n            Modal.show('dashPostEditor');\r\n    },\r\n    'click .btn-approve': function (evt) {\r\n        let obj = $(evt.target).closest($('.new-post'));\r\n        let id = obj.attr('id');\r\n        Meteor.call('posts.approvePost', id, function (err) {\r\n            if(err){\r\n                alertError(\"Error Occurred When Approving Post\", err.message)\r\n            }\r\n        })\r\n        //Post on Facebook\r\n        /*setupFacebook(function(err, response) {\r\n         if (err) {\r\n         console.log(err);\r\n         } else {\r\n         let post = Session.get('dashEditorData');\r\n         let type = post.type;\r\n         if (type === 'announcement') {\r\n         let subType = post.subType;\r\n         if (subType === 'textOnly') {\r\n         postTextFacebook(post);\r\n         } else if (subType === 'imageOnly') {\r\n         postImageFacebook(post);\r\n         } else {\r\n         postTextImageFacebook(post);\r\n         }\r\n         }\r\n         }\r\n         });*/\r\n    },\r\n    'click .btn-reject': function (evt) {\r\n        let obj = $(evt.target).closest($('.new-post'));\r\n        let id = obj.attr('id');\r\n        let reason = null;\r\n        alertPrompt(\"Please give the reason of rejection\", function (result) {\r\n            if(result){\r\n                Meteor.call('posts.rejectPost', id, result, function (err) {\r\n                    if(err){\r\n                        alertError(\"Error Occurred When Removing Post\", err.message)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n});\r\n\r\nTemplate.dashCategories.events({\r\n    'click .btn-create-category': function (evt) {\r\n        if($(evt.target).attr('data-category') === 'blog'){\r\n            Session.set('editingBlogCategory', true);\r\n        }else Session.set('editingBlogCategory', false);\r\n        Modal.show('dashCategoryEditor');\r\n    },\r\n    'click .btn-delete-category': function (evt) {\r\n        let obj = $(evt.target).closest($('.dash-category-container'));\r\n        let type = obj.attr('data-category');\r\n        let id = obj.attr('id');\r\n        if(type === 'blog'){\r\n            Meteor.call('blogCategory.remove', id, function (err) {\r\n                if(err){\r\n                    alertError('Something Terrible Happened...', err.message);\r\n                }\r\n            })\r\n        }else{\r\n            Meteor.call('category.remove', id, function (err) {\r\n                if(err){\r\n                    alertError('Something Terrible Happened...', err.message);\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\nTemplate.dashUsers.events({\r\n    'click .btn-modify-roles': function (evt) {\r\n        let obj = $(evt.target).closest($('.dash-user-container'));\r\n        let id = obj.attr('id');\r\n        Session.set('editingUser', Meteor.users.findOne({_id: id}));\r\n        Modal.show('dashRoleEditor');\r\n    },\r\n    'click .btn-ban-user': function (evt) {\r\n        let obj = $(evt.target).closest($('.dash-user-container'));\r\n        let id = obj.attr('id');\r\n        alertPrompt(\"This doesn't have to happen. Please give a reason for the banning.\",function (result) {\r\n            Meteor.call('accounts.ban',id,result,function (err) {\r\n                if(err){\r\n                    alertError(\"Failed to ban user\", err.message)\r\n                }else{\r\n                    alertSuccess(\"User has been successfully banned\", \"\")\r\n                }\r\n            })\r\n        })\r\n    }\r\n});\r\n\r\nTemplate.dashOrganizations.events({\r\n    'click #uploadCourses': function () {\r\n        let names = $('#courseNames').val();\r\n        let codes = $('#courseCodes').val();\r\n        Meteor.call('courses.addSeveral',names,codes,function (err) {\r\n            if(err){\r\n                alertError(\"Failed\", err.message)\r\n            }else{\r\n                alertSuccess('yeah','it didnt fail.')\r\n            }\r\n        })\r\n    },\r\n    'click #coursesLoadMore': function () {\r\n        courseSub.loadNextPage();\r\n        clubSub.loadNextPage();\r\n    },\r\n    'click #createNewClub': function () {\r\n        Modal.show('dashClubEditor');\r\n    },\r\n    'click .btn-delete': function (evt) {\r\n        let obj = $(evt.target).closest($('.editor-options'));\r\n        let type = obj.attr('data-category');\r\n        let id = obj.attr('id');\r\n        if(type === 'club'){\r\n            Meteor.call('clubs.remove', id, function (err) {\r\n                if(err){\r\n                    alertError('Something Terrible Happened...', err.message);\r\n                }\r\n            })\r\n        }else{\r\n            Meteor.call('course.remove', id, function (err) {\r\n                if(err){\r\n                    alertError('Something Terrible Happened...', err.message);\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\nTemplate.dashRoleEditor.onRendered(function () {\r\n    let data = Session.get('editingUser');\r\n    console.log(data);\r\n    $(document).ready(function () {\r\n        $('#newUserRoles').select2({\r\n            placeholder: \"Click to select...\",\r\n            allowClear: false,\r\n        });\r\n        $(\"#newUserRoles\").val(data.roles).trigger(\"change\");\r\n    });\r\n});\r\n\r\nTemplate.dashRoleEditor.helpers({\r\n    'name': function () {\r\n        return Session.get('editingUser').services.google.name;\r\n    }\r\n});\r\n\r\nTemplate.dashRoleEditor.events({\r\n    'submit .dash-role-edit': function (evt) {\r\n        let data = Session.get('editingUser');\r\n        evt.preventDefault();\r\n        console.log($('#newUserRoles').val());\r\n        Meteor.call('addUserToRole', data._id, $('#newUserRoles').val(), function (err) {\r\n            if(err){\r\n                alertError(\"Role Modification Failed!\", err.message);\r\n            }else{\r\n                Modal.hide('dashRoleEditor');\r\n                alertSuccess(\"Success!\", \"User Role has been successfully modified!\")\r\n            }\r\n        })\r\n    }\r\n});\r\n\r\nTemplate.dashClubEditor.onRendered(function () {\r\n    let drop = initDropZone('newClubImage',{\r\n        number: 1,\r\n        size: 10,\r\n        message: \"Drop your image here or click to use the file browser\"\r\n    });\r\n});\r\n\r\nTemplate.dashCategoryEditor.onRendered(function () {\r\n    let drop = initDropZone('newCategoryImage',{\r\n        number: 1,\r\n        size: 10,\r\n        message: \"Drop your image here or click to use the file browser\"\r\n    });\r\n});\r\n\r\nTemplate.dashPostEditor.onRendered(function () {\r\n    let data = Session.get('dashEditorData');\r\n    if(data.subType === 'imageOnly'){\r\n        $('#newPostBody').hide()\r\n    }else{\r\n        $('#newPostBody').val(data.content);\r\n    }\r\n    $('#newPostHeadline').val(data.headline);\r\n    $(\"#newPostTags\").tagsinput('items');\r\n    _.forEach(data.tags,function (item) {\r\n        $('#newPostTags').tagsinput('add', item);\r\n    });\r\n\r\n    Tracker.autorun(function () {\r\n        let categorySub = Meteor.subscribe('categories');\r\n        if(categorySub.ready()){\r\n            let categories = Categories.find({});\r\n            categories.observeChanges({\r\n                added: function(id, fields) {\r\n                    let newCat = new Option(fields.name, fields.name);\r\n                    $('#newPostCategories').append(newCat);\r\n                }\r\n            });\r\n            $(\"#newPostCategories\").val(data.categories).trigger(\"change\");\r\n        }\r\n    });\r\n    $(document).ready(function () {\r\n        $('#newPostCategories').select2({\r\n            placeholder: \"Click to select matching categories\",\r\n            allowClear: true,\r\n        });\r\n    });\r\n});\r\n\r\nTemplate.dashCategoryEditor.events({\r\n    'submit .dash-category-edit': function (evt) {\r\n        evt.preventDefault();\r\n        let json = {\r\n            name: $('#newCategoryName').val(),\r\n            description: $('#newCategoryDescription').val(),\r\n            imgId: Session.get('categoryImageId'),\r\n            featured: $('#newCategoryFeatured').is(':checked')\r\n        };\r\n        //console.log(json);\r\n        if(!Session.get('editingBlogCategory')){\r\n            Meteor.call('category.addNew',json,function (err) {\r\n                Modal.hide('dashCategoryEditor');\r\n                if(err){\r\n                    alertError('Something Wrong Happened...', err.message);\r\n                }\r\n            })\r\n        }else{\r\n            Meteor.call('blogCategory.addNew',json,function (err) {\r\n                Modal.hide('dashCategoryEditor');\r\n                if(err){\r\n                    alertError('Something Wrong Happened...', err.message);\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n});\r\n\r\nTemplate.dashClubEditor.events({\r\n    'submit .dash-club-edit': function (evt) {\r\n        evt.preventDefault();\r\n        let json = {\r\n            name: $('#newClubName').val(),\r\n            description: $('#newClubDescription').val(),\r\n            room: $('#newClubRoom').val(),\r\n            schedule: $('#newClubSchedule').val(),\r\n            imgId: Session.get('categoryImageId'),\r\n        };\r\n        Meteor.call('clubs.add', json, function (err) {\r\n            if (err) {\r\n                alertError(\"Error Creating Club\", err.message)\r\n            } else {\r\n                Modal.hide('dashClubEditor');\r\n                alertSuccess(\"Yah!\", \"Club successfully created!\")\r\n            }\r\n        })\r\n    }\r\n});\r\n\r\nTemplate.dashPostEditor.events({\r\n    'submit .dash-announcement-edit': function (evt) {\r\n        evt.preventDefault();\r\n        let separators = [' , ', ', ', ',', ' ,'];\r\n        let tags = $('#newPostTags').val().split(new RegExp(separators.join('|'), 'g'));\r\n        let json = {\r\n            headline: $('#newPostHeadline').val(),\r\n            content: $('#newPostBody').val(),\r\n            tags: tags\r\n        };\r\n        Posts.update({_id: Session.get('editingId')},{$set: json});\r\n        Modal.hide();\r\n    }\r\n});\r\n\r\n\r\nfunction initDropZone(id, info) {\r\n    return new Dropzone(\"form#\" + id, {\r\n        maxFiles: info.number || 1,\r\n        maxFilesize: info.size || 8,\r\n        thumbnailWidth: 400,\r\n        addRemoveLinks: true,\r\n        dictDefaultMessage: info.message || \"Drop your image here, or click to select an image using the browser.\",\r\n        accept: function (file, done) {\r\n            let FSFile = new FS.File(file);\r\n\r\n            Images.insert(FSFile, function (err, fileObj) {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    //remove the currently uploaded image\r\n                    //if there is none, this will not do anything\r\n                    Images.remove({_id: Session.get('newImageId')}, function (err) {\r\n                        if (err) {\r\n                            console.log(\"error removing image:\\n\" + err);\r\n                        }\r\n                    });\r\n                    //retreive file extension\r\n                    hasUnsplash = false;\r\n                    Session.set('newFileType', fileObj.extension());   //update the file type\r\n                    Session.set('categoryImageId', fileObj._id); //update the image id to current image\r\n                    done();\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n"]},"hash":"8e0f221afcb41f72272f4b1aef4e66cefc49cb25"}
