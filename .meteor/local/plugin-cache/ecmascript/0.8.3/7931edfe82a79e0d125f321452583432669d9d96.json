{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./login.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/login.js","filenameRelative":"imports/ui/pages/login.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/login.js.map","sourceFileName":"imports/ui/pages/login.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"login"},"ignored":false,"code":"module.watch(require(\"./login.html\"));\nTemplate.login.onRendered(function () {\n    //disable register and hid all error prompts when the page initializes\n    $('.email-warning').hide();\n    $('#registerSubmit').prop('disabled', true);\n}); /**\r\n     * This function defines all the events on the login page.*/\nTemplate.login.events({\n    //toggle between register and login form\n    'click .operation': function () {\n        $('form').animate({\n            height: \"toggle\",\n            opacity: \"toggle\"\n        }, \"slow\");\n    },\n    'submit .login-form': function (evt) {\n        evt.preventDefault();\n        var email = evt.target.email.value;\n        var pass = evt.target.password.value;\n        Meteor.loginWithPassword(email, pass, function (err) {\n            if (err) {\n                console.log(err);\n            } else {}\n        });\n    },\n    'submit .register-form': function (evt) {\n        var email = evt.target.registerEmail.value;\n        var firstName = evt.target.firstName.value;\n        var lastName = evt.target.lastName.value;\n        var pass = evt.target.registerPassword.value;\n        Accounts.createUser({\n            username: firstName + lastName,\n            email: email,\n            password: pass,\n            profile: {\n                firstName: firstName,\n                lastName: lastName,\n                fullName: firstName + \" \" + lastName,\n                homeRoom: 0,\n                picture: null\n            }\n        }, function (err) {\n            if (err) {\n                alert(\"error\");\n                console.log(err);\n            } else {\n                console.log(\"Success\");\n            }\n        });\n    },\n    'click #googleLogin': function () {\n        Meteor.loginWithGoogle({\n            loginStyle: \"redirect\",\n            requestPermissions: ['profile', 'email']\n        }, function (err) {\n            if (err) {\n                alertError(\"Sorry...\", err.message);\n            }\n        });\n    },\n    'keyup #registerEmail': function (evt) {\n        evt.preventDefault();\n        var email = evt.target.value;\n\n        if (validateEmail(email)) {\n            $('.email-warning').hide();\n            $('#registerSubmit').prop('disabled', false);\n        } else {\n            $('.email-warning').show();\n            $('#registerSubmit').prop('disabled', true);\n        }\n    }\n}); /**\r\n     * This local method validates the state of a String to see if it is a proper email\r\n     * **/\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nAccounts.onLogin(function () {\n    var redirect = Session.get('redirectAfterLogin');\n\n    if (redirect) {\n        if (redirect !== '/login') {\n            FlowRouter.go(redirect);\n        }\n    } else {//FlowRouter.go('/');\n    }\n});","map":{"version":3,"sources":["imports/ui/pages/login.js"],"names":["module","watch","require","Template","login","onRendered","$","hide","prop","events","animate","height","opacity","evt","preventDefault","email","target","value","pass","password","Meteor","loginWithPassword","err","console","log","registerEmail","firstName","lastName","registerPassword","Accounts","createUser","username","profile","fullName","homeRoom","picture","alert","loginWithGoogle","loginStyle","requestPermissions","alertError","message","validateEmail","show","re","test","onLogin","redirect","Session","get","FlowRouter","go"],"mappings":"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","file":"imports/ui/pages/login.js.map","sourcesContent":["/**\r\n * Created by Yonglin Wang on 7/30/2017.\r\n */\r\nimport './login.html'\r\n\r\nTemplate.login.onRendered(function () {\r\n    //disable register and hid all error prompts when the page initializes\r\n    $('.email-warning').hide();\r\n    $('#registerSubmit').prop('disabled', true);\r\n});\r\n\r\n/**\r\n * This function defines all the events on the login page.*/\r\n\r\nTemplate.login.events({\r\n    //toggle between register and login form\r\n    'click .operation': function () {\r\n        $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\r\n    },\r\n    'submit .login-form': function (evt) {\r\n        evt.preventDefault();\r\n        const email = evt.target.email.value;\r\n        const pass = evt.target.password.value;\r\n        Meteor.loginWithPassword(email,pass,function (err) {\r\n            if(err){\r\n                console.log(err);\r\n            }else {\r\n\r\n            }\r\n        });\r\n\r\n    },\r\n    'submit .register-form': function (evt) {\r\n        const email = evt.target.registerEmail.value;\r\n        const firstName = evt.target.firstName.value;\r\n        const lastName = evt.target.lastName.value;\r\n        const pass = evt.target.registerPassword.value;\r\n        Accounts.createUser({\r\n            username: firstName+lastName,\r\n            email: email,\r\n            password: pass,\r\n            profile:{\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                fullName: firstName + \" \" + lastName,\r\n                homeRoom: 0,\r\n                picture: null\r\n            }\r\n        },function(err){\r\n            if(err){\r\n                alert(\"error\");\r\n                console.log(err)\r\n            }else{\r\n                console.log(\"Success\")\r\n            }\r\n        });\r\n    },\r\n    'click #googleLogin':function () {\r\n        Meteor.loginWithGoogle({\r\n            loginStyle: \"redirect\",\r\n            requestPermissions: ['profile','email'],\r\n        },(err)=>{\r\n            if(err){\r\n                alertError(\"Sorry...\", err.message);\r\n            }\r\n        });\r\n    },\r\n    'keyup #registerEmail': function (evt) {\r\n        evt.preventDefault();\r\n        let email = evt.target.value;\r\n        if(validateEmail(email)){\r\n            $('.email-warning').hide();\r\n            $('#registerSubmit').prop('disabled',false);\r\n        }else{\r\n            $('.email-warning').show();\r\n            $('#registerSubmit').prop('disabled',true);\r\n        }\r\n    }\r\n});\r\n/**\r\n * This local method validates the state of a String to see if it is a proper email\r\n * **/\r\nfunction validateEmail(email) {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nAccounts.onLogin( ()=>{\r\n    const redirect = Session.get('redirectAfterLogin');\r\n    if(redirect){\r\n        if(redirect !== '/login'){\r\n            FlowRouter.go(redirect);\r\n        }\r\n    }else{\r\n        //FlowRouter.go('/');\r\n    }\r\n});\r\n"]},"hash":"7931edfe82a79e0d125f321452583432669d9d96"}
