{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./suggestions.js","imported":["Suggestions"],"specifiers":[{"kind":"named","imported":"Suggestions","local":"Suggestions"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/api/suggestions/suggestionMethods.js","filenameRelative":"imports/api/suggestions/suggestionMethods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/suggestions/suggestionMethods.js.map","sourceFileName":"imports/api/suggestions/suggestionMethods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"suggestionMethods"},"ignored":false,"code":"var Suggestions = void 0;\nmodule.watch(require(\"./suggestions.js\"), {\n    Suggestions: function (v) {\n        Suggestions = v;\n    }\n}, 0);\nMeteor.methods({\n    'suggestions.postSuggestion': function (json) {\n        var accessLevel = Meteor.users.find({\n            _id: Meteor.userId()\n        }).accessLevel;\n\n        if (accessLevel === 'teacher' || accessLevel === 'admin') {//TODO\n        }\n\n        var errStr = \"\",\n            err = false;\n\n        if (json.type !== \"suggestion\") {\n            err = true;\n            errStr += \"Not an announcement. \";\n        }\n\n        if (!json.headline) {\n            err = true;\n            errStr += \"Missing headline. \";\n        }\n\n        if (!json.content) {\n            err = true;\n            errStr += \"Missing content. \";\n        }\n\n        if (err) {\n            throw new Meteor.Error(400, errStr);\n        } //adds draft to the Posts collection\n\n\n        Suggestions.insert(json, function (err, content) {\n            //error catch for algolia issues\n            if (err) {\n                console.error(err);\n            }\n        });\n    },\n    'suggestions.getSuggestions': function () {\n        return Suggestions.find();\n    },\n    'suggestions.removeSuggestions': function (id) {\n        return Suggestions.remove({\n            '_id': id\n        });\n    }\n});","map":{"version":3,"sources":["imports/api/suggestions/suggestionMethods.js"],"names":["Suggestions","module","watch","require","v","Meteor","methods","json","accessLevel","users","find","_id","userId","errStr","err","type","headline","content","Error","insert","console","error","id","remove"],"mappings":"AAAA,IAAIA,oBAAJ;AAAgBC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,eAAD,YAAaI,CAAb,EAAe;AAACJ,sBAAYI,CAAZ;AAAc;AAA9B,CAAzC,EAAyE,CAAzE;AAEhBC,OAAOC,OAAP,CAAe;AACX,kCAA+B,UAASC,IAAT,EAAe;AAC1C,YAAIC,cAAcH,OAAOI,KAAP,CAAaC,IAAb,CAAkB;AAACC,iBAAIN,OAAOO,MAAP;AAAL,SAAlB,EAAyCJ,WAA3D;;AACA,YAAIA,gBAAgB,SAAhB,IAA6BA,gBAAgB,OAAjD,EAA0D,CACtD;AACH;;AACD,YAAIK,SAAS,EAAb;AAAA,YAAiBC,MAAM,KAAvB;;AACA,YAAIP,KAAKQ,IAAL,KAAc,YAAlB,EAAgC;AAC5BD,kBAAM,IAAN;AACAD,sBAAU,uBAAV;AACH;;AACD,YAAI,CAACN,KAAKS,QAAV,EAAoB;AAChBF,kBAAM,IAAN;AACAD,sBAAU,oBAAV;AACH;;AACD,YAAI,CAACN,KAAKU,OAAV,EAAmB;AACfH,kBAAM,IAAN;AACAD,sBAAU,mBAAV;AACH;;AACD,YAAIC,GAAJ,EAAS;AACL,kBAAM,IAAIT,OAAOa,KAAX,CAAiB,GAAjB,EAAsBL,MAAtB,CAAN;AACH,SApByC,CAsB1C;;;AACAb,oBAAYmB,MAAZ,CAAmBZ,IAAnB,EAAyB,UAASO,GAAT,EAAcG,OAAd,EAAuB;AAC5C;AACA,gBAAGH,GAAH,EAAQ;AACJM,wBAAQC,KAAR,CAAcP,GAAd;AACH;AACJ,SALD;AAOH,KA/BU;AAgCX,kCAA+B,YAAW;AACtC,eAAOd,YAAYU,IAAZ,EAAP;AACH,KAlCU;AAmCX,qCAAkC,UAASY,EAAT,EAAa;AAC3C,eAAOtB,YAAYuB,MAAZ,CAAmB;AAAC,mBAAOD;AAAR,SAAnB,CAAP;AACH;AArCU,CAAf","file":"imports/api/suggestions/suggestionMethods.js.map","sourcesContent":["import { Suggestions } from './suggestions.js';\r\n\r\nMeteor.methods({\r\n    'suggestions.postSuggestion' : function(json) {\r\n        let accessLevel = Meteor.users.find({_id:Meteor.userId()}).accessLevel;\r\n        if (accessLevel === 'teacher' || accessLevel === 'admin') {\r\n            //TODO\r\n        }\r\n        let errStr = \"\", err = false;\r\n        if (json.type !== \"suggestion\") {\r\n            err = true;\r\n            errStr += \"Not an announcement. \";\r\n        }\r\n        if (!json.headline) {\r\n            err = true;\r\n            errStr += \"Missing headline. \";\r\n        }\r\n        if (!json.content) {\r\n            err = true;\r\n            errStr += \"Missing content. \";\r\n        }\r\n        if (err) {\r\n            throw new Meteor.Error(400, errStr);\r\n        }\r\n\r\n        //adds draft to the Posts collection\r\n        Suggestions.insert(json, function(err, content) {\r\n            //error catch for algolia issues\r\n            if(err) {\r\n                console.error(err);\r\n            }\r\n        });\r\n\r\n    },\r\n    'suggestions.getSuggestions' : function() {\r\n        return Suggestions.find();\r\n    },\r\n    'suggestions.removeSuggestions' : function(id) {\r\n        return Suggestions.remove({'_id': id});\r\n    }\r\n})\r\n"]},"hash":"246be4f0df8bd43dcf608f016a9dcc3ebb7282b6"}
