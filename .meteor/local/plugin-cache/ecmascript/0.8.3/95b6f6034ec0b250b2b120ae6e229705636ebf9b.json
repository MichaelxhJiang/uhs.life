{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./accounts_common.js","imported":["AccountsCommon"],"specifiers":[{"kind":"named","imported":"AccountsCommon","local":"AccountsCommon"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/accounts-base/accounts_rate_limit.js","filenameRelative":"packages/accounts-base/accounts_rate_limit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/accounts-base/accounts_rate_limit.js.map","sourceFileName":"packages/accounts-base/accounts_rate_limit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"accounts_rate_limit"},"ignored":false,"code":"var AccountsCommon = void 0;\nmodule.watch(require(\"./accounts_common.js\"), {\n  AccountsCommon: function (v) {\n    AccountsCommon = v;\n  }\n}, 0);\nvar Ap = AccountsCommon.prototype;\nvar defaultRateLimiterRuleId; // Removes default rate limiting rule\n\nAp.removeDefaultRateLimit = function () {\n  var resp = DDPRateLimiter.removeRule(defaultRateLimiterRuleId);\n  defaultRateLimiterRuleId = null;\n  return resp;\n}; // Add a default rule of limiting logins, creating new users and password reset\n// to 5 times every 10 seconds per connection.\n\n\nAp.addDefaultRateLimit = function () {\n  if (!defaultRateLimiterRuleId) {\n    defaultRateLimiterRuleId = DDPRateLimiter.addRule({\n      userId: null,\n      clientAddress: null,\n      type: 'method',\n      name: function (name) {\n        return _.contains(['login', 'createUser', 'resetPassword', 'forgotPassword'], name);\n      },\n      connectionId: function (connectionId) {\n        return true;\n      }\n    }, 5, 10000);\n  }\n};\n\nAp.addDefaultRateLimit();","map":{"version":3,"sources":["packages/accounts-base/accounts_rate_limit.js"],"names":["AccountsCommon","module","watch","require","v","Ap","prototype","defaultRateLimiterRuleId","removeDefaultRateLimit","resp","DDPRateLimiter","removeRule","addDefaultRateLimit","addRule","userId","clientAddress","type","name","_","contains","connectionId"],"mappings":"AAAA,IAAIA,uBAAJ;AAAmBC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,gBAAD,YAAgBI,CAAhB,EAAkB;AAACJ,qBAAeI,CAAf;AAAiB;AAApC,CAA7C,EAAmF,CAAnF;AAEnB,IAAIC,KAAKL,eAAeM,SAAxB;AACA,IAAIC,wBAAJ,C,CACA;;AACAF,GAAGG,sBAAH,GAA4B,YAAY;AACtC,MAAMC,OAAOC,eAAeC,UAAf,CAA0BJ,wBAA1B,CAAb;AACAA,6BAA2B,IAA3B;AACA,SAAOE,IAAP;AACD,CAJD,C,CAMA;AACA;;;AACAJ,GAAGO,mBAAH,GAAyB,YAAY;AACnC,MAAI,CAACL,wBAAL,EAA+B;AAC7BA,+BAA2BG,eAAeG,OAAf,CAAuB;AAChDC,cAAQ,IADwC;AAEhDC,qBAAe,IAFiC;AAGhDC,YAAM,QAH0C;AAIhDC,YAAM,UAAUA,IAAV,EAAgB;AACpB,eAAOC,EAAEC,QAAF,CAAW,CAAC,OAAD,EAAU,YAAV,EAAwB,eAAxB,EAChB,gBADgB,CAAX,EACcF,IADd,CAAP;AAED,OAP+C;AAQhDG,oBAAc,UAAUA,YAAV,EAAwB;AACpC,eAAO,IAAP;AACD;AAV+C,KAAvB,EAWxB,CAXwB,EAWrB,KAXqB,CAA3B;AAYD;AACF,CAfD;;AAiBAf,GAAGO,mBAAH","file":"packages/accounts-base/accounts_rate_limit.js.map","sourcesContent":["import {AccountsCommon} from \"./accounts_common.js\";\n\nvar Ap = AccountsCommon.prototype;\nvar defaultRateLimiterRuleId;\n// Removes default rate limiting rule\nAp.removeDefaultRateLimit = function () {\n  const resp = DDPRateLimiter.removeRule(defaultRateLimiterRuleId);\n  defaultRateLimiterRuleId = null;\n  return resp;\n};\n\n// Add a default rule of limiting logins, creating new users and password reset\n// to 5 times every 10 seconds per connection.\nAp.addDefaultRateLimit = function () {\n  if (!defaultRateLimiterRuleId) {\n    defaultRateLimiterRuleId = DDPRateLimiter.addRule({\n      userId: null,\n      clientAddress: null,\n      type: 'method',\n      name: function (name) {\n        return _.contains(['login', 'createUser', 'resetPassword',\n          'forgotPassword'], name);\n      },\n      connectionId: function (connectionId) {\n        return true;\n      }\n    }, 5, 10000);\n  }\n};\n\nAp.addDefaultRateLimit();\n"]},"hash":"95b6f6034ec0b250b2b120ae6e229705636ebf9b"}
