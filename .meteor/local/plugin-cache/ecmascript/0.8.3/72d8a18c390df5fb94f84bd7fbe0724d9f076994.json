{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/lib/morphext.js","filenameRelative":"imports/ui/lib/morphext.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/lib/morphext.js.map","sourceFileName":"imports/ui/lib/morphext.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"morphext"},"ignored":false,"code":"/*!\r\n * Morphext - Text Rotating Plugin for jQuery\r\n * https://github.com/MrSaints/Morphext\r\n *\r\n * Built on jQuery Boilerplate\r\n * http://jqueryboilerplate.com/\r\n *\r\n * Copyright 2014 Ian Lai and other contributors\r\n * Released under the MIT license\r\n * http://ian.mit-license.org/\r\n */ /*eslint-env browser */ /*global jQuery:false */ /*eslint-disable no-underscore-dangle */(function ($) {\n    \"use strict\";\n\n    var pluginName = \"Morphext\",\n        defaults = {\n        animation: \"bounceIn\",\n        separator: \",\",\n        speed: 2000,\n        complete: $.noop\n    };\n\n    function Plugin(element, options) {\n        this.element = $(element);\n        this.settings = $.extend({}, defaults, options);\n        this._defaults = defaults;\n\n        this._init();\n    }\n\n    Plugin.prototype = {\n        _init: function () {\n            var $that = this;\n            this.phrases = [];\n            this.element.addClass(\"morphext\");\n            $.each(this.element.text().split(this.settings.separator), function (key, value) {\n                $that.phrases.push($.trim(value));\n            });\n            this.index = -1;\n            this.animate();\n            this.start();\n        },\n        animate: function () {\n            this.index = ++this.index % this.phrases.length;\n            this.element[0].innerHTML = \"<span class=\\\"animated \" + this.settings.animation + \"\\\">\" + this.phrases[this.index] + \"</span>\";\n\n            if ($.isFunction(this.settings.complete)) {\n                this.settings.complete.call(this);\n            }\n        },\n        start: function () {\n            var $that = this;\n            this._interval = setInterval(function () {\n                $that.animate();\n            }, this.settings.speed);\n        },\n        stop: function () {\n            this._interval = clearInterval(this._interval);\n        }\n    };\n\n    $.fn[pluginName] = function (options) {\n        return this.each(function () {\n            if (!$.data(this, \"plugin_\" + pluginName)) {\n                $.data(this, \"plugin_\" + pluginName, new Plugin(this, options));\n            }\n        });\n    };\n})(jQuery);","map":{"version":3,"sources":["imports/ui/lib/morphext.js"],"names":["$","pluginName","defaults","animation","separator","speed","complete","noop","Plugin","element","options","settings","extend","_defaults","_init","prototype","$that","phrases","addClass","each","text","split","key","value","push","trim","index","animate","start","length","innerHTML","isFunction","call","_interval","setInterval","stop","clearInterval","fn","data","jQuery"],"mappings":"AAAA;;;;;;;;;;IAYA,uB,CACA,wB,CACA,wCAEA,CAAC,UAAUA,CAAV,EAAa;AACV;;AAEA,QAAIC,aAAa,UAAjB;AAAA,QACIC,WAAW;AACPC,mBAAW,UADJ;AAEPC,mBAAW,GAFJ;AAGPC,eAAO,IAHA;AAIPC,kBAAUN,EAAEO;AAJL,KADf;;AAQA,aAASC,MAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AAC/B,aAAKD,OAAL,GAAeT,EAAES,OAAF,CAAf;AAEA,aAAKE,QAAL,GAAgBX,EAAEY,MAAF,CAAS,EAAT,EAAaV,QAAb,EAAuBQ,OAAvB,CAAhB;AACA,aAAKG,SAAL,GAAiBX,QAAjB;;AACA,aAAKY,KAAL;AACH;;AAEDN,WAAOO,SAAP,GAAmB;AACfD,eAAO,YAAY;AACf,gBAAIE,QAAQ,IAAZ;AACA,iBAAKC,OAAL,GAAe,EAAf;AAEA,iBAAKR,OAAL,CAAaS,QAAb,CAAsB,UAAtB;AAEAlB,cAAEmB,IAAF,CAAO,KAAKV,OAAL,CAAaW,IAAb,GAAoBC,KAApB,CAA0B,KAAKV,QAAL,CAAcP,SAAxC,CAAP,EAA2D,UAAUkB,GAAV,EAAeC,KAAf,EAAsB;AAC7EP,sBAAMC,OAAN,CAAcO,IAAd,CAAmBxB,EAAEyB,IAAF,CAAOF,KAAP,CAAnB;AACH,aAFD;AAIA,iBAAKG,KAAL,GAAa,CAAC,CAAd;AACA,iBAAKC,OAAL;AACA,iBAAKC,KAAL;AACH,SAdc;AAefD,iBAAS,YAAY;AACjB,iBAAKD,KAAL,GAAa,EAAE,KAAKA,KAAP,GAAe,KAAKT,OAAL,CAAaY,MAAzC;AACA,iBAAKpB,OAAL,CAAa,CAAb,EAAgBqB,SAAhB,GAA4B,4BAA4B,KAAKnB,QAAL,CAAcR,SAA1C,GAAsD,KAAtD,GAA8D,KAAKc,OAAL,CAAa,KAAKS,KAAlB,CAA9D,GAAyF,SAArH;;AAEA,gBAAI1B,EAAE+B,UAAF,CAAa,KAAKpB,QAAL,CAAcL,QAA3B,CAAJ,EAA0C;AACtC,qBAAKK,QAAL,CAAcL,QAAd,CAAuB0B,IAAvB,CAA4B,IAA5B;AACH;AACJ,SAtBc;AAuBfJ,eAAO,YAAY;AACf,gBAAIZ,QAAQ,IAAZ;AACA,iBAAKiB,SAAL,GAAiBC,YAAY,YAAY;AACrClB,sBAAMW,OAAN;AACH,aAFgB,EAEd,KAAKhB,QAAL,CAAcN,KAFA,CAAjB;AAGH,SA5Bc;AA6Bf8B,cAAM,YAAY;AACd,iBAAKF,SAAL,GAAiBG,cAAc,KAAKH,SAAnB,CAAjB;AACH;AA/Bc,KAAnB;;AAkCAjC,MAAEqC,EAAF,CAAKpC,UAAL,IAAmB,UAAUS,OAAV,EAAmB;AAClC,eAAO,KAAKS,IAAL,CAAU,YAAW;AACxB,gBAAI,CAACnB,EAAEsC,IAAF,CAAO,IAAP,EAAa,YAAYrC,UAAzB,CAAL,EAA2C;AACvCD,kBAAEsC,IAAF,CAAO,IAAP,EAAa,YAAYrC,UAAzB,EAAqC,IAAIO,MAAJ,CAAW,IAAX,EAAiBE,OAAjB,CAArC;AACH;AACJ,SAJM,CAAP;AAKH,KAND;AAOH,CA5DD,EA4DG6B,MA5DH","file":"imports/ui/lib/morphext.js.map","sourcesContent":["/*!\r\n * Morphext - Text Rotating Plugin for jQuery\r\n * https://github.com/MrSaints/Morphext\r\n *\r\n * Built on jQuery Boilerplate\r\n * http://jqueryboilerplate.com/\r\n *\r\n * Copyright 2014 Ian Lai and other contributors\r\n * Released under the MIT license\r\n * http://ian.mit-license.org/\r\n */\r\n\r\n/*eslint-env browser */\r\n/*global jQuery:false */\r\n/*eslint-disable no-underscore-dangle */\r\n\r\n(function ($) {\r\n    \"use strict\";\r\n\r\n    var pluginName = \"Morphext\",\r\n        defaults = {\r\n            animation: \"bounceIn\",\r\n            separator: \",\",\r\n            speed: 2000,\r\n            complete: $.noop\r\n        };\r\n\r\n    function Plugin (element, options) {\r\n        this.element = $(element);\r\n\r\n        this.settings = $.extend({}, defaults, options);\r\n        this._defaults = defaults;\r\n        this._init();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n        _init: function () {\r\n            var $that = this;\r\n            this.phrases = [];\r\n\r\n            this.element.addClass(\"morphext\");\r\n\r\n            $.each(this.element.text().split(this.settings.separator), function (key, value) {\r\n                $that.phrases.push($.trim(value));\r\n            });\r\n\r\n            this.index = -1;\r\n            this.animate();\r\n            this.start();\r\n        },\r\n        animate: function () {\r\n            this.index = ++this.index % this.phrases.length;\r\n            this.element[0].innerHTML = \"<span class=\\\"animated \" + this.settings.animation + \"\\\">\" + this.phrases[this.index] + \"</span>\";\r\n\r\n            if ($.isFunction(this.settings.complete)) {\r\n                this.settings.complete.call(this);\r\n            }\r\n        },\r\n        start: function () {\r\n            var $that = this;\r\n            this._interval = setInterval(function () {\r\n                $that.animate();\r\n            }, this.settings.speed);\r\n        },\r\n        stop: function () {\r\n            this._interval = clearInterval(this._interval);\r\n        }\r\n    };\r\n\r\n    $.fn[pluginName] = function (options) {\r\n        return this.each(function() {\r\n            if (!$.data(this, \"plugin_\" + pluginName)) {\r\n                $.data(this, \"plugin_\" + pluginName, new Plugin(this, options));\r\n            }\r\n        });\r\n    };\r\n})(jQuery);\r\n"]},"hash":"72d8a18c390df5fb94f84bd7fbe0724d9f076994"}
