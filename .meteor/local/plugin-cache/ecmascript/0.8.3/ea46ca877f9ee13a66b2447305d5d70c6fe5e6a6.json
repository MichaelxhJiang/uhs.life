{"metadata":{"usedHelpers":["classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"fs","imported":["readFile"],"specifiers":[{"kind":"named","imported":"readFile","local":"readFile"}]},{"source":"./template-web.browser","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"WebBrowserTemplate"}]},{"source":"./template-web.cordova","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"WebCordovaTemplate"}]}],"exports":{"exported":["Boilerplate"],"specifiers":[{"kind":"local","local":"Boilerplate","exported":"Boilerplate"}]}}},"options":{"filename":"packages/boilerplate-generator/generator.js","filenameRelative":"packages/boilerplate-generator/generator.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/boilerplate-generator/generator.js.map","sourceFileName":"packages/boilerplate-generator/generator.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"generator"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  Boilerplate: function () {\n    return Boilerplate;\n  }\n});\nvar readFile = void 0;\nmodule.watch(require(\"fs\"), {\n  readFile: function (v) {\n    readFile = v;\n  }\n}, 0);\nvar WebBrowserTemplate = void 0;\nmodule.watch(require(\"./template-web.browser\"), {\n  \"default\": function (v) {\n    WebBrowserTemplate = v;\n  }\n}, 1);\nvar WebCordovaTemplate = void 0;\nmodule.watch(require(\"./template-web.cordova\"), {\n  \"default\": function (v) {\n    WebCordovaTemplate = v;\n  }\n}, 2);\n\n// Copied from webapp_server\nvar readUtf8FileSync = function (filename) {\n  return Meteor.wrapAsync(readFile)(filename, 'utf8');\n};\n\nvar Boilerplate = function () {\n  function Boilerplate(arch, manifest) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _classCallCheck3.default)(this, Boilerplate);\n    this.template = _getTemplate(arch);\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(manifest, options);\n  } // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n\n\n  Boilerplate.prototype.toHTML = function () {\n    function toHTML(extraData) {\n      if (!this.baseData || !this.template) {\n        throw new Error('Boilerplate did not instantiate correctly.');\n      }\n\n      return \"<!DOCTYPE html>\\n\" + this.template((0, _extends3.default)({}, this.baseData, extraData));\n    }\n\n    return toHTML;\n  }(); // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n\n\n  Boilerplate.prototype._generateBoilerplateFromManifest = function () {\n    function _generateBoilerplateFromManifest(manifest) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$urlMapper = _ref.urlMapper,\n          urlMapper = _ref$urlMapper === undefined ? _.identity : _ref$urlMapper,\n          _ref$pathMapper = _ref.pathMapper,\n          pathMapper = _ref$pathMapper === undefined ? _.identity : _ref$pathMapper,\n          baseDataExtension = _ref.baseDataExtension,\n          inline = _ref.inline;\n\n      var boilerplateBaseData = (0, _extends3.default)({\n        css: [],\n        js: [],\n        head: '',\n        body: '',\n        meteorManifest: JSON.stringify(manifest)\n      }, baseDataExtension);\n\n      _.each(manifest, function (item) {\n        var urlPath = urlMapper(item.url);\n        var itemObj = {\n          url: urlPath\n        };\n\n        if (inline) {\n          itemObj.scriptContent = readUtf8FileSync(pathMapper(item.path));\n          itemObj.inline = true;\n        }\n\n        if (item.type === 'css' && item.where === 'client') {\n          boilerplateBaseData.css.push(itemObj);\n        }\n\n        if (item.type === 'js' && item.where === 'client' && // Dynamic JS modules should not be loaded eagerly in the\n        // initial HTML of the app.\n        !item.path.startsWith('dynamic/')) {\n          boilerplateBaseData.js.push(itemObj);\n        }\n\n        if (item.type === 'head') {\n          boilerplateBaseData.head = readUtf8FileSync(pathMapper(item.path));\n        }\n\n        if (item.type === 'body') {\n          boilerplateBaseData.body = readUtf8FileSync(pathMapper(item.path));\n        }\n      });\n\n      this.baseData = boilerplateBaseData;\n    }\n\n    return _generateBoilerplateFromManifest;\n  }();\n\n  return Boilerplate;\n}();\n\n; // Returns a template function that, when called, produces the boilerplate\n// html as a string.\n\nvar _getTemplate = function (arch) {\n  if (arch === 'web.browser') {\n    return WebBrowserTemplate;\n  } else if (arch === 'web.cordova') {\n    return WebCordovaTemplate;\n  } else {\n    throw new Error('Unsupported arch: ' + arch);\n  }\n};","map":{"version":3,"sources":["packages/boilerplate-generator/generator.js"],"names":["module","export","Boilerplate","readFile","watch","require","v","WebBrowserTemplate","WebCordovaTemplate","readUtf8FileSync","Meteor","wrapAsync","filename","arch","manifest","options","template","_getTemplate","baseData","_generateBoilerplateFromManifest","toHTML","extraData","Error","urlMapper","_","identity","pathMapper","baseDataExtension","inline","boilerplateBaseData","css","js","head","body","meteorManifest","JSON","stringify","each","urlPath","item","url","itemObj","scriptContent","path","type","where","push","startsWith"],"mappings":"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","file":"packages/boilerplate-generator/generator.js.map","sourcesContent":["import { readFile } from 'fs';\n\nimport WebBrowserTemplate from './template-web.browser';\nimport WebCordovaTemplate from './template-web.cordova';\n\n// Copied from webapp_server\nconst readUtf8FileSync = filename => Meteor.wrapAsync(readFile)(filename, 'utf8');\n\nexport class Boilerplate {\n  constructor(arch, manifest, options = {}) {\n    this.template = _getTemplate(arch);\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(\n      manifest,\n      options\n    );\n  }\n\n  // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n  toHTML(extraData) {\n    if (!this.baseData || !this.template) {\n      throw new Error('Boilerplate did not instantiate correctly.');\n    }\n\n    return  \"<!DOCTYPE html>\\n\" +\n      this.template({ ...this.baseData, ...extraData });\n  }\n\n  // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n  _generateBoilerplateFromManifest(manifest, {\n    urlMapper = _.identity,\n    pathMapper = _.identity,\n    baseDataExtension,\n    inline,\n  } = {}) {\n\n    const boilerplateBaseData = {\n      css: [],\n      js: [],\n      head: '',\n      body: '',\n      meteorManifest: JSON.stringify(manifest),\n      ...baseDataExtension,\n    };\n\n    _.each(manifest, item => {\n      const urlPath = urlMapper(item.url);\n      const itemObj = { url: urlPath };\n\n      if (inline) {\n        itemObj.scriptContent = readUtf8FileSync(\n          pathMapper(item.path));\n        itemObj.inline = true;\n      }\n\n      if (item.type === 'css' && item.where === 'client') {\n        boilerplateBaseData.css.push(itemObj);\n      }\n\n      if (item.type === 'js' && item.where === 'client' &&\n        // Dynamic JS modules should not be loaded eagerly in the\n        // initial HTML of the app.\n        !item.path.startsWith('dynamic/')) {\n        boilerplateBaseData.js.push(itemObj);\n      }\n\n      if (item.type === 'head') {\n        boilerplateBaseData.head =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n\n      if (item.type === 'body') {\n        boilerplateBaseData.body =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n    });\n\n    this.baseData = boilerplateBaseData;\n  }\n};\n\n// Returns a template function that, when called, produces the boilerplate\n// html as a string.\nconst _getTemplate = arch => {\n  if (arch === 'web.browser') {\n    return WebBrowserTemplate;\n  } else if (arch === 'web.cordova') {\n    return WebCordovaTemplate;\n  } else {\n    throw new Error('Unsupported arch: ' + arch);\n  }\n};\n"]},"hash":"ea46ca877f9ee13a66b2447305d5d70c6fe5e6a6"}
