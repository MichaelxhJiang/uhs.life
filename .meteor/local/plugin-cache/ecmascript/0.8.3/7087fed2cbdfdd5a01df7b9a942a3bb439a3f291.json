{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./accounts_server.js","imported":["AccountsServer"],"specifiers":[{"kind":"named","imported":"AccountsServer","local":"AccountsServer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/accounts-base/url_server.js","filenameRelative":"packages/accounts-base/url_server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/accounts-base/url_server.js.map","sourceFileName":"packages/accounts-base/url_server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"url_server"},"ignored":false,"code":"var AccountsServer = void 0;\nmodule.watch(require(\"./accounts_server.js\"), {\n  AccountsServer: function (v) {\n    AccountsServer = v;\n  }\n}, 0);\n// XXX These should probably not actually be public?\nAccountsServer.prototype.urls = {\n  resetPassword: function (token) {\n    return Meteor.absoluteUrl('#/reset-password/' + token);\n  },\n  verifyEmail: function (token) {\n    return Meteor.absoluteUrl('#/verify-email/' + token);\n  },\n  enrollAccount: function (token) {\n    return Meteor.absoluteUrl('#/enroll-account/' + token);\n  }\n};","map":{"version":3,"sources":["packages/accounts-base/url_server.js"],"names":["AccountsServer","module","watch","require","v","prototype","urls","resetPassword","token","Meteor","absoluteUrl","verifyEmail","enrollAccount"],"mappings":"AAAA,IAAIA,uBAAJ;AAAmBC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,gBAAD,YAAgBI,CAAhB,EAAkB;AAACJ,qBAAeI,CAAf;AAAiB;AAApC,CAA7C,EAAmF,CAAnF;AAEnB;AAEAJ,eAAeK,SAAf,CAAyBC,IAAzB,GAAgC;AAC9BC,iBAAe,UAAUC,KAAV,EAAiB;AAC9B,WAAOC,OAAOC,WAAP,CAAmB,sBAAsBF,KAAzC,CAAP;AACD,GAH6B;AAK9BG,eAAa,UAAUH,KAAV,EAAiB;AAC5B,WAAOC,OAAOC,WAAP,CAAmB,oBAAoBF,KAAvC,CAAP;AACD,GAP6B;AAS9BI,iBAAe,UAAUJ,KAAV,EAAiB;AAC9B,WAAOC,OAAOC,WAAP,CAAmB,sBAAsBF,KAAzC,CAAP;AACD;AAX6B,CAAhC","file":"packages/accounts-base/url_server.js.map","sourcesContent":["import {AccountsServer} from \"./accounts_server.js\";\n\n// XXX These should probably not actually be public?\n\nAccountsServer.prototype.urls = {\n  resetPassword: function (token) {\n    return Meteor.absoluteUrl('#/reset-password/' + token);\n  },\n\n  verifyEmail: function (token) {\n    return Meteor.absoluteUrl('#/verify-email/' + token);\n  },\n\n  enrollAccount: function (token) {\n    return Meteor.absoluteUrl('#/enroll-account/' + token);\n  }\n};\n"]},"hash":"7087fed2cbdfdd5a01df7b9a942a3bb439a3f291"}
