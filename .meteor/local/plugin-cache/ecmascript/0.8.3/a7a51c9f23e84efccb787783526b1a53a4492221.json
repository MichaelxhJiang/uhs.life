{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/ecmascript/ecmascript.js","filenameRelative":"packages/ecmascript/ecmascript.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ecmascript/ecmascript.js.map","sourceFileName":"packages/ecmascript/ecmascript.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ecmascript"},"ignored":false,"code":"ECMAScript = {\n  compileForShell: function (command) {\n    var babelOptions = Babel.getDefaultOptions();\n    babelOptions.sourceMap = false;\n    babelOptions.ast = false;\n    return Babel.compile(command, babelOptions).code;\n  }\n};","map":{"version":3,"sources":["packages/ecmascript/ecmascript.js"],"names":["ECMAScript","compileForShell","command","babelOptions","Babel","getDefaultOptions","sourceMap","ast","compile","code"],"mappings":"AAAAA,aAAa;AACXC,iBADW,YACKC,OADL,EACc;AACvB,QAAMC,eAAeC,MAAMC,iBAAN,EAArB;AACAF,iBAAaG,SAAb,GAAyB,KAAzB;AACAH,iBAAaI,GAAb,GAAmB,KAAnB;AACA,WAAOH,MAAMI,OAAN,CAAcN,OAAd,EAAuBC,YAAvB,EAAqCM,IAA5C;AACD;AANU,CAAb","file":"packages/ecmascript/ecmascript.js.map","sourcesContent":["ECMAScript = {\n  compileForShell(command) {\n    const babelOptions = Babel.getDefaultOptions();\n    babelOptions.sourceMap = false;\n    babelOptions.ast = false;\n    return Babel.compile(command, babelOptions).code;\n  }\n};\n"]},"hash":"a7a51c9f23e84efccb787783526b1a53a4492221"}
