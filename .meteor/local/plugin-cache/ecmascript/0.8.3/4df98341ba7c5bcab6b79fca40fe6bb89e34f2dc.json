{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/ddp-client/stub_stream.js","filenameRelative":"packages/ddp-client/stub_stream.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ddp-client/stub_stream.js.map","sourceFileName":"packages/ddp-client/stub_stream.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"stub_stream"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nStubStream = function () {\n  var self = this;\n  self.sent = [];\n  self.callbacks = {};\n};\n\n_.extend(StubStream.prototype, {\n  // Methods from Stream\n  on: function (name, callback) {\n    var self = this;\n    if (!self.callbacks[name]) self.callbacks[name] = [callback];else self.callbacks[name].push(callback);\n  },\n  send: function (data) {\n    var self = this;\n    self.sent.push(data);\n  },\n  status: function () {\n    return {\n      status: \"connected\",\n      fake: true\n    };\n  },\n  reconnect: function () {// no-op\n  },\n  _lostConnection: function () {// no-op\n  },\n  // Methods for tests\n  receive: function (data) {\n    var self = this;\n\n    if ((typeof data === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(data)) === 'object') {\n      data = EJSON.stringify(data);\n    }\n\n    _.each(self.callbacks['message'], function (cb) {\n      cb(data);\n    });\n  },\n  reset: function () {\n    var self = this;\n\n    _.each(self.callbacks['reset'], function (cb) {\n      cb();\n    });\n  },\n  // Provide a tag to detect stub streams.\n  // We don't log heartbeat failures on stub streams, for example.\n  _isStub: true\n});","map":{"version":3,"sources":["packages/ddp-client/stub_stream.js"],"names":["StubStream","self","sent","callbacks","_","extend","prototype","on","name","callback","push","send","data","status","fake","reconnect","_lostConnection","receive","EJSON","stringify","each","cb","reset","_isStub"],"mappings":";;;;;;AAAAA,aAAa,YAAY;AACvB,MAAIC,OAAO,IAAX;AAEAA,OAAKC,IAAL,GAAY,EAAZ;AACAD,OAAKE,SAAL,GAAiB,EAAjB;AACD,CALD;;AAQAC,EAAEC,MAAF,CAASL,WAAWM,SAApB,EAA+B;AAC7B;AACAC,MAAI,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AAC5B,QAAIR,OAAO,IAAX;AAEA,QAAI,CAACA,KAAKE,SAAL,CAAeK,IAAf,CAAL,EACEP,KAAKE,SAAL,CAAeK,IAAf,IAAuB,CAACC,QAAD,CAAvB,CADF,KAGER,KAAKE,SAAL,CAAeK,IAAf,EAAqBE,IAArB,CAA0BD,QAA1B;AACH,GAT4B;AAW7BE,QAAM,UAAUC,IAAV,EAAgB;AACpB,QAAIX,OAAO,IAAX;AACAA,SAAKC,IAAL,CAAUQ,IAAV,CAAeE,IAAf;AACD,GAd4B;AAgB7BC,UAAQ,YAAY;AAClB,WAAO;AAACA,cAAQ,WAAT;AAAsBC,YAAM;AAA5B,KAAP;AACD,GAlB4B;AAoB7BC,aAAW,YAAY,CACrB;AACD,GAtB4B;AAwB7BC,mBAAiB,YAAY,CAC3B;AACD,GA1B4B;AA4B7B;AACAC,WAAS,UAAUL,IAAV,EAAgB;AACvB,QAAIX,OAAO,IAAX;;AAEA,QAAI,QAAOW,IAAP,uDAAOA,IAAP,OAAgB,QAApB,EAA8B;AAC5BA,aAAOM,MAAMC,SAAN,CAAgBP,IAAhB,CAAP;AACD;;AAEDR,MAAEgB,IAAF,CAAOnB,KAAKE,SAAL,CAAe,SAAf,CAAP,EAAkC,UAAUkB,EAAV,EAAc;AAC9CA,SAAGT,IAAH;AACD,KAFD;AAGD,GAvC4B;AAyC7BU,SAAO,YAAY;AACjB,QAAIrB,OAAO,IAAX;;AACAG,MAAEgB,IAAF,CAAOnB,KAAKE,SAAL,CAAe,OAAf,CAAP,EAAgC,UAAUkB,EAAV,EAAc;AAC5CA;AACD,KAFD;AAGD,GA9C4B;AAgD7B;AACA;AACAE,WAAS;AAlDoB,CAA/B","file":"packages/ddp-client/stub_stream.js.map","sourcesContent":["StubStream = function () {\n  var self = this;\n\n  self.sent = [];\n  self.callbacks = {};\n};\n\n\n_.extend(StubStream.prototype, {\n  // Methods from Stream\n  on: function (name, callback) {\n    var self = this;\n\n    if (!self.callbacks[name])\n      self.callbacks[name] = [callback];\n    else\n      self.callbacks[name].push(callback);\n  },\n\n  send: function (data) {\n    var self = this;\n    self.sent.push(data);\n  },\n\n  status: function () {\n    return {status: \"connected\", fake: true};\n  },\n\n  reconnect: function () {\n    // no-op\n  },\n\n  _lostConnection: function () {\n    // no-op\n  },\n\n  // Methods for tests\n  receive: function (data) {\n    var self = this;\n\n    if (typeof data === 'object') {\n      data = EJSON.stringify(data);\n    }\n\n    _.each(self.callbacks['message'], function (cb) {\n      cb(data);\n    });\n  },\n\n  reset: function () {\n    var self = this;\n    _.each(self.callbacks['reset'], function (cb) {\n      cb();\n    });\n  },\n\n  // Provide a tag to detect stub streams.\n  // We don't log heartbeat failures on stub streams, for example.\n  _isStub: true\n});\n"]},"hash":"4df98341ba7c5bcab6b79fca40fe6bb89e34f2dc"}
