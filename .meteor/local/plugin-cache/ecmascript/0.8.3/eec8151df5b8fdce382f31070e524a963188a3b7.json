{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"chart.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"chart"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/lib/charting.js","filenameRelative":"imports/ui/lib/charting.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/lib/charting.js.map","sourceFileName":"imports/ui/lib/charting.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"charting"},"ignored":false,"code":"var chart = void 0;\nmodule.watch(require(\"chart.js\"), {\n    \"default\": function (v) {\n        chart = v;\n    }\n}, 0);\n// Chart options\nChart.defaults.global.legend.display = false;\nChart.defaults.global.tooltips.enabled = true;\n\ndrawChart = function (chartId, mark) {\n    //$( \"canvas#\"+chartId ).replaceWith( \"<canvas id='\" + chartId + \"'></canvas>\" );\n    var color = void 0;\n\n    if (mark >= 95) {\n        color = \"#009688\";\n    } else if (mark >= 90) {\n        color = \"#4caf50\";\n    } else if (mark >= 85) {\n        color = \"#8bc34a\";\n    } else if (mark >= 80) {\n        color = \"#cddc39\";\n    } else if (mark >= 75) {\n        color = \"#ffeb3b\";\n    } else if (mark >= 70) {\n        color = \"#ffc107\";\n    } else if (mark >= 60) {\n        color = \"#ff9800\";\n    } else if (mark >= 55) {\n        color = \"#ff5722\";\n    } else if (mark < 55) {\n        color = \"#f44336\";\n    }\n\n    var ctx = document.getElementById(chartId).getContext(\"2d\"); //This will get the first returned node in the jQuery collection.\n\n    return new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n            labels: [\"Achievements\", \"Losts\"],\n            datasets: [{\n                data: [mark, (100 - mark).toFixed(1)],\n                backgroundColor: [color, \"#A9A9A9\"],\n                hoverBackgroundColor: [color, \"#A9A9A9\"]\n            }]\n        }\n    });\n};\n\ndrawSmallChartSide = function (chartId, mark, color) {\n    $(\"canvas#\" + chartId).replaceWith(\"<canvas id=\" + chartId + \" width='20' height='20'></canvas>\"); //Get context with jQuery - using jQuery's .get() method.\n\n    var ctx = document.getElementById(chartId).getContext(\"2d\"); //This will get the first returned node in the jQuery collection.\n\n    myNewChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n            labels: [\"Achievements\", \"Losts\"],\n            datasets: [{\n                data: [mark, (100 - mark).toFixed(1)],\n                backgroundColor: [color, \"#A9A9A9\"],\n                hoverBackgroundColor: [color, \"#A9A9A9\"]\n            }]\n        },\n        options: {\n            animation: false\n        }\n    });\n};\n\ndrawSmallChart = function (chartId, mark, color) {\n    $(\"canvas#\" + chartId).replaceWith(\"<canvas id=\" + chartId + \"></canvas>\"); //Get context with jQuery - using jQuery's .get() method.\n\n    var ctx = document.getElementById(chartId).getContext(\"2d\"); //This will get the first returned node in the jQuery collection.\n\n    var myNewChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n            labels: [\"Achievements\", \"Losts\"],\n            datasets: [{\n                data: [mark, (100 - mark).toFixed(1)],\n                backgroundColor: [color, \"#A9A9A9\"],\n                hoverBackgroundColor: [color, \"#A9A9A9\"]\n            }]\n        },\n        options: {\n            animation: false\n        }\n    });\n};\n\ndrawPolyChart = function (chartId, assignments, marks) {\n    //Get context with jQuery - using jQuery's .get() method.\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\n    var data = {\n        labels: assignments,\n        datasets: [{\n            label: \"M.A.T.A.\",\n            fill: true,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: marks,\n            spanGaps: false\n        }]\n    }; //This will get the first returned node in the jQuery collection.\n\n    var myChart = new Chart(ctx, {\n        type: 'line',\n        data: data,\n        options: {\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        display: false\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        display: true\n                    }\n                }]\n            }\n        }\n    });\n};\n\ndrawPerformChart = function (chartId, assignments, k, t, c, a) {\n    //Get context with jQuery - using jQuery's .get() method.\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\n    var data = {\n        labels: assignments,\n        datasets: [{\n            label: \"Knowledge\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(255,193,7,0.4)\",\n            borderColor: \"rgba(255,193,7,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(255,193,7,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(255,193,7,1)\",\n            pointHoverBorderColor: \"rgba(255,193,7,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: k,\n            spanGaps: true\n        }, {\n            label: \"Thinking\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(76,175,80,0.4)\",\n            borderColor: \"rgba(76,175,80,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(76,175,80,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(76,175,80,1)\",\n            pointHoverBorderColor: \"rgba(76,175,80,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: t,\n            spanGaps: true\n        }, {\n            label: \"Communication\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(103,58,183,0.4)\",\n            borderColor: \"rgba(103,58,183,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(103,58,183,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(103,58,183,1)\",\n            pointHoverBorderColor: \"rgba(103,58,183,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: c,\n            spanGaps: true\n        }, {\n            label: \"Application\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(255,87,34,0.4)\",\n            borderColor: \"rgba(255,87,34,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(255,87,34,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(255,87,34,1)\",\n            pointHoverBorderColor: \"rgba(255,87,34,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: a,\n            spanGaps: true\n        }]\n    }; //This will get the first returned node in the jQuery collection.\n\n    var myChart = new Chart(ctx, {\n        type: 'line',\n        data: data,\n        options: {\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        display: false\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        display: true\n                    }\n                }]\n            }\n        }\n    });\n};\n\ndrawHalfChart = function (chartId, mark, total, color) {\n    var data = {\n        labels: [\"Achievements\", \"Losts\"],\n        datasets: [{\n            data: [mark, total - mark],\n            backgroundColor: [color, \"#A9A9A9\"],\n            hoverBackgroundColor: [color, \"#A9A9A9\"]\n        }]\n    };\n    var ctx = document.getElementById(chartId).getContext(\"2d\"); // And for a doughnut chart\n\n    var myDoughnutChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: data,\n        options: {\n            cutoutPercentage: 70,\n            rotation: 1 * Math.PI,\n            circumference: 1 * Math.PI,\n            animation: false\n        }\n    });\n};\n\ndrawHalfChartSide = function (chartId, mark, total, color) {\n    $(\"canvas#\" + chartId).replaceWith(\"<canvas id=\" + chartId + \"></canvas>\");\n    var data = {\n        labels: [\"Achievements\", \"Losts\"],\n        datasets: [{\n            data: [mark, total - mark],\n            backgroundColor: [color, \"#A9A9A9\"],\n            hoverBackgroundColor: [color, \"#A9A9A9\"]\n        }]\n    };\n    var ctx = document.getElementById(chartId).getContext(\"2d\"); // And for a doughnut chart\n\n    var myDoughnutChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: data,\n        options: {\n            cutoutPercentage: 70,\n            rotation: 1 * Math.PI,\n            circumference: 1 * Math.PI,\n            animation: false\n        }\n    });\n};\n\ndrawPolyChartSide = function (chartId, assignments, marks) {\n    $(\"canvas#\" + chartId).replaceWith(\"<canvas id=\" + chartId + \"></canvas>\"); //Get context with jQuery - using jQuery's .get() method.\n\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\n    var data = {\n        labels: assignments,\n        datasets: [{\n            label: \"M.A.T.A.\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 5,\n            pointHitRadius: 10,\n            data: marks,\n            spanGaps: false\n        }]\n    }; //This will get the first returned node in the jQuery collection.\n\n    var myChart = new Chart(ctx, {\n        type: 'line',\n        data: data,\n        options: {\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        display: false\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        display: false\n                    }\n                }]\n            }\n        }\n    });\n};","map":{"version":3,"sources":["imports/ui/lib/charting.js"],"names":["chart","module","watch","require","v","Chart","defaults","global","legend","display","tooltips","enabled","drawChart","chartId","mark","color","ctx","document","getElementById","getContext","type","data","labels","datasets","toFixed","backgroundColor","hoverBackgroundColor","drawSmallChartSide","$","replaceWith","myNewChart","options","animation","drawSmallChart","drawPolyChart","assignments","marks","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","myChart","scales","xAxes","ticks","yAxes","drawPerformChart","k","t","c","a","drawHalfChart","total","myDoughnutChart","cutoutPercentage","rotation","Math","PI","circumference","drawHalfChartSide","drawPolyChartSide"],"mappings":"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","file":"imports/ui/lib/charting.js.map","sourcesContent":["import chart from 'chart.js';\r\n\r\n// Chart options\r\nChart.defaults.global.legend.display = false;\r\nChart.defaults.global.tooltips.enabled = true;\r\ndrawChart = function(chartId, mark){\r\n    //$( \"canvas#\"+chartId ).replaceWith( \"<canvas id='\" + chartId + \"'></canvas>\" );\r\n    let color;\r\n    if(mark >= 95){\r\n        color = \"#009688\";\r\n    }else if(mark >= 90){\r\n        color = \"#4caf50\";\r\n    }else if(mark >=85){\r\n        color = \"#8bc34a\";\r\n    }else if(mark >=80){\r\n        color = \"#cddc39\";\r\n    }else if(mark >=75){\r\n        color = \"#ffeb3b\";\r\n    }else if(mark >=70){\r\n        color = \"#ffc107\";\r\n    }else if(mark >=60){\r\n        color = \"#ff9800\";\r\n    }else if(mark >=55){\r\n        color = \"#ff5722\";\r\n    }else if(mark < 55){\r\n        color = \"#f44336\";\r\n    }\r\n    let ctx = document.getElementById(chartId).getContext(\"2d\");\r\n    //This will get the first returned node in the jQuery collection.\r\n    return new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n            labels: [\r\n                \"Achievements\",\r\n                \"Losts\"\r\n            ],\r\n            datasets: [\r\n                {\r\n                    data: [mark, (100-mark).toFixed(1)],\r\n                    backgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ]\r\n                }]\r\n        }\r\n    });\r\n}\r\n\r\ndrawSmallChartSide = function(chartId, mark, color){\r\n    $( \"canvas#\"+chartId ).replaceWith( \"<canvas id=\"+chartId+\" width='20' height='20'></canvas>\" );\r\n    //Get context with jQuery - using jQuery's .get() method.\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n    //This will get the first returned node in the jQuery collection.\r\n    myNewChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n            labels: [\r\n                \"Achievements\",\r\n                \"Losts\"\r\n            ],\r\n            datasets: [\r\n                {\r\n                    data: [mark, (100-mark).toFixed(1)],\r\n                    backgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ]\r\n                }]\r\n        },\r\n        options: {\r\n            animation: false\r\n        }\r\n    });\r\n}\r\n\r\ndrawSmallChart = function(chartId, mark, color){\r\n    $( \"canvas#\"+chartId ).replaceWith( \"<canvas id=\"+chartId+\"></canvas>\" );\r\n    //Get context with jQuery - using jQuery's .get() method.\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n    //This will get the first returned node in the jQuery collection.\r\n    var myNewChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n            labels: [\r\n                \"Achievements\",\r\n                \"Losts\"\r\n            ],\r\n            datasets: [\r\n                {\r\n                    data: [mark, (100-mark).toFixed(1)],\r\n                    backgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        color,\r\n                        \"#A9A9A9\"\r\n                    ]\r\n                }]\r\n        },\r\n        options: {\r\n            animation: false\r\n        }\r\n    });\r\n}\r\n\r\ndrawPolyChart = function(chartId, assignments, marks){\r\n\r\n    //Get context with jQuery - using jQuery's .get() method.\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n\r\n    var data = {\r\n        labels: assignments,\r\n        datasets: [\r\n            {\r\n                label: \"M.A.T.A.\",\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: marks,\r\n                spanGaps: false,\r\n            }\r\n        ]\r\n    };\r\n    //This will get the first returned node in the jQuery collection.\r\n    var myChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        display: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\ndrawPerformChart = function(chartId, assignments, k, t, c, a){\r\n\r\n    //Get context with jQuery - using jQuery's .get() method.\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n\r\n    var data = {\r\n        labels: assignments,\r\n        datasets: [\r\n            {\r\n                label: \"Knowledge\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(255,193,7,0.4)\",\r\n                borderColor: \"rgba(255,193,7,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(255,193,7,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(255,193,7,1)\",\r\n                pointHoverBorderColor: \"rgba(255,193,7,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: k,\r\n                spanGaps: true,\r\n            },\r\n            {\r\n                label: \"Thinking\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(76,175,80,0.4)\",\r\n                borderColor: \"rgba(76,175,80,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(76,175,80,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(76,175,80,1)\",\r\n                pointHoverBorderColor: \"rgba(76,175,80,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: t,\r\n                spanGaps: true,\r\n            },\r\n            {\r\n                label: \"Communication\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(103,58,183,0.4)\",\r\n                borderColor: \"rgba(103,58,183,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(103,58,183,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(103,58,183,1)\",\r\n                pointHoverBorderColor: \"rgba(103,58,183,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: c,\r\n                spanGaps: true,\r\n            },\r\n            {\r\n                label: \"Application\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(255,87,34,0.4)\",\r\n                borderColor: \"rgba(255,87,34,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(255,87,34,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(255,87,34,1)\",\r\n                pointHoverBorderColor: \"rgba(255,87,34,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: a,\r\n                spanGaps: true,\r\n            }\r\n        ]\r\n    };\r\n    //This will get the first returned node in the jQuery collection.\r\n    var myChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        display: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\ndrawHalfChart = function(chartId, mark, total, color){\r\n    var data = {\r\n        labels: [\r\n            \"Achievements\",\r\n            \"Losts\"\r\n        ],\r\n        datasets: [{\r\n            data: [mark, total-mark],\r\n            backgroundColor: [\r\n                color,\r\n                \"#A9A9A9\"\r\n            ],\r\n            hoverBackgroundColor: [\r\n                color,\r\n                \"#A9A9A9\"\r\n            ]\r\n        }]\r\n    };\r\n\r\n\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n\r\n// And for a doughnut chart\r\n    var myDoughnutChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: data,\r\n        options: {\r\n            cutoutPercentage: 70,\r\n            rotation: 1 * Math.PI,\r\n            circumference: 1 * Math.PI,\r\n            animation: false\r\n        }\r\n    });\r\n}\r\n\r\ndrawHalfChartSide = function(chartId, mark, total, color){\r\n    $( \"canvas#\"+chartId ).replaceWith( \"<canvas id=\"+chartId+\"></canvas>\" );\r\n    var data = {\r\n        labels: [\r\n            \"Achievements\",\r\n            \"Losts\"\r\n        ],\r\n        datasets: [{\r\n            data: [mark, total-mark],\r\n            backgroundColor: [\r\n                color,\r\n                \"#A9A9A9\"\r\n            ],\r\n            hoverBackgroundColor: [\r\n                color,\r\n                \"#A9A9A9\"\r\n            ]\r\n        }]\r\n    };\r\n\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n\r\n// And for a doughnut chart\r\n    var myDoughnutChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: data,\r\n        options: {\r\n            cutoutPercentage: 70,\r\n            rotation: 1 * Math.PI,\r\n            circumference: 1 * Math.PI,\r\n            animation: false\r\n        }\r\n    });\r\n}\r\n\r\ndrawPolyChartSide = function(chartId, assignments, marks){\r\n    $( \"canvas#\"+chartId ).replaceWith( \"<canvas id=\"+chartId+\"></canvas>\" );\r\n    //Get context with jQuery - using jQuery's .get() method.\r\n    var ctx = document.getElementById(chartId).getContext(\"2d\");\r\n\r\n    var data = {\r\n        labels: assignments,\r\n        datasets: [\r\n            {\r\n                label: \"M.A.T.A.\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                pointHitRadius: 10,\r\n                data: marks,\r\n                spanGaps: false,\r\n            }\r\n        ]\r\n    };\r\n    //This will get the first returned node in the jQuery collection.\r\n    var myChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: data,\r\n        options: {\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        display: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        display: false\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n}"]},"hash":"eec8151df5b8fdce382f31070e524a963188a3b7"}
