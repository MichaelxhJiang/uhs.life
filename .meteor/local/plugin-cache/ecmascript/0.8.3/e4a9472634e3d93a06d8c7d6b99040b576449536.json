{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"imagesloaded","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"imagesLoaded"}]},{"source":"./stream.html","imported":[],"specifiers":[]},{"source":"../../api/images/images.js","imported":["Images"],"specifiers":[{"kind":"named","imported":"Images","local":"Images"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/stream.js","filenameRelative":"imports/ui/pages/stream.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/stream.js.map","sourceFileName":"imports/ui/pages/stream.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"stream"},"ignored":false,"code":"var imagesLoaded = void 0;\nmodule.watch(require(\"imagesloaded\"), {\n    \"default\": function (v) {\n        imagesLoaded = v;\n    }\n}, 0);\nmodule.watch(require(\"./stream.html\"));\nvar Images = void 0;\nmodule.watch(require(\"../../api/images/images.js\"), {\n    Images: function (v) {\n        Images = v;\n    }\n}, 1);\nvar isotopeSettings = {\n    itemSelector: '.grid-item',\n    percentPosition: true,\n    masonry: {\n        columnWidth: '.grid-sizer',\n        gutter: '.gutter-sizer'\n    }\n};\nTemplate.stream.onRendered(function () {\n    var $grid = $('.grid');\n    Tracker.autorun(function () {\n        var postSub = Meteor.subscribe('announcements', 10, Meteor.userId());\n        var categorySub = Meteor.subscribe('categories');\n        var imageSub = Meteor.subscribe('images');\n\n        if (postSub.ready()) {\n            $('.grid').isotope(isotopeSettings);\n            $('.grid').imagesLoaded().progress(function () {\n                $('.grid').isotope(isotopeSettings);\n            });\n        }\n    });\n    setTitle('Stream');\n});\nTemplate.stream.helpers({\n    'category': function () {\n        return Categories.find({});\n    },\n    'allPosts': function () {\n        var query = Posts.find({\n            'meta.approved': true,\n            'type': 'announcement'\n        });\n        query.observeChanges({\n            added: function (id, fields) {\n                setTimeout(function () {\n                    $('.grid').isotope('reloadItems');\n                    $('.grid').isotope();\n                }, 500);\n            },\n            changed: function (id, fields) {\n                setTimeout(function () {\n                    $('.grid').isotope('reloadItems');\n                    $('.grid').isotope();\n                }, 500);\n            },\n            removed: function () {\n                setTimeout(function () {\n                    $('.grid').isotope('reloadItems');\n                    $('.grid').isotope();\n                }, 500);\n            }\n        });\n        return query.fetch().reverse();\n    },\n    'effectiveDate': function () {\n        return this.startDate === this.endDate ? moment(this.startDate).format(\"MMMM Do YYYY\") : moment(this.startDate).format(\"MMMM Do YYYY\") + \" - \" + moment(this.endDate).format(\"MMMM Do YYYY\");\n    },\n    'isImageOnly': function () {\n        return this.subType === 'imageOnly' && this.type === 'announcement';\n    },\n    'isTextOnly': function () {\n        return this.subType === 'textOnly' && this.type === 'announcement';\n    },\n    'isImageText': function () {\n        return this.subType === 'imageText' && this.type === 'announcement';\n    },\n    'isBlog': function () {\n        return this.type === 'blog';\n    },\n    'categories': function () {\n        var list = this.categories;\n        var text = \"\";\n\n        _.forEach(list, function (item) {\n            text += item + \" \";\n        });\n\n        return text;\n    },\n    'textOverImage': function () {\n        return this.subType === 'imageText' && this.type === 'announcement' && this.meta.priority === 'text';\n    },\n    'imageOverText': function () {\n        return this.subType === 'imageText' && this.type === 'announcement' && this.meta.priority === 'image';\n    },\n    'writer': function () {\n        return Meteor.users.findOne({\n            _id: this.author\n        }).services.google.name;\n    },\n    'imageLink': function () {\n        if (this.unsplash) {\n            return this.unsplash.urls.full;\n        } else if (this.imgId) {\n            try {\n                return Images.findOne({\n                    _id: this.imgId\n                }).url();\n            } catch (e) {//console.log('error getting photo')\n            }\n        }\n    }\n});\nTemplate.stream.events({\n    'click .filter-btn': function (evt) {\n        var filterValue = $(evt.target).attr('data-filter');\n        $('.is-checked').removeClass('is-checked');\n        $(evt.target).addClass('is-checked');\n        $('.grid').isotope({\n            filter: filterValue\n        });\n    },\n    'click .blog-item': function (evt, template) {\n        var obj = $(evt.target).closest($('.blog-item'));\n        var id = obj.attr('id');\n        FlowRouter.go('/blog/' + id);\n    }\n});\n\ngetUnsplashLink = function (id) {\n    Meteor.call('setupUnsplash', function (err) {\n        if (err) {\n            console.log(err);\n        } else {\n            console.log(id);\n            Meteor.call('getPhoto', id, function (err, data) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    Session.set('unsplashFeatured', data.urls.full);\n                    $('.grid').isotope();\n                }\n            });\n        }\n    });\n};","map":{"version":3,"sources":["imports/ui/pages/stream.js"],"names":["imagesLoaded","module","watch","require","v","Images","isotopeSettings","itemSelector","percentPosition","masonry","columnWidth","gutter","Template","stream","onRendered","$grid","$","Tracker","autorun","postSub","Meteor","subscribe","userId","categorySub","imageSub","ready","isotope","progress","setTitle","helpers","Categories","find","query","Posts","observeChanges","added","id","fields","setTimeout","changed","removed","fetch","reverse","startDate","endDate","moment","format","subType","type","list","categories","text","_","forEach","item","meta","priority","users","findOne","_id","author","services","google","name","unsplash","urls","full","imgId","url","e","events","evt","filterValue","target","attr","removeClass","addClass","filter","template","obj","closest","FlowRouter","go","getUnsplashLink","call","err","console","log","data","Session","set"],"mappings":"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","file":"imports/ui/pages/stream.js.map","sourcesContent":["/**\r\n * Created by Yonglin Wang on 7/31/2017.\r\n */\r\nimport imagesLoaded from 'imagesloaded';\r\nimport './stream.html'\r\nimport { Images } from '../../api/images/images.js';\r\nlet isotopeSettings = {\r\n    itemSelector: '.grid-item',\r\n    percentPosition: true,\r\n    masonry: {\r\n        columnWidth: '.grid-sizer',\r\n        gutter: '.gutter-sizer'\r\n    }\r\n};\r\nTemplate.stream.onRendered(function () {\r\n    let $grid = $('.grid');\r\n    Tracker.autorun(function () {\r\n        let postSub = Meteor.subscribe('announcements', 10, Meteor.userId());\r\n        let categorySub = Meteor.subscribe('categories');\r\n        let imageSub = Meteor.subscribe('images');\r\n        if(postSub.ready()){\r\n            $('.grid').isotope(isotopeSettings);\r\n            $('.grid').imagesLoaded().progress( function() {\r\n                $('.grid').isotope(isotopeSettings);\r\n            });\r\n        }\r\n    });\r\n    setTitle('Stream');\r\n});\r\n\r\nTemplate.stream.helpers({\r\n    'category': function () {\r\n      return Categories.find({});\r\n    },\r\n    'allPosts': function () {\r\n        let query = Posts.find({\r\n            'meta.approved': true,\r\n            'type': 'announcement'\r\n        });\r\n        query.observeChanges({\r\n            added: function(id, fields) {\r\n                setTimeout(function () {\r\n                    $('.grid').isotope('reloadItems');\r\n                    $('.grid').isotope()\r\n                }, 500);\r\n            },\r\n            changed: function(id, fields) {\r\n                setTimeout(function () {\r\n                    $('.grid').isotope('reloadItems');\r\n                    $('.grid').isotope()\r\n                }, 500);\r\n            },\r\n            removed: function() {\r\n                setTimeout(function () {\r\n                    $('.grid').isotope('reloadItems');\r\n                    $('.grid').isotope()\r\n                }, 500);\r\n            }\r\n        });\r\n        return query.fetch().reverse();\r\n    },\r\n    'effectiveDate': function () {\r\n        return (this.startDate === this.endDate) ? moment(this.startDate).format(\"MMMM Do YYYY\") : moment(this.startDate).format(\"MMMM Do YYYY\") + \" - \" + moment(this.endDate).format(\"MMMM Do YYYY\");\r\n    },\r\n    'isImageOnly': function () {\r\n        return this.subType === 'imageOnly' && this.type === 'announcement'\r\n    },\r\n    'isTextOnly': function () {\r\n        return this.subType === 'textOnly' && this.type === 'announcement'\r\n    },\r\n    'isImageText': function () {\r\n        return this.subType === 'imageText' && this.type === 'announcement'\r\n    },\r\n    'isBlog': function () {\r\n        return this.type === 'blog'\r\n    },\r\n    'categories': function () {\r\n        let list = this.categories;\r\n        let text = \"\";\r\n        _.forEach(list,function (item) {\r\n            text += item + \" \"\r\n        });\r\n        return text;\r\n    },\r\n    'textOverImage': function () {\r\n        return this.subType === 'imageText' && this.type === 'announcement' && this.meta.priority === 'text'\r\n    },\r\n    'imageOverText': function () {\r\n        return this.subType === 'imageText' && this.type === 'announcement' && this.meta.priority === 'image'\r\n    },\r\n    'writer': function () {\r\n        return Meteor.users.findOne({_id: this.author}).services.google.name;\r\n    },\r\n    'imageLink': function () {\r\n        if(this.unsplash){\r\n            return this.unsplash.urls.full;\r\n        }else if(this.imgId){\r\n            try{\r\n                return Images.findOne({_id: this.imgId}).url();\r\n            }catch(e){\r\n                //console.log('error getting photo')\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nTemplate.stream.events({\r\n    'click .filter-btn': function (evt) {\r\n        let filterValue = $(evt.target).attr('data-filter');\r\n        $('.is-checked').removeClass('is-checked');\r\n        $(evt.target).addClass('is-checked');\r\n        $('.grid').isotope({ filter: filterValue });\r\n    },\r\n    'click .blog-item': function (evt,template) {\r\n        let obj = $(evt.target).closest($('.blog-item'));\r\n        let id = obj.attr('id');\r\n        FlowRouter.go('/blog/'+id);\r\n    }\r\n});\r\ngetUnsplashLink = function (id) {\r\n    Meteor.call('setupUnsplash', function (err) {\r\n        if(err){\r\n            console.log(err);\r\n        }else{\r\n            console.log(id);\r\n            Meteor.call('getPhoto', id, function (err,data) {\r\n                if(err){\r\n                    console.log(err);\r\n                }else{\r\n                    Session.set('unsplashFeatured', data.urls.full);\r\n                    $('.grid').isotope();\r\n                }\r\n            })\r\n        }\r\n    });\r\n};"]},"hash":"e4a9472634e3d93a06d8c7d6b99040b576449536"}
